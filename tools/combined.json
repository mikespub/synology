{
    "SYNO.API": {
        "SYNO.API.Auth": {
            "lib": "lib/SYNO.API.Auth.so",
            "maxVersion": 7,
            "methods": {
                "1": [
                    "logout"
                ],
                "2": [
                    "logout"
                ],
                "3": [
                    "logout",
                    "login"
                ],
                "4": [
                    "logout",
                    "login"
                ],
                "5": [
                    "synotoken",
                    "session",
                    "logout",
                    "login"
                ],
                "6": [
                    "oidc",
                    "Logout",
                    "Login",
                    "reset",
                    "session",
                    "synotoken",
                    "token",
                    "logout",
                    "login"
                ],
                "7": [
                    "suspend",
                    "resume",
                    "reset",
                    "logout",
                    "login"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi"
        },
        "SYNO.API.Auth.Key": {
            "lib": "lib/SYNO.API.Auth.so",
            "maxVersion": 7,
            "methods": {
                "7": [
                    "grant",
                    "get"
                ]
            },
            "minVersion": 7,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.API.Auth.Key.Code": {
            "lib": "lib/SYNO.API.Auth.so",
            "maxVersion": 7,
            "methods": {
                "7": [
                    "get"
                ]
            },
            "minVersion": 7,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.API.Auth.RedirectURI": {
            "lib": "lib/SYNO.API.Auth.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "check"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.API.Auth.Type": {
            "lib": "lib/SYNO.API.Auth.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.API.Auth.UIConfig": {
            "lib": "lib/SYNO.API.Auth.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.API.Encryption": {
            "lib": "lib/SYNO.API.Encryption.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "getinfo"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.API.Info": {
            "lib": "lib/SYNO.API.Info.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "query",
                    "Query"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        }
    },
    "SYNO.ActiveInsight": {
        "SYNO.ActiveInsight.Package": {
            "lib": "ActiveInsight/SYNO.ActiveInsight.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "get_status",
                    "start_mib",
                    "stop_mib",
                    "change_mode"
                ],
                "2": [
                    "get_status",
                    "start_mib",
                    "stop_mib",
                    "change_mode"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        }
    },
    "SYNO.AudioPlayer": {
        "SYNO.AudioPlayer": {
            "lib": "/usr/syno/synoman/webapi/lib/SYNO.AudioPlayer.so",
            "maxVersion": 2,
            "methods": {
                "2": [
                    "list_media_info",
                    "get_media_info",
                    "get_support_info"
                ]
            },
            "minVersion": 2,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.AudioPlayer.Stream": {
            "lib": "/usr/syno/synoman/webapi/lib/SYNO.AudioPlayer.so",
            "maxVersion": 2,
            "methods": {
                "2": [
                    "transcode",
                    "stream"
                ]
            },
            "minVersion": 2,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        }
    },
    "SYNO.Auth": {
        "SYNO.Auth.ForgotPwd": {
            "lib": "lib/SYNO.Auth.ForgotPwd.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "send",
                    "reset"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        }
    },
    "SYNO.Backup": {
        "SYNO.Backup.App": {
            "lib": "lib/SYNO.Backup.App.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get_icon"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Backup.App.Backup": {
            "lib": "lib/SYNO.Backup.App.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "mysql_check",
                    "surveillance_check"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Backup.App.Restore": {
            "lib": "lib/SYNO.Backup.App.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "mysql_check",
                    "surveillance_check"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Backup.Config.AutoBackup": {
            "lib": "lib/SYNO.Backup.Config.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "set",
                    "get",
                    "backup",
                    "list",
                    "restore",
                    "get_meta",
                    "download_private_key",
                    "upload_private_key",
                    "status"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Backup.Config.Backup": {
            "lib": "lib/SYNO.Backup.Config.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list",
                    "start",
                    "status",
                    "download"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Backup.Config.Restore": {
            "lib": "lib/SYNO.Backup.Config.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "upload",
                    "list",
                    "delete",
                    "list_conflict",
                    "check",
                    "start",
                    "status"
                ],
                "2": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Backup.Service.NetworkBackup": {
            "lib": "lib/SYNO.Core.FileServ.Rsync.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Backup.Storage.AmazonCloudDrive.Container": {
            "lib": "/var/packages/HyperBackup/target/webapi/SYNO.Backup.Storage.AmazonCloudDrive.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list",
                    "create"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Backup.Storage.Azure.Container": {
            "lib": "/var/packages/HyperBackup/target/webapi/SYNO.Backup.Storage.Azure.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list",
                    "create"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Backup.Storage.Dropbox.Container": {
            "lib": "/var/packages/HyperBackup/target/webapi/SYNO.Backup.Storage.Dropbox.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list",
                    "create"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Backup.Storage.GoogleDrive.Container": {
            "lib": "/var/packages/HyperBackup/target/webapi/SYNO.Backup.Storage.GoogleDrive.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list",
                    "create"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Backup.Storage.HiDrive.Container": {
            "lib": "/var/packages/HyperBackup/target/webapi/SYNO.Backup.Storage.HiDrive.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list",
                    "create"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Backup.Storage.OpenStack.Container": {
            "lib": "/var/packages/HyperBackup/target/webapi/SYNO.Backup.Storage.OpenStack.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list",
                    "create"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Backup.Storage.OpenStack.Region": {
            "lib": "/var/packages/HyperBackup/target/webapi/SYNO.Backup.Storage.OpenStack.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Backup.Storage.S3.Bucket": {
            "lib": "/var/packages/HyperBackup/target/webapi/SYNO.Backup.Storage.S3.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list",
                    "create"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Backup.Storage.WebDAV.Container": {
            "lib": "/var/packages/HyperBackup/target/webapi/SYNO.Backup.Storage.WebDAV.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list",
                    "create"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Backup.Storage.hubiC.Container": {
            "lib": "/var/packages/HyperBackup/target/webapi/SYNO.Backup.Storage.hubiC.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list",
                    "create"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Backup.App2.Backup": {
            "lib": "/var/packages/HyperBackup/target/webapi/SYNO.Backup.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "get"
                ],
                "2": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Backup.App2.Restore": {
            "lib": "/var/packages/HyperBackup/target/webapi/SYNO.Backup.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list_install"
                ],
                "2": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Backup.Lunbackup": {
            "lib": "/var/packages/HyperBackup/target/webapi/SYNO.Backup.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "apply_lun",
                    "restore_lun",
                    "enum_lun",
                    "check_dir",
                    "check_lun",
                    "test_connections",
                    "enum_remote_share",
                    "remote_version_check",
                    "enum_local_lun_dir",
                    "enum_net_lun_dir",
                    "enum_local_restore_lun_name",
                    "enum_net_restore_lun_name",
                    "load_lun_bkp_conf",
                    "get_self_host",
                    "is_bkp_set_conflict",
                    "get_local_dest_dir",
                    "enum_local_bkp_dest",
                    "net_bkp_host",
                    "load_default_adv_schedule",
                    "get_remote_dest_dir",
                    "enum_local_share",
                    "enum_volume",
                    "load_schedule",
                    "delete",
                    "bkpnow",
                    "cancel",
                    "restore_cancel",
                    "load_task",
                    "load_restore_progress",
                    "load_dest_status"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Backup.Repository": {
            "lib": "/var/packages/HyperBackup/target/webapi/SYNO.Backup.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list",
                    "delete",
                    "create",
                    "get",
                    "set",
                    "find",
                    "mount_fireball"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Backup.Repository.Certificate": {
            "lib": "/var/packages/HyperBackup/target/webapi/SYNO.Backup.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "verify",
                    "ignore"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Backup.Repository.LoginPort": {
            "lib": "/var/packages/HyperBackup/target/webapi/SYNO.Backup.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Backup.Restore": {
            "lib": "/var/packages/HyperBackup/target/webapi/SYNO.Backup.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "cancel",
                    "status"
                ],
                "2": [
                    "restore"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Backup.Share.Restore": {
            "lib": "/var/packages/HyperBackup/target/webapi/SYNO.Backup.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Backup.Source.Folder": {
            "lib": "/var/packages/HyperBackup/target/webapi/SYNO.Backup.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Backup.Storage.Connect.Network": {
            "lib": "/var/packages/HyperBackup/target/webapi/SYNO.Backup.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Backup.Storage.Share.Local": {
            "lib": "/var/packages/HyperBackup/target/webapi/SYNO.Backup.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Backup.Storage.Share.Network": {
            "lib": "/var/packages/HyperBackup/target/webapi/SYNO.Backup.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Backup.Storage.Share.Rsync": {
            "lib": "/var/packages/HyperBackup/target/webapi/SYNO.Backup.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Backup.Target": {
            "lib": "/var/packages/HyperBackup/target/webapi/SYNO.Backup.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "create",
                    "delete",
                    "set",
                    "list",
                    "get_candidate_dir",
                    "get",
                    "private_key_download_by_password",
                    "create_cache",
                    "error_detect",
                    "error_detect_cancel",
                    "status",
                    "damage_report_download"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Backup.Target.Config": {
            "lib": "/var/packages/HyperBackup/target/webapi/SYNO.Backup.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Backup.Task": {
            "lib": "/var/packages/HyperBackup/target/webapi/SYNO.Backup.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list",
                    "delete",
                    "backup",
                    "resume",
                    "cancel",
                    "suspend",
                    "discard",
                    "cancel_and_discard",
                    "create",
                    "relink",
                    "import",
                    "reauth",
                    "set",
                    "status",
                    "get",
                    "mark",
                    "get_support_cloud"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Backup.Version": {
            "lib": "/var/packages/HyperBackup/target/webapi/SYNO.Backup.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "lock",
                    "delete",
                    "list_folder",
                    "summary",
                    "rotate",
                    "detail"
                ],
                "2": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Backup.Version.History": {
            "lib": "/var/packages/HyperBackup/target/webapi/SYNO.Backup.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        }
    },
    "SYNO.C2FS": {
        "SYNO.C2FS.Account": {
            "lib": "HybridShare/SYNO.C2FS.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "fetch_info"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.C2FS.Bucket": {
            "lib": "HybridShare/SYNO.C2FS.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "ask_account",
                    "password_key_export",
                    "get_account_mount",
                    "decrypt",
                    "encrypt"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.C2FS.Conf": {
            "lib": "HybridShare/SYNO.C2FS.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "confbackup_import",
                    "confbackup_export"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.C2FS.File": {
            "lib": "HybridShare/SYNO.C2FS.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "evict",
                    "pin",
                    "get_cache_status",
                    "get_local_status"
                ],
                "2": [
                    "evict"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.C2FS.Share": {
            "lib": "HybridShare/SYNO.C2FS.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "set_permission",
                    "stop_daemons",
                    "start_daemons",
                    "restart_daemons",
                    "set",
                    "validate_set",
                    "unmount",
                    "mount",
                    "remount",
                    "validate_delete",
                    "delete",
                    "list",
                    "create",
                    "reauth"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.C2FS.Share.Status": {
            "lib": "HybridShare/SYNO.C2FS.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "is_connected_to_server"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.C2FS.Transform": {
            "lib": "HybridShare/SYNO.C2FS.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "re_add_progress",
                    "list_progress",
                    "export_invalid_files",
                    "cancel",
                    "transform_to_c2share",
                    "validate_for_service",
                    "get_progress"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.C2FS.Utils": {
            "lib": "HybridShare/SYNO.C2FS.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "load_global_config",
                    "get_ds_info",
                    "check_ntp_enable"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        }
    },
    "SYNO.CloudSync": {
        "SYNO.CloudSync": {
            "lib": "/var/packages/CloudSync/target/lib/SYNO.CloudSync.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "pause",
                    "resume",
                    "unlink_connection",
                    "unlink_session",
                    "get_available_clouds",
                    "get_property",
                    "get_config",
                    "set_global_config",
                    "set_personal_config",
                    "get_user_info",
                    "get_log",
                    "get_recently_change",
                    "get_oauth_info",
                    "get_connection_setting",
                    "get_session_setting",
                    "get_selective_folder_list",
                    "get_selective_folder_list_wizard",
                    "get_selective_sync_config",
                    "get_default_selective_sync_config",
                    "re_auth",
                    "re_oauth",
                    "test_connection_s3",
                    "test_connection_b2",
                    "test_connection_openstack",
                    "test_connection_webdav",
                    "test_connection_gcs",
                    "test_connection_acs",
                    "test_task_setting",
                    "set_connection_setting",
                    "set_schedule_setting",
                    "set_session_setting",
                    "set_selective_sync_config",
                    "list_conn",
                    "list_sess",
                    "list_s3_bucket",
                    "list_openstack_region",
                    "list_openstack_container",
                    "create_s3_bucket",
                    "list_gcs_bucket",
                    "create_gcs_bucket",
                    "list_gsd_drive",
                    "update_gsd_conn_info",
                    "list_b2_bucket",
                    "list_share_point_sites",
                    "list_share_point_drives",
                    "create_b2_bucket",
                    "list_acs_container",
                    "create_acs_container",
                    "create_openstack_container",
                    "create_link",
                    "create_session",
                    "export_key",
                    "export_key_by_name",
                    "get_conn_auth_info",
                    "get_server_folder_list",
                    "create_server_folder",
                    "request_onedrive_access_token",
                    "dump_event_tree",
                    "megadisk_request_code",
                    "megadisk_confirm_code"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        }
    },
    "SYNO.Core": {
        "SYNO.Core.ACL": {
            "lib": "lib/SYNO.Core.ACL.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "get",
                    "set",
                    "status",
                    "stop",
                    "list_owners",
                    "inspect",
                    "check_admin",
                    "check_self_denied",
                    "get_ui_info"
                ],
                "2": [
                    "list_owners"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.ActionPriv": {
            "lib": "lib/SYNO.Core.ActionPriv.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set",
                    "preview",
                    "export"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.ActionPriv.Role": {
            "lib": "lib/SYNO.Core.ActionPriv.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.AppNotify": {
            "lib": "lib/SYNO.Core.AppNotify.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "view",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.AppPortal": {
            "lib": "lib/SYNO.Core.AppPortal.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "get",
                    "set",
                    "list"
                ],
                "2": [
                    "get",
                    "set",
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.AppPortal.AccessControl": {
            "lib": "lib/SYNO.Core.AppPortal.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "create",
                    "list",
                    "update",
                    "delete"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.AppPortal.Config": {
            "lib": "lib/SYNO.Core.AppPortal.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.AppPortal.ReverseProxy": {
            "lib": "lib/SYNO.Core.AppPortal.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "create",
                    "list",
                    "update",
                    "delete"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.AppPriv": {
            "lib": "lib/SYNO.Core.AppPriv.so",
            "maxVersion": 2,
            "methods": {
                "1": [],
                "2": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.AppPriv.App": {
            "lib": "lib/SYNO.Core.AppPriv.so",
            "maxVersion": 3,
            "methods": {
                "1": [],
                "2": [
                    "preview",
                    "allowed",
                    "list"
                ],
                "3": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.AppPriv.Rule": {
            "lib": "lib/SYNO.Core.AppPriv.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set",
                    "delete",
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.BandwidthControl": {
            "lib": "lib/SYNO.Core.BandwidthControl.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list",
                    "get",
                    "set"
                ],
                "2": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.BandwidthControl.Protocol": {
            "lib": "lib/SYNO.Core.BandwidthControl.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.BandwidthControl.Status": {
            "lib": "lib/SYNO.Core.BandwidthControl.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "delete"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.CMS.Cache": {
            "lib": "lib/webapi_cache_client.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "push",
                    "reset"
                ],
                "2": [
                    "push"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.CMS.Policy": {
            "lib": "lib/webapi_gpo_client.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "fetch"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.CMS.Info": {
            "lib": "lib/SYNO.Core.CMS.Info.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.CMS": {
            "lib": "lib/SYNO.Core.CMS.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "begin_join",
                    "end_join",
                    "disjoin"
                ],
                "2": [
                    "begin_join",
                    "end_join",
                    "disjoin"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.CMS.ServerInfo": {
            "lib": "lib/SYNO.Core.CMS.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "update"
                ],
                "2": [
                    "update"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.CMS.Task": {
            "lib": "lib/SYNO.Core.CMS.Task.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "create",
                    "query"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.CMS.Token": {
            "lib": "lib/SYNO.Core.CMS.Token.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "update",
                    "check",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.CMS.Identity": {
            "lib": "lib/SYNO.Core.CMS.Identity.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "check"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Certificate": {
            "lib": "lib/SYNO.Core.Certificate.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "export",
                    "import",
                    "reset"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Certificate.CRT": {
            "lib": "lib/SYNO.Core.Certificate.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "create",
                    "recreate",
                    "set",
                    "delete",
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Certificate.CSR": {
            "lib": "lib/SYNO.Core.Certificate.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "create",
                    "renew",
                    "sign"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Certificate.LetsEncrypt": {
            "lib": "lib/SYNO.Core.Certificate.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "create",
                    "renew"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Certificate.LetsEncrypt.Account": {
            "lib": "lib/SYNO.Core.Certificate.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Certificate.Service": {
            "lib": "lib/SYNO.Core.Certificate.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Certificate.Tencent": {
            "lib": "lib/SYNO.Core.Certificate.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "create",
                    "renew"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.CurrentConnection": {
            "lib": "lib/libwebapi-CurrentConnection.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "list",
                    "list_by_user",
                    "kick_connection",
                    "disable_user",
                    "kick_self",
                    "download"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.DDNS.ExtIP": {
            "lib": "lib/SYNO.Core.DDNS.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list"
                ],
                "2": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.DDNS.Provider": {
            "lib": "lib/SYNO.Core.DDNS.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "delete",
                    "set",
                    "update_customized_provider"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.DDNS.Record": {
            "lib": "lib/SYNO.Core.DDNS.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "update_ip_address",
                    "create",
                    "delete",
                    "set",
                    "test"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.DDNS.Synology": {
            "lib": "lib/SYNO.Core.DDNS.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "register_hostname",
                    "send_verified_mail",
                    "list_domain",
                    "get_hostname",
                    "get_myds_account"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.DDNS.TWNIC": {
            "lib": "lib/SYNO.Core.DDNS.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "register_hostname"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.DSMNotify": {
            "lib": "/usr/syno/synoman/webapi/lib/SYNO.Core.DSMNotify.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "notify"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.DSMNotify.MailContent": {
            "lib": "/usr/syno/synoman/webapi/lib/SYNO.Core.DSMNotify.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.DSMNotify.Strings": {
            "lib": "/usr/syno/synoman/webapi/lib/SYNO.Core.DSMNotify.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.DataCollect": {
            "lib": "lib/libwebapi-DataCollect.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.DataCollect.Application": {
            "lib": "lib/libwebapi-DataCollect.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "record"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Desktop.Defs": {
            "lib": "lib/SYNO.Core.Desktop.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "getjs"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Desktop.Initdata": {
            "lib": "lib/SYNO.Core.Desktop.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get_user_lang",
                    "get_user_service",
                    "get_ui_config",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Desktop.JSUIString": {
            "lib": "lib/SYNO.Core.Desktop.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "getjs"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Desktop.PersonalUpdater": {
            "lib": "lib/SYNO.Core.Desktop.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get_update_progress",
                    "need_update",
                    "get_current_job",
                    "start"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Desktop.SessionData": {
            "lib": "lib/SYNO.Core.Desktop.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "getjs",
                    "getjs_mobile",
                    "getjs_forgotpass"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Desktop.Timeout": {
            "lib": "lib/SYNO.Core.Desktop.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "check",
                    "get",
                    "reset"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Desktop.UIString": {
            "lib": "lib/SYNO.Core.Desktop.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "getjs"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Desktop.Upgrade": {
            "lib": "lib/SYNO.Core.Desktop.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get_pgsql",
                    "done"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Directory.Azure.SSO": {
            "lib": "lib/SYNO.Core.Directory.SSO.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Directory.Domain": {
            "lib": "/var/packages/SMBService/target/usr/syno/synoman/webapi/lib/SYNO.Core.Directory.Domain.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "set",
                    "set_status",
                    "set_stop",
                    "get",
                    "sync_time",
                    "test_dc",
                    "get_domain_list",
                    "update_start",
                    "update_status",
                    "update_stop",
                    "join_check",
                    "leave_check",
                    "set_password",
                    "list_candidate_ou",
                    "check_is_rodc"
                ],
                "2": [
                    "set",
                    "get_domain_list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Directory.Domain.Conf": {
            "lib": "/var/packages/SMBService/target/usr/syno/synoman/webapi/lib/SYNO.Core.Directory.Domain.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "set",
                    "get"
                ],
                "2": [
                    "set",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Directory.Domain.Schedule": {
            "lib": "/var/packages/SMBService/target/usr/syno/synoman/webapi/lib/SYNO.Core.Directory.Domain.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "set",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Directory.LDAP": {
            "lib": "lib/SYNO.Core.Directory.LDAP.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "get",
                    "set",
                    "upload_certificate",
                    "refresh",
                    "password",
                    "bind_check",
                    "unbind_check"
                ],
                "2": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Directory.LDAP.BaseDN": {
            "lib": "lib/SYNO.Core.Directory.LDAP.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list"
                ],
                "2": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Directory.LDAP.Login.Notify": {
            "lib": "lib/SYNO.Core.Directory.LDAP.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "check"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Directory.LDAP.Profile": {
            "lib": "lib/SYNO.Core.Directory.LDAP.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list",
                    "get",
                    "set"
                ],
                "2": [
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Directory.LDAP.Refresh": {
            "lib": "lib/SYNO.Core.Directory.LDAP.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "start",
                    "get_status"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Directory.LDAP.User": {
            "lib": "lib/SYNO.Core.Directory.LDAP.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "set_pwd"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Directory.SSO.Profile": {
            "lib": "lib/SYNO.Core.Directory.SSO.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Directory.SSO": {
            "lib": "lib/SYNO.Core.Directory.SSO.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set",
                    "register"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Directory.SSO.IWA": {
            "lib": "lib/SYNO.Core.Directory.SSO.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "set",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Directory.SSO.utils": {
            "lib": "lib/SYNO.Core.Directory.SSO.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "exchange"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Directory.WebSphere.SSO": {
            "lib": "lib/SYNO.Core.Directory.SSO.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.DirectoryServiceCheck.Common": {
            "lib": "lib/SYNO.Core.DirectoryServiceCheck.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "get_stages",
                    "get_last_test",
                    "set_last_test",
                    "test_dns_valid",
                    "test_dns_record",
                    "test_srv_target",
                    "test_srv_target_post",
                    "set_dns",
                    "test_mtu",
                    "test_port",
                    "test_port_by_domain",
                    "test_nas_ip_conflict",
                    "test_ip_conflict",
                    "test_hostname_conflict"
                ],
                "2": [
                    "test_mtu",
                    "test_ip_conflict"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.DirectoryServiceCheck.Debug": {
            "lib": "lib/SYNO.Core.DirectoryServiceCheck.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "generate_issue"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.DirectoryServiceCheck.Domain": {
            "lib": "lib/SYNO.Core.DirectoryServiceCheck.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "check_server_address",
                    "prepare_test_ip"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.DirectoryServiceCheck.DomainJoin": {
            "lib": "lib/SYNO.Core.DirectoryServiceCheck.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "join_domain",
                    "set_join_env",
                    "init_pre_join",
                    "gen_join_conf",
                    "record_smb_gpo"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.DirectoryServiceCheck.DomainService": {
            "lib": "lib/SYNO.Core.DirectoryServiceCheck.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "init_pre_service",
                    "sync_dc_time",
                    "test_kinit",
                    "check_rodc",
                    "test_smb_auth",
                    "test_smb_auth_local",
                    "test_ldap_auth",
                    "check_computer_account"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.DirectoryServiceCheck.DomainValidation": {
            "lib": "lib/SYNO.Core.DirectoryServiceCheck.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "check_essential_spn",
                    "check_duplicate_spn",
                    "check_gpo",
                    "check_machine_conflict",
                    "check_machine_password",
                    "check_time_sync",
                    "check_winbind_alive",
                    "check_smb_conf",
                    "check_dc_connection",
                    "check_nss"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.DirectoryServiceCheck.LDAP": {
            "lib": "lib/SYNO.Core.DirectoryServiceCheck.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "check_server_address",
                    "check_auth_info",
                    "check_profile",
                    "check_user_name_empty",
                    "check_user_name_dup",
                    "check_user_id_empty",
                    "check_user_id_type",
                    "check_user_id_dup",
                    "check_group_name_empty",
                    "check_group_name_dup",
                    "check_group_id_empty",
                    "check_group_id_type",
                    "check_group_id_dup",
                    "check_samba_schema",
                    "check_samba_ntpwd"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.DirectoryServiceCheck.Progress": {
            "lib": "lib/SYNO.Core.DirectoryServiceCheck.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "start_progress",
                    "update_progress",
                    "end_progress"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.DisableAdmin": {
            "lib": "lib/SYNO.Core.DisableAdmin.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "ignore"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.EventScheduler": {
            "lib": "lib/SYNO.Core.EventScheduler.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "list_relate",
                    "set_enable",
                    "delete",
                    "run",
                    "get",
                    "set",
                    "create",
                    "result_list",
                    "result_get_file",
                    "config_set",
                    "config_get",
                    "event_list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.ExternalDevice.Bluetooth": {
            "lib": "lib/libwebapi-Bluetooth.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list",
                    "get",
                    "set_discovery"
                ],
                "2": [
                    "list",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.ExternalDevice.Bluetooth.Device": {
            "lib": "lib/libwebapi-Bluetooth.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "create",
                    "delete"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.ExternalDevice.Bluetooth.Settings": {
            "lib": "lib/libwebapi-Bluetooth.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.ExternalDevice.DefaultPermission": {
            "lib": "lib/SYNO.Core.ExternalDevice.DefaultPermission.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.ExternalDevice.Printer": {
            "lib": "lib/SYNO.Core.ExternalDevice.Printer.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "print_test",
                    "clean"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.ExternalDevice.Printer.BonjourSharing": {
            "lib": "lib/SYNO.Core.ExternalDevice.Printer.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.ExternalDevice.Printer.Driver": {
            "lib": "lib/SYNO.Core.ExternalDevice.Printer.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.ExternalDevice.Printer.Network": {
            "lib": "lib/SYNO.Core.ExternalDevice.Printer.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "eject",
                    "get",
                    "set",
                    "create"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.ExternalDevice.Printer.Network.Host": {
            "lib": "lib/SYNO.Core.ExternalDevice.Printer.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.ExternalDevice.Printer.OAuth": {
            "lib": "lib/SYNO.Core.ExternalDevice.Printer.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set",
                    "revoke"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.ExternalDevice.Printer.USB": {
            "lib": "lib/SYNO.Core.ExternalDevice.Printer.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "eject",
                    "get",
                    "set",
                    "release_mfp"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.ExternalDevice.Storage.EUnit": {
            "lib": "lib/SYNO.Core.ExternalDevice.Storage.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.ExternalDevice.Storage.Setting": {
            "lib": "lib/SYNO.Core.ExternalDevice.Storage.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.ExternalDevice.Storage.USB": {
            "lib": "lib/SYNO.Core.ExternalDevice.Storage.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "format",
                    "eject"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.ExternalDevice.Storage.eSATA": {
            "lib": "lib/SYNO.Core.ExternalDevice.Storage.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "format",
                    "eject"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.ExternalDevice.UPS": {
            "lib": "lib/libwebapiups.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Factory.Config": {
            "lib": "lib/SYNO.Core.Factory.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "download"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Factory.Manutild": {
            "lib": "lib/SYNO.Core.Factory.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "set",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.File": {
            "lib": "lib/webapi_file.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "save",
                    "load",
                    "list",
                    "create"
                ],
                "2": [
                    "save",
                    "load",
                    "list",
                    "create"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.File.Thumbnail": {
            "lib": "lib/webapi_file.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.FileHandle": {
            "lib": "lib/SYNO.Core.FileHandle.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "export",
                    "kick",
                    "kickable_list",
                    "delete_db"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.FileServ.AFP": {
            "lib": "lib/SYNO.Core.FileServ.AFP.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "set",
                    "get"
                ],
                "2": [
                    "set",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.FileServ.FTP": {
            "lib": "lib/SYNO.Core.FileServ.FTP.so",
            "maxVersion": 3,
            "methods": {
                "1": [
                    "set",
                    "get"
                ],
                "2": [
                    "set",
                    "get"
                ],
                "3": [
                    "set",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.FileServ.FTP.ChrootUser": {
            "lib": "lib/SYNO.Core.FileServ.FTP.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list",
                    "delete",
                    "add"
                ],
                "2": [
                    "load",
                    "save"
                ]
            },
            "minVersion": 2,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.FileServ.FTP.SFTP": {
            "lib": "lib/SYNO.Core.FileServ.FTP.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "set",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.FileServ.FTP.Security": {
            "lib": "lib/SYNO.Core.FileServ.FTP.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "set",
                    "get",
                    "list_ftp_share"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.FileServ.NFS": {
            "lib": "lib/SYNO.Core.FileServ.NFS.so",
            "maxVersion": 3,
            "methods": {
                "1": [
                    "set",
                    "get"
                ],
                "2": [
                    "set",
                    "get"
                ],
                "3": [
                    "set",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.FileServ.NFS.AdvancedSetting": {
            "lib": "lib/SYNO.Core.FileServ.NFS.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "set",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.FileServ.NFS.IDMap": {
            "lib": "lib/SYNO.Core.FileServ.NFS.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "create",
                    "set",
                    "delete"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.FileServ.NFS.Kerberos": {
            "lib": "lib/SYNO.Core.FileServ.NFS.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "upload_key",
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.FileServ.NFS.SharePrivilege": {
            "lib": "lib/SYNO.Core.FileServ.NFS.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "load",
                    "save"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.FileServ.ReflinkCopy": {
            "lib": "lib/SYNO.Core.FileServ.ReflinkCopy.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "set",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.FileServ.Rsync.Account": {
            "lib": "lib/SYNO.Core.FileServ.Rsync.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "create",
                    "delete",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.FileServ.SMB": {
            "lib": "/var/packages/SMBService/target/usr/syno/synoman/webapi/lib/SYNO.Core.FileServ.SMB.so",
            "maxVersion": 3,
            "methods": {
                "1": [
                    "set",
                    "get",
                    "clean_cache"
                ],
                "2": [
                    "set",
                    "get",
                    "clean_cache"
                ],
                "3": [
                    "set",
                    "get",
                    "clean_cache"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.FileServ.ServiceDiscovery.WSTransfer": {
            "lib": "/var/packages/SMBService/target/usr/syno/synoman/webapi/lib/SYNO.Core.FileServ.SMB.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "set",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.FileServ.ServiceDiscovery": {
            "lib": "lib/SYNO.Core.FileServ.ServiceDiscovery.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "set",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Findhost": {
            "lib": "lib/SYNO.Core.Findhost.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Group": {
            "lib": "lib/SYNO.Core.Group.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "get",
                    "set",
                    "delete",
                    "create",
                    "admin_check"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Group.ExtraAdmin": {
            "lib": "lib/SYNO.Core.Group.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "set",
                    "get",
                    "add",
                    "delete"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Group.Member": {
            "lib": "lib/SYNO.Core.Group.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "add",
                    "remove",
                    "admin_check"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Group.ValidLocalAdmin": {
            "lib": "lib/SYNO.Core.Group.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.GroupSettings": {
            "lib": "lib/SYNO.Core.UserSettings.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "apply"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Hardware.BeepControl": {
            "lib": "lib/libHardware.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set",
                    "stop_beep"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Hardware.FanSpeed": {
            "lib": "lib/libHardware.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Hardware.Hibernation": {
            "lib": "lib/libHardware.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Hardware.LCM": {
            "lib": "lib/libHardware.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Hardware.Led.Brightness": {
            "lib": "lib/libHardware.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set",
                    "update",
                    "set_current_brightness",
                    "get_static_data"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Hardware.MemoryLayout": {
            "lib": "lib/libHardware.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Hardware.NeedReboot": {
            "lib": "lib/libHardware.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Hardware.OOBManagement": {
            "lib": "lib/libHardware.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set",
                    "update",
                    "list_blocked_ipv4",
                    "exec"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Hardware.PowerRecovery": {
            "lib": "lib/libHardware.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Hardware.PowerSchedule": {
            "lib": "lib/libHardware.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "load",
                    "save"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Hardware.RemoteFanStatus": {
            "lib": "lib/libHardware.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "update"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Hardware.SpectreMeltdown": {
            "lib": "lib/libHardware.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Hardware.VideoTranscoding": {
            "lib": "lib/libHardware.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Hardware.ZRAM": {
            "lib": "lib/libHardware.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Help": {
            "lib": "lib/SYNO.Core.Help.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get_tree",
                    "get_search_result",
                    "get_tutorial_tree",
                    "get_online_help_url"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.ISCSI.FCTarget": {
            "lib": "/var/packages/ScsiTarget/target/lib/libsynoiscsiep.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "get",
                    "set",
                    "enable",
                    "disable",
                    "map_lun",
                    "unmap_lun"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.ISCSI.Host": {
            "lib": "/var/packages/ScsiTarget/target/lib/libsynoiscsiep.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "create",
                    "delete",
                    "list",
                    "get",
                    "set",
                    "map_initiator",
                    "unmap_initiator",
                    "lun_acl_masks_set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.ISCSI.LUN": {
            "lib": "/var/packages/ScsiTarget/target/lib/libsynoiscsiep.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "create",
                    "create_feasibility_check",
                    "delete",
                    "list",
                    "get",
                    "set",
                    "clone",
                    "map_target",
                    "unmap_target",
                    "map_fctarget",
                    "unmap_fctarget",
                    "load_lun",
                    "unload_lun",
                    "take_snapshot",
                    "stop_snapshot",
                    "delete_snapshot",
                    "list_snapshot",
                    "get_snapshot",
                    "set_snapshot",
                    "set_sched_snapshot",
                    "restore_snapshot",
                    "clone_snapshot",
                    "lock_snapshot",
                    "unlock_snapshot",
                    "export_to_file",
                    "export",
                    "import",
                    "export_cancel",
                    "import_cancel",
                    "load_snapshot",
                    "unload_snapshot",
                    "map_vhost",
                    "unmap_vhost",
                    "loop_mount",
                    "loop_unmount",
                    "retry_stop",
                    "set_whitelist",
                    "stop_clone",
                    "test_cloneability",
                    "defrag",
                    "stop_defrag",
                    "top",
                    "acl_masks_add",
                    "acl_masks_set",
                    "acl_masks_remove",
                    "host_acl_masks_set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.ISCSI.Lunbkp": {
            "lib": "/var/packages/ScsiTarget/target/lib/libsynoiscsiep.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "backuplun_move",
                    "target_connect",
                    "target_disconnect",
                    "lunbackup_start",
                    "lunbackup_stop",
                    "lunrestore_start",
                    "lunrestore_stop",
                    "lunbkp_progress_get",
                    "lunbkp_bitmap_reset",
                    "lunbkp_size_get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.ISCSI.Node": {
            "lib": "/var/packages/ScsiTarget/target/lib/libsynoiscsiep.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "create",
                    "delete",
                    "list",
                    "get",
                    "set",
                    "add_node",
                    "delete_node",
                    "create_session",
                    "delete_session",
                    "log_list",
                    "log_clear",
                    "log_export",
                    "welcome_set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.ISCSI.Replication": {
            "lib": "/var/packages/ScsiTarget/target/lib/libsynoiscsiep.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "create",
                    "delete",
                    "list",
                    "get",
                    "set",
                    "send_snapshot",
                    "stop_sending",
                    "promote",
                    "demote",
                    "compute_unsync_size",
                    "get_unsync_size",
                    "check_node",
                    "create_task",
                    "delete_task",
                    "get_base_version",
                    "get_token",
                    "clean_token"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.ISCSI.Target": {
            "lib": "/var/packages/ScsiTarget/target/lib/libsynoiscsiep.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "create",
                    "create_default_target",
                    "create_feasibility_check",
                    "delete",
                    "list",
                    "get",
                    "set",
                    "enable",
                    "disable",
                    "map_lun",
                    "unmap_lun",
                    "acl_masks_set",
                    "acl_masks_add",
                    "acl_masks_remove",
                    "network_portals_add",
                    "network_portals_remove"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.ISCSI.VMware": {
            "lib": "/var/packages/ScsiTarget/target/lib/libsynoiscsiep.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "register",
                    "deregister",
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.MediaIndexing": {
            "lib": "lib/mediaindexing.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "status",
                    "reindex"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.MediaIndexing.IndexFolder": {
            "lib": "lib/mediaindexing-indexfolder.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.MediaIndexing.MediaConverter": {
            "lib": "lib/mediaindexing-mediaconverter.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "status",
                    "pause",
                    "resume"
                ],
                "2": [
                    "status",
                    "pause",
                    "resume"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.MediaIndexing.Scheduler": {
            "lib": "lib/mediaindexing-scheduler.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.MediaIndexing.ThumbnailQuality": {
            "lib": "lib/mediaindexing.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.MyDSCenter": {
            "lib": "lib/mydscenter.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "register"
                ],
                "2": [
                    "login",
                    "login_by_key",
                    "logout",
                    "register",
                    "query",
                    "get_iframe_info",
                    "handle_apikey_error",
                    "oauth_login"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.MyDSCenter.Account": {
            "lib": "lib/mydscenter.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.MyDSCenter.Login": {
            "lib": "lib/mydscenter.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "login",
                    "authkey_login",
                    "oauth_login",
                    "pkce_config_get",
                    "pkce_login"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.MyDSCenter.Logout": {
            "lib": "lib/mydscenter.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "pkce_logout"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.MyDSCenter.Purchase": {
            "lib": "lib/mydscenter.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Network.TrafficControl.RouterRules": {
            "lib": "lib/SYNO.Core.Network.TrafficControl.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "load",
                    "save"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Network.TrafficControl.Rules": {
            "lib": "lib/SYNO.Core.Network.TrafficControl.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "load",
                    "save"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Network": {
            "lib": "lib/libwebapi-Network.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "get",
                    "set",
                    "test_internet"
                ],
                "2": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Network.Authentication": {
            "lib": "lib/libwebapi-Authentication.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set",
                    "test"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Network.Authentication.Cert": {
            "lib": "lib/libwebapi-Authentication.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "upload",
                    "delete"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Network.Bond": {
            "lib": "lib/libwebapi-Bond.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "get",
                    "set",
                    "list",
                    "create",
                    "delete",
                    "set_mode",
                    "create_check",
                    "delete_check"
                ],
                "2": [
                    "get",
                    "set",
                    "list",
                    "create",
                    "delete",
                    "set_mode",
                    "create_check",
                    "delete_check"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Network.Ethernet": {
            "lib": "lib/libwebapi-Ethernet.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "get",
                    "list",
                    "set",
                    "DAD"
                ],
                "2": [
                    "get",
                    "list",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Network.Ethernet.External": {
            "lib": "lib/libwebapi-Ethernet.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "check"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Network.IPv6": {
            "lib": "lib/libwebapi-ipv6.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Network.IPv6.Router": {
            "lib": "lib/libwebapi-IPv6Router.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Network.IPv6.Router.Prefix": {
            "lib": "lib/libwebapi-IPv6Router.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "add",
                    "remove",
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Network.Interface": {
            "lib": "lib/libwebapi-Network-Interface.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Network.MACClone": {
            "lib": "lib/libwebapi-MacClone.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set",
                    "getRemoteMACAddress"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Network.OVS": {
            "lib": "lib/libwebapi-OVS.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "set",
                    "get",
                    "check"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Network.PPPoE": {
            "lib": "lib/libwebapi-PPPoE.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set",
                    "list",
                    "connect",
                    "disconnect"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Network.PPPoE.Relay": {
            "lib": "lib/libwebapi-PPPoE.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Network.Proxy": {
            "lib": "lib/libwebapi-Proxy.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Network.Router.Gateway.List": {
            "lib": "lib/libwebapi-Router.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Network.Router.Static.Route": {
            "lib": "lib/libwebapi-Router.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set",
                    "test",
                    "tablesget"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Network.UPnPServer": {
            "lib": "lib/libwebapi-UPnPServer.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Network.VPN": {
            "lib": "lib/libwebapi-VPNClient.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "check",
                    "connect",
                    "disconnect"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Network.VPN.L2TP": {
            "lib": "lib/libwebapi-VPNClient.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "create",
                    "set",
                    "delete",
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Network.VPN.OpenVPN": {
            "lib": "lib/libwebapi-VPNClient.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "create",
                    "set",
                    "delete",
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Network.VPN.OpenVPN.CA": {
            "lib": "lib/libwebapi-VPNClient.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "upload"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Network.VPN.OpenVPNWithConf": {
            "lib": "lib/libwebapi-VPNClient.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "create",
                    "set",
                    "delete",
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Network.VPN.OpenVPNWithConf.Certs": {
            "lib": "lib/libwebapi-VPNClient.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "upload"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Network.VPN.PPTP": {
            "lib": "lib/libwebapi-VPNClient.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "create",
                    "set",
                    "delete",
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Network.WOL": {
            "lib": "lib/libwebapi-WOL.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "wake"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.NormalUser": {
            "lib": "lib/SYNO.Core.User.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "get"
                ],
                "2": [
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.NormalUser.LoginNotify": {
            "lib": "lib/SYNO.Core.User.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "check"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Notification.Advance.CustomizedData": {
            "lib": "lib/libNotification.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set",
                    "reset"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Notification.Advance.FilterSettings": {
            "lib": "lib/libNotification.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set",
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Notification.Advance.Variables": {
            "lib": "lib/libNotification.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Notification.Advance.WarningPercentage": {
            "lib": "lib/libNotification.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Notification.CMS": {
            "lib": "lib/libNotification.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "send_test"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Notification.CMS.Conf": {
            "lib": "lib/libNotification.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Notification.Mail": {
            "lib": "lib/SYNO.Core.Notification.Mail.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "refresh_token",
                    "send_test"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Notification.Mail.Auth": {
            "lib": "lib/SYNO.Core.Notification.Mail.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Notification.Mail.Conf": {
            "lib": "lib/SYNO.Core.Notification.Mail.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "getEnable",
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Notification.Push": {
            "lib": "lib/libNotification.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "send_test"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Notification.Push.AuthToken": {
            "lib": "lib/libNotification.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Notification.Push.Conf": {
            "lib": "lib/libNotification.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set",
                    "status"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Notification.Push.Mail": {
            "lib": "lib/libNotification.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set",
                    "status",
                    "send_verify",
                    "send_test"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Notification.Push.Mobile": {
            "lib": "lib/libNotification.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "unpair"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Notification.Push.Webhook.Provider": {
            "lib": "lib/libNotification.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "delete",
                    "create",
                    "set",
                    "get",
                    "list",
                    "send_test"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Notification.SMS": {
            "lib": "lib/SYNO.Core.Notification.SMS.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "send_test"
                ],
                "2": [
                    "send_test"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Notification.SMS.Conf": {
            "lib": "lib/SYNO.Core.Notification.SMS.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "get",
                    "set"
                ],
                "2": [
                    "set",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Notification.SMS.Provider": {
            "lib": "lib/SYNO.Core.Notification.SMS.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list",
                    "get",
                    "set",
                    "create",
                    "delete"
                ],
                "2": [
                    "delete",
                    "create",
                    "set",
                    "get",
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.OAuth.Scope": {
            "lib": "lib/webapi_entry_oauth.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "delete",
                    "set",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.OAuth.Server": {
            "lib": "lib/webapi_entry_oauth.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "delete",
                    "set",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.OTP": {
            "lib": "lib/SYNO.Core.User.so",
            "maxVersion": 3,
            "methods": {
                "1": [
                    "get",
                    "reset"
                ],
                "2": [
                    "get",
                    "reset",
                    "get_one",
                    "save_mail",
                    "get_qrcode",
                    "edit_secret_key",
                    "auth_tmp_code"
                ],
                "3": [
                    "get_qrcode",
                    "auth_tmp_code"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.OTP.Admin": {
            "lib": "lib/SYNO.Core.User.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "reset",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.OTP.EnforcePolicy": {
            "lib": "lib/SYNO.Core.User.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set",
                    "list",
                    "custom_set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.OTP.Ex": {
            "lib": "lib/SYNO.Core.User.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "save_mail",
                    "get_qrcode",
                    "edit_secret_key",
                    "auth_tmp_code"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.OTP.Mail": {
            "lib": "lib/SYNO.Core.User.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "send"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Package": {
            "lib": "lib/SYNO.Core.Package.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list",
                    "list_status",
                    "get",
                    "feasibility_check",
                    "get_queue"
                ],
                "2": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Package.AutoUpgrade.Progress": {
            "lib": "lib/SYNO.Core.Package.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Package.Control": {
            "lib": "lib/SYNO.Core.Package.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "start",
                    "stop"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Package.FakeIFrame": {
            "lib": "lib/SYNO.Core.Package.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Package.Feed": {
            "lib": "lib/SYNO.Core.Package.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "set",
                    "add",
                    "delete"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Package.Feed.Keyring": {
            "lib": "lib/SYNO.Core.Package.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "add",
                    "list",
                    "delete"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Package.Info": {
            "lib": "lib/SYNO.Core.Package.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Package.Installation": {
            "lib": "lib/SYNO.Core.Package.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "status",
                    "cancel",
                    "check",
                    "upload",
                    "install",
                    "upgrade",
                    "clean",
                    "delete",
                    "get_queue"
                ],
                "2": [
                    "check"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Package.Installation.Download": {
            "lib": "lib/SYNO.Core.Package.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "check"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Package.Log": {
            "lib": "lib/SYNO.Core.Package.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Package.MyDS": {
            "lib": "lib/SYNO.Core.Package.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Package.MyDS.Purchase": {
            "lib": "lib/SYNO.Core.Package.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "save"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Package.Progress": {
            "lib": "lib/SYNO.Core.Package.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Package.Screenshot": {
            "lib": "lib/SYNO.Core.Package.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Package.Screenshot.Server": {
            "lib": "lib/SYNO.Core.Package.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Package.Server": {
            "lib": "lib/SYNO.Core.Package.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list",
                    "check"
                ],
                "2": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Package.Setting": {
            "lib": "lib/SYNO.Core.Package.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Package.Setting.Update": {
            "lib": "lib/SYNO.Core.Package.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "add",
                    "delete"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Package.Setting.Volume": {
            "lib": "lib/SYNO.Core.Package.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "set",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Package.Thumb": {
            "lib": "lib/SYNO.Core.Package.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Package.Thumb.Server": {
            "lib": "lib/SYNO.Core.Package.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Package.Uninstallation": {
            "lib": "lib/SYNO.Core.Package.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "uninstall"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.PersonalNotification.Device": {
            "lib": "lib/SYNO.Core.PersonalNotification.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "unpair",
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.PersonalNotification.Event": {
            "lib": "lib/SYNO.Core.PersonalNotification.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "fire"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.PersonalNotification.Filter": {
            "lib": "lib/SYNO.Core.PersonalNotification.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "set",
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.PersonalNotification.Mobile": {
            "lib": "lib/SYNO.Core.PersonalNotification.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "unpair",
                    "stat",
                    "pair",
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.PersonalNotification.Settings": {
            "lib": "lib/SYNO.Core.PersonalNotification.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "set",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.PersonalSettings": {
            "lib": "/usr/syno/synoman/webapi/lib/SYNO.Core.PersonalSettings.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "wallpaper",
                    "photo",
                    "quota"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.PhotoViewer": {
            "lib": "/usr/syno/synoman/webapi/lib/SYNO.Core.PhotoViewer.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "info"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Polling.Data": {
            "lib": "/usr/syno/synoman/webman/modules/PollingTask/webapi/SYNO.Core.Polling.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "set",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.PortForwarding": {
            "lib": "lib/SYNO.Core.PortForwarding.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "detect_pre_check",
                    "detect",
                    "detect_status",
                    "get_current_process"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.PortForwarding.Compatibility": {
            "lib": "lib/SYNO.Core.PortForwarding.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "test",
                    "test_status",
                    "stop",
                    "upload"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.PortForwarding.RouterConf": {
            "lib": "lib/SYNO.Core.PortForwarding.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "set",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.PortForwarding.RouterInfo": {
            "lib": "lib/SYNO.Core.PortForwarding.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.PortForwarding.RouterList": {
            "lib": "lib/SYNO.Core.PortForwarding.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "list",
                    "update"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.PortForwarding.Rules": {
            "lib": "lib/SYNO.Core.PortForwarding.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "save",
                    "force_save",
                    "save_status",
                    "load",
                    "test",
                    "test_status"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.PortForwarding.Rules.Serv": {
            "lib": "lib/SYNO.Core.PortForwarding.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "check",
                    "test",
                    "test_status"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.PortForwarding.UserDataCollector": {
            "lib": "lib/SYNO.Core.PortForwarding.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "count"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Promotion.Info": {
            "lib": "lib/SYNO.Core.Promotion.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "hide_promotion",
                    "get_old_patch"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.QuickConnect": {
            "lib": "lib/SYNO.Core.QuickConnect.so",
            "maxVersion": 3,
            "methods": {
                "1": [
                    "status",
                    "get",
                    "set",
                    "set_server_alias"
                ],
                "2": [
                    "get",
                    "set",
                    "set_server_alias"
                ],
                "3": [
                    "get_misc_config",
                    "set_misc_config",
                    "check_availability"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.QuickConnect.Hostname": {
            "lib": "lib/SYNO.Core.QuickConnect.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get_ip"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.QuickConnect.Permission": {
            "lib": "lib/SYNO.Core.QuickConnect.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.QuickConnect.RegisterSite": {
            "lib": "lib/SYNO.Core.QuickConnect.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.QuickConnect.SNI": {
            "lib": "lib/SYNO.Core.QuickConnect.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.QuickConnect.Upnp": {
            "lib": "lib/SYNO.Core.QuickConnect.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.QuickStart.Info": {
            "lib": "lib/SYNO.Core.QuickStart.so",
            "maxVersion": 3,
            "methods": {
                "1": [
                    "load_ds_info",
                    "check_permission",
                    "hide_welcome",
                    "set_udc",
                    "load_confautobkp_info",
                    "set_confautobkp"
                ],
                "2": [
                    "load_ds_info",
                    "check_permission",
                    "hide_welcome",
                    "set_udc",
                    "set_mib",
                    "load_mib_info"
                ],
                "3": [
                    "load_ds_info",
                    "check_permission",
                    "hide_welcome",
                    "set_udc",
                    "set_mib",
                    "load_mib_info",
                    "set_wizard_step"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.QuickStart.Install": {
            "lib": "lib/SYNO.Core.QuickStart.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "install_pkgs",
                    "install_sur",
                    "check_progress",
                    "notify_sur_failed"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Quota": {
            "lib": "lib/SYNO.Core.Quota.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set",
                    "inspect"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.RecycleBin": {
            "lib": "lib/SYNO.Core.RecycleBin.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "start",
                    "stop",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.RecycleBin.User": {
            "lib": "lib/SYNO.Core.RecycleBin.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "start",
                    "stop",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Region.Language": {
            "lib": "lib/SYNO.Core.Region.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Region.NTP": {
            "lib": "lib/SYNO.Core.Region.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "get",
                    "set",
                    "sync",
                    "listzone",
                    "setzone",
                    "ensure_ntp_sync_and_enable"
                ],
                "2": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Region.NTP.DateTimeFormat": {
            "lib": "lib/SYNO.Core.Region.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Region.NTP.Server": {
            "lib": "lib/SYNO.Core.Region.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Report": {
            "lib": "/var/packages/StorageAnalyzer/target/webapi/SYNO.Core.Report.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "get",
                    "set",
                    "create",
                    "delete",
                    "export"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Report.Analyzer": {
            "lib": "/var/packages/StorageAnalyzer/target/webapi/SYNO.Core.Report.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "getdata",
                    "confirmduplicate"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Report.Analyzer.File": {
            "lib": "/var/packages/StorageAnalyzer/target/webapi/SYNO.Core.Report.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "duplicate",
                    "status"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Report.Analyzer.Share": {
            "lib": "/var/packages/StorageAnalyzer/target/webapi/SYNO.Core.Report.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "usage",
                    "user_quota",
                    "file_type"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Report.Config": {
            "lib": "/var/packages/StorageAnalyzer/target/webapi/SYNO.Core.Report.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Report.History": {
            "lib": "/var/packages/StorageAnalyzer/target/webapi/SYNO.Core.Report.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "get"
                ],
                "2": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Report.Redirect": {
            "lib": "/var/packages/StorageAnalyzer/target/webapi/SYNO.Core.Report.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "open_report"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Report.Util": {
            "lib": "/var/packages/StorageAnalyzer/target/webapi/SYNO.Core.Report.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "delete_file",
                    "list_share"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.ResetAdmin": {
            "lib": "lib/SYNO.Core.ResetAdmin.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "disable"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.SNMP": {
            "lib": "lib/SYNO.Core.SNMP.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "set",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Security.AutoBlock": {
            "lib": "lib/SYNO.Core.Security.AutoBlock.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Security.AutoBlock.Rules": {
            "lib": "lib/SYNO.Core.Security.AutoBlock.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "list",
                    "delete",
                    "create",
                    "upload",
                    "upload_deny_list",
                    "download"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Security.DoS": {
            "lib": "lib/SYNO.Core.Security.DoS.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "get",
                    "set"
                ],
                "2": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Security.Firewall": {
            "lib": "lib/SYNO.Core.Security.Firewall.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "set",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Security.Firewall.Adapter": {
            "lib": "lib/SYNO.Core.Security.Firewall.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "set",
                    "get",
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Security.Firewall.Conf": {
            "lib": "lib/SYNO.Core.Security.Firewall.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Security.Firewall.Geoip": {
            "lib": "lib/SYNO.Core.Security.Firewall.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Security.Firewall.Profile": {
            "lib": "lib/SYNO.Core.Security.Firewall.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "set",
                    "get",
                    "list",
                    "rename",
                    "create",
                    "clone",
                    "delete"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Security.Firewall.Profile.Apply": {
            "lib": "lib/SYNO.Core.Security.Firewall.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "start",
                    "status",
                    "stop"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Security.Firewall.Rules": {
            "lib": "lib/SYNO.Core.Security.Firewall.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "load",
                    "save_start",
                    "save_status",
                    "save_stop"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Security.Firewall.Rules.Serv": {
            "lib": "lib/SYNO.Core.Security.Firewall.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "policy_check",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Security.DSM": {
            "lib": "lib/SYNO.Core.Security.DSM.so",
            "maxVersion": 4,
            "methods": {
                "1": [
                    "get",
                    "set"
                ],
                "2": [
                    "get",
                    "set"
                ],
                "3": [
                    "get",
                    "set"
                ],
                "4": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Security.DSM.Embed": {
            "lib": "lib/SYNO.Core.Security.DSM.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Security.DSM.Proxy": {
            "lib": "lib/SYNO.Core.Security.DSM.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.SecurityScan.Conf": {
            "lib": "lib/SYNO.Core.SecurityScan.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "set",
                    "get",
                    "time_get",
                    "first_get",
                    "group_enum",
                    "group_set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.SecurityScan.Operation": {
            "lib": "lib/SYNO.Core.SecurityScan.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "start",
                    "stop",
                    "fixme",
                    "update"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.SecurityScan.Status": {
            "lib": "lib/SYNO.Core.SecurityScan.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "system_get",
                    "rule_get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Service": {
            "lib": "lib/SYNO.Core.Service.so",
            "maxVersion": 3,
            "methods": {
                "1": [
                    "control"
                ],
                "2": [
                    "get"
                ],
                "3": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Service.Conf": {
            "lib": "lib/SYNO.Core.Service.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Service.PortInfo": {
            "lib": "lib/SYNO.Core.Service.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "load"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Share": {
            "lib": "lib/SYNO.Core.Share.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "create",
                    "set",
                    "move_status",
                    "stop_move",
                    "list",
                    "get",
                    "delete",
                    "validate_delete",
                    "validate_set",
                    "restore",
                    "clone"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Share.Crypto": {
            "lib": "lib/SYNO.Core.Share.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "decrypt",
                    "encrypt",
                    "validate_encrypt"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Share.Crypto.Key": {
            "lib": "lib/SYNO.Core.Share.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "export",
                    "verify"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Share.CryptoFile": {
            "lib": "lib/SYNO.Core.Share.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "decrypt"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Share.KeyManager.AutoKey": {
            "lib": "lib/SYNO.Core.Share.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "migrate"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Share.KeyManager.Key": {
            "lib": "lib/SYNO.Core.Share.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "add",
                    "add_by_file",
                    "set",
                    "delete",
                    "mount",
                    "umount",
                    "export"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Share.KeyManager.MachineKey": {
            "lib": "lib/SYNO.Core.Share.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Share.KeyManager.Store": {
            "lib": "lib/SYNO.Core.Share.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "explore",
                    "init",
                    "verify",
                    "change_passphrase",
                    "change_location",
                    "get",
                    "set",
                    "clone"
                ],
                "2": [
                    "init"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Share.Migration": {
            "lib": "lib/SYNO.Core.Share.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "check",
                    "start",
                    "status",
                    "stop"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Share.Migration.Task": {
            "lib": "lib/SYNO.Core.Share.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Share.Permission": {
            "lib": "lib/SYNO.Core.Share.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "list_by_user",
                    "list_by_group",
                    "set",
                    "set_by_user_group"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Share.PermissionReport": {
            "lib": "lib/SYNO.Core.Share.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "export",
                    "export_status",
                    "export_bg_status",
                    "export_stop",
                    "get_config"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Share.Snapshot": {
            "lib": "lib/SYNO.Core.Share.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "set_share_conf",
                    "get_share_conf",
                    "check_shareconf",
                    "set_schedule",
                    "get_schedule",
                    "create",
                    "list",
                    "delete",
                    "set"
                ],
                "2": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Sharing": {
            "lib": "/usr/syno/synoman/webapi/lib/SYNO.Core.Sharing.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "trigger_gc",
                    "list",
                    "delete",
                    "set",
                    "get",
                    "logout"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Sharing.Initdata": {
            "lib": "/usr/syno/synoman/webapi/lib/SYNO.Core.Sharing.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Sharing.Login": {
            "lib": "/usr/syno/synoman/webapi/lib/SYNO.Core.Sharing.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "login"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Sharing.Session": {
            "lib": "/usr/syno/synoman/webapi/lib/SYNO.Core.Sharing.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.SmartBlock": {
            "lib": "lib/SYNO.Core.SmartBlock.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.SmartBlock.Device": {
            "lib": "lib/SYNO.Core.SmartBlock.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set",
                    "forget"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.SmartBlock.Trusted": {
            "lib": "lib/SYNO.Core.SmartBlock.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "pardon"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.SmartBlock.Untrusted": {
            "lib": "lib/SYNO.Core.SmartBlock.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "pardon"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.SmartBlock.User": {
            "lib": "lib/SYNO.Core.SmartBlock.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "enabled",
                    "list",
                    "trust",
                    "distrust",
                    "locked",
                    "pardon"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Storage.Disk": {
            "lib": "lib/libStorage.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "get_smart_info",
                    "do_smart_test",
                    "get_smart_test_log",
                    "do_performance_test",
                    "stop_performance_test",
                    "get_performance_test_status",
                    "get_performance_test_log",
                    "get_performance_test_info",
                    "do_adv_test",
                    "get_adv_test_log",
                    "export_test_log",
                    "get_synoblock",
                    "get_disk_log",
                    "export_disk_log",
                    "get_disk_led_status",
                    "set_disk_led_status",
                    "test_deactivate_disk",
                    "deactivate_disk",
                    "disk_config_get",
                    "disk_config_set",
                    "import_previous_log",
                    "disk_test_log_get",
                    "get_disk_log_importing_progress",
                    "disk_health_prediction_log_get",
                    "get_wdda_test_result",
                    "disk_partition_rescan",
                    "disks_info_get",
                    "upload_offlinekit",
                    "get_offlinekit_ver"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Storage.Disk.FWUpgrade": {
            "lib": "lib/libStorage.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list_drive",
                    "prepare",
                    "start_upgrade",
                    "defer_upgrade",
                    "poll",
                    "get_summary",
                    "cancel_send_notification",
                    "cancel_auto_launch",
                    "send_notification"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Storage.Pool": {
            "lib": "lib/libStorage.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Storage.Volume": {
            "lib": "lib/libStorage.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "get",
                    "conf_get",
                    "conf_set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Storage.iSCSILUN": {
            "lib": "lib/libStorage.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "repair",
                    "expand_unallocated",
                    "migrate",
                    "data_scrubbing",
                    "expand_by_add_disk",
                    "cancel_data_scrubbing",
                    "pause_data_scrubbing",
                    "estimate_size",
                    "delete_block_lun"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.SupportForm.Form": {
            "lib": "lib/libwebapi-SupportForm.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "upload"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.SupportForm.Log": {
            "lib": "lib/libwebapi-SupportForm.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "download",
                    "collect",
                    "status",
                    "polling"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.SupportForm.Service": {
            "lib": "lib/libwebapi-SupportForm.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set",
                    "set_log_gen"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Synohdpack": {
            "lib": "/usr/syno/synoman/webapi/lib/SYNO.Core.Synohdpack.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "getHDIcon",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.SyslogClient.FileTransfer": {
            "lib": "lib/SYNO.Core.SyslogClient.FileTransfer.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set",
                    "get_level",
                    "set_level"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.SyslogClient.Log": {
            "lib": "lib/SYNO.Core.SyslogClient.Log.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "export",
                    "clear",
                    "get_remotearch_subfolder"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.SyslogClient.PersonalActivity": {
            "lib": "lib/SYNO.Core.SyslogClient.PersonalActivity.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "loginhistory",
                    "get",
                    "clear"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.SyslogClient.Setting.Notify": {
            "lib": "lib/SYNO.Core.SyslogClient.Setting.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.SyslogClient.Status": {
            "lib": "lib/SYNO.Core.SyslogClient.Status.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "device_enum",
                    "latestlog_get",
                    "eps_get",
                    "cnt_get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.System.Status": {
            "lib": "/usr/syno/synoman/webapi/lib/SYNO.Core.System.Status.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.System": {
            "lib": "lib/SYNO.Core.System.so",
            "maxVersion": 3,
            "methods": {
                "1": [
                    "shutdown",
                    "reboot",
                    "reset",
                    "info"
                ],
                "2": [
                    "info"
                ],
                "3": [
                    "info"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.System.Process": {
            "lib": "lib/SYNO.Core.System.Process.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.System.ProcessGroup": {
            "lib": "lib/SYNO.Core.System.ProcessGroup.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.System.ResetButton": {
            "lib": "lib/SYNO.Core.System.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.System.SystemHealth": {
            "lib": "lib/SYNO.Core.System.SystemHealth.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.System.Utilization": {
            "lib": "lib/SYNO.Core.System.Utilization.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.TFTP": {
            "lib": "lib/libCoreTFTP.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.TaskScheduler": {
            "lib": "lib/SYNO.Core.TaskScheduler.so",
            "maxVersion": 3,
            "methods": {
                "1": [
                    "list",
                    "get",
                    "set_enable",
                    "delete",
                    "run",
                    "set",
                    "create",
                    "view"
                ],
                "2": [
                    "get",
                    "set",
                    "create",
                    "list",
                    "delete",
                    "set_enable",
                    "run"
                ],
                "3": [
                    "get",
                    "set",
                    "create"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Terminal": {
            "lib": "lib/SYNO.Core.Terminal.so",
            "maxVersion": 3,
            "methods": {
                "1": [
                    "set",
                    "get"
                ],
                "2": [
                    "set",
                    "get"
                ],
                "3": [
                    "set",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Theme.AppPortalLogin": {
            "lib": "lib/SYNO.Core.Theme.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Theme.Desktop": {
            "lib": "lib/SYNO.Core.Theme.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Theme.FileSharingLogin": {
            "lib": "lib/SYNO.Core.Theme.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Theme.Image": {
            "lib": "lib/SYNO.Core.Theme.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "upload",
                    "get",
                    "clean_history"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Theme.Login": {
            "lib": "lib/SYNO.Core.Theme.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.TrustDevice": {
            "lib": "/usr/syno/synoman/webapi/lib/SYNO.Core.TrustDevice.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "delete",
                    "delete_others",
                    "create"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Tuned": {
            "lib": "lib/SYNO.Core.Tuned.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "profile_list",
                    "profile_set",
                    "config_get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.UISearch": {
            "lib": "/usr/syno/synoman/webapi/lib/SYNO.Core.UISearch.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "uisearch"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Upgrade": {
            "lib": "lib/SYNO.Core.Upgrade.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "start",
                    "progress",
                    "status",
                    "is_upgraded_from_dsm_62",
                    "is_upgraded_from_dsm_700",
                    "did_user_see_new_upgrade_setting_toast",
                    "now_user_sees_new_upgrade_setting_toast"
                ],
                "2": [
                    "status"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Upgrade.AutoUpgrade": {
            "lib": "lib/SYNO.Core.Upgrade.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "status",
                    "cancel"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Upgrade.Group": {
            "lib": "lib/SYNO.Core.Upgrade.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "info"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Upgrade.Group.Download": {
            "lib": "lib/SYNO.Core.Upgrade.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "start",
                    "cancel",
                    "progress"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Upgrade.Group.Setting": {
            "lib": "lib/SYNO.Core.Upgrade.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Upgrade.GroupInstall": {
            "lib": "lib/SYNO.Core.Upgrade.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "start",
                    "status"
                ],
                "2": [
                    "start"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Upgrade.GroupInstall.Network": {
            "lib": "lib/SYNO.Core.Upgrade.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Upgrade.Patch": {
            "lib": "lib/SYNO.Core.Upgrade.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "upload",
                    "local_upload",
                    "clean",
                    "verify",
                    "find_destination"
                ],
                "2": [
                    "verify"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Upgrade.PreCheck": {
            "lib": "lib/SYNO.Core.Upgrade.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "start"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Upgrade.Server": {
            "lib": "lib/SYNO.Core.Upgrade.so",
            "maxVersion": 3,
            "methods": {
                "1": [
                    "check"
                ],
                "2": [
                    "check"
                ],
                "3": [
                    "check"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Upgrade.Server.Download": {
            "lib": "lib/SYNO.Core.Upgrade.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "start",
                    "cancel",
                    "progress"
                ],
                "2": [
                    "start",
                    "progress"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Upgrade.Setting": {
            "lib": "lib/SYNO.Core.Upgrade.so",
            "maxVersion": 4,
            "methods": {
                "1": [
                    "get",
                    "set"
                ],
                "2": [
                    "get",
                    "set"
                ],
                "3": [
                    "get",
                    "set"
                ],
                "4": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.User": {
            "lib": "lib/SYNO.Core.User.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "get",
                    "set",
                    "delete",
                    "create",
                    "parse_user_list",
                    "import",
                    "import_status",
                    "import_stop"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.User.Group": {
            "lib": "lib/SYNO.Core.User.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "join",
                    "join_stop",
                    "join_list",
                    "join_status"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.User.Home": {
            "lib": "lib/SYNO.Core.User.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "move_check",
                    "validate_set",
                    "set",
                    "status",
                    "stop"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.User.PasswordConfirm": {
            "lib": "lib/SYNO.Core.User.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "auth"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.User.PasswordExpiry": {
            "lib": "lib/SYNO.Core.User.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.User.PasswordMeter": {
            "lib": "lib/SYNO.Core.User.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "evaluate"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.User.PasswordPolicy": {
            "lib": "lib/SYNO.Core.User.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set",
                    "check"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.UserSettings": {
            "lib": "lib/SYNO.Core.UserSettings.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "apply"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Virtualization.Host.Capability": {
            "lib": "lib/SYNO.Core.Virtualization.Host.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Web.DSM": {
            "lib": "lib/SYNO.Core.Web.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "get",
                    "set"
                ],
                "2": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Web.DSM.External": {
            "lib": "lib/SYNO.Core.Web.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Web.Security.HTTPCompression": {
            "lib": "lib/SYNO.Core.Web.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Web.Security.TLSProfile": {
            "lib": "lib/SYNO.Core.Web.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        }
    },
    "SYNO.DR": {
        "SYNO.DR.Node": {
            "lib": "lib/SYNO.DR.Node.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "info",
                    "test_sync_speed",
                    "test_download_speed",
                    "test_privilege",
                    "test_connection"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.DR.Node.Credential": {
            "lib": "lib/SYNO.DR.Node.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "create",
                    "set",
                    "get",
                    "list",
                    "relay",
                    "reverse_create",
                    "test_create",
                    "test_reverse_create",
                    "test_set",
                    "temp_create",
                    "temp_reverse_create",
                    "delete"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.DR.Node.Session": {
            "lib": "lib/SYNO.DR.Node.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "create",
                    "temp_create",
                    "get",
                    "delete"
                ],
                "2": [
                    "create"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        }
    },
    "SYNO.DSM": {
        "SYNO.DSM.FindMe": {
            "lib": "/usr/syno/synoman/webapi/lib/SYNO.DSM.FindMe.so",
            "maxVersion": 2,
            "methods": {
                "2": [
                    "supported",
                    "stop",
                    "start"
                ]
            },
            "minVersion": 2,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.DSM.Info": {
            "lib": "/usr/syno/synoman/webapi/lib/SYNO.DSM.Info.so",
            "maxVersion": 2,
            "methods": {
                "2": [
                    "getinfo"
                ]
            },
            "minVersion": 2,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.DSM.Network": {
            "lib": "/usr/syno/synoman/webapi/lib/SYNO.DSM.Network.so",
            "maxVersion": 2,
            "methods": {
                "2": [
                    "list"
                ]
            },
            "minVersion": 2,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.DSM.PortEnable": {
            "lib": "lib/SYNO.DSM.PortEnable.so",
            "minVersion": 1,
            "maxVersion": 1,
            "methods": {
                "1": [
                    "is_pkg_enable",
                    "is_port_block",
                    "open_block_port"
                ]
            },
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.DSM.PushNotification": {
            "lib": "/usr/syno/synoman/webapi/lib/SYNO.DSM.PushNotification.so",
            "maxVersion": 2,
            "methods": {
                "2": [
                    "requesttoken"
                ]
            },
            "minVersion": 2,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        }
    },
    "SYNO.DisasterRecovery": {
        "SYNO.DisasterRecovery.Log": {
            "lib": "lib/SYNO.DisasterRecovery.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "export",
                    "clear"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.DisasterRecovery.Retention": {
            "lib": "lib/SYNO.DisasterRecovery.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "get_timezone",
                    "set",
                    "set_timezone",
                    "delete",
                    "info"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        }
    },
    "SYNO.Docker": {
        "SYNO.Docker.Container": {
            "lib": "/var/packages/Docker/target/webapi/container/SYNO.Docker.Container.so",
            "minVersion": 1,
            "maxVersion": 1,
            "methods": {
                "1": [
                    "create",
                    "delete",
                    "export",
                    "import",
                    "get",
                    "get_log",
                    "get_process",
                    "list",
                    "restart",
                    "set",
                    "set_start",
                    "set_status",
                    "signal",
                    "start",
                    "stop",
                    "upload"
                ]
            },
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Docker.Container.Log": {
            "lib": "/var/packages/Docker/target/webapi/container/SYNO.Docker.Container.so",
            "minVersion": 1,
            "maxVersion": 1,
            "methods": {
                "1": [
                    "export",
                    "get",
                    "get_date_by_id",
                    "get_date_list",
                    "search"
                ]
            },
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Docker.Container.Profile": {
            "lib": "/var/packages/Docker/target/webapi/container/SYNO.Docker.Container.so",
            "minVersion": 1,
            "maxVersion": 1,
            "methods": {
                "1": [
                    "duplicate",
                    "export",
                    "import",
                    "upload"
                ]
            },
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Docker.Container.Resource": {
            "lib": "/var/packages/Docker/target/webapi/container/SYNO.Docker.Container.so",
            "minVersion": 1,
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Docker.Container.PkgProfile": {
            "lib": "/var/packages/Docker/target/webapi/container/SYNO.Docker.Container.so",
            "minVersion": 1,
            "maxVersion": 1,
            "methods": {
                "1": [
                    "create",
                    "remove"
                ]
            },
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Docker.Image": {
            "lib": "/var/packages/Docker/target/webapi/image/SYNO.Docker.Image.so",
            "minVersion": 1,
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "pull_start",
                    "pull_status",
                    "export",
                    "import",
                    "delete",
                    "upload",
                    "get"
                ]
            },
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Docker.Log": {
            "lib": "/var/packages/Docker/target/webapi/log/SYNO.Docker.Log.so",
            "minVersion": 1,
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "clear",
                    "export"
                ]
            },
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Docker.Registry": {
            "lib": "/var/packages/Docker/target/webapi/registry/SYNO.Docker.Registry.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "search",
                    "tags",
                    "get",
                    "create",
                    "set",
                    "using",
                    "delete"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Docker.Network": {
            "lib": "/var/packages/Docker/target/webapi/network/SYNO.Docker.Network.so",
            "minVersion": 1,
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "list_container",
                    "create",
                    "remove",
                    "connect",
                    "disconnect",
                    "set",
                    "get"
                ]
            },
            "path": "entry.cgi",
            "requestFormat": "JSON"
        }
    },
    "SYNO.DownloadStation": {
        "SYNO.DownloadStation.BTSearch": {
            "maxVersion": 1,
            "methods": {
                "1": [
                    "start",
                    "list",
                    "getCategory",
                    "clean",
                    "getModule"
                ]
            },
            "minVersion": 1,
            "path": "DownloadStation/btsearch.cgi"
        },
        "SYNO.DownloadStation.Info": {
            "maxVersion": 2,
            "methods": {
                "1": [
                    "getinfo",
                    "getconfig",
                    "setserverconfig"
                ],
                "2": [
                    "getinfo",
                    "getconfig",
                    "setserverconfig"
                ]
            },
            "minVersion": 1,
            "path": "DownloadStation/info.cgi"
        },
        "SYNO.DownloadStation.RSS.Feed": {
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "DownloadStation/RSSfeed.cgi"
        },
        "SYNO.DownloadStation.RSS.Site": {
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "refresh"
                ]
            },
            "minVersion": 1,
            "path": "DownloadStation/RSSsite.cgi"
        },
        "SYNO.DownloadStation.Schedule": {
            "maxVersion": 1,
            "methods": {
                "1": [
                    "getconfig",
                    "setconfig"
                ]
            },
            "minVersion": 1,
            "path": "DownloadStation/schedule.cgi"
        },
        "SYNO.DownloadStation.Statistic": {
            "maxVersion": 1,
            "methods": {
                "1": [
                    "getinfo"
                ]
            },
            "minVersion": 1,
            "path": "DownloadStation/statistic.cgi"
        },
        "SYNO.DownloadStation.Task": {
            "maxVersion": 3,
            "methods": {
                "1": [
                    "list",
                    "getinfo",
                    "create",
                    "delete",
                    "resume",
                    "pause"
                ],
                "2": [
                    "list",
                    "getinfo",
                    "create",
                    "delete",
                    "resume",
                    "pause",
                    "edit"
                ],
                "3": [
                    "list",
                    "getinfo",
                    "create",
                    "delete",
                    "resume",
                    "pause",
                    "edit"
                ]
            },
            "minVersion": 1,
            "path": "DownloadStation/task.cgi"
        }
    },
    "SYNO.DownloadStation2": {
        "SYNO.DownloadStation2.BTSearch": {
            "lib": "/var/packages/DownloadStation/target/webapi/SYNO.DownloadStation2.BTSearch.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list_category",
                    "list",
                    "stop",
                    "start"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.DownloadStation2.Captcha": {
            "lib": "/var/packages/DownloadStation/target/webapi/SYNO.DownloadStation2.Captcha.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "download",
                    "set",
                    "list"
                ],
                "2": [
                    "download",
                    "set",
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.DownloadStation2.Package.Info": {
            "lib": "/var/packages/DownloadStation/target/webapi/SYNO.DownloadStation2.Package.so",
            "maxVersion": 2,
            "methods": {
                "2": [
                    "get"
                ]
            },
            "minVersion": 2,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.DownloadStation2.Package.Module": {
            "lib": "/var/packages/DownloadStation/target/webapi/SYNO.DownloadStation2.Package.so",
            "maxVersion": 2,
            "methods": {
                "2": [
                    "get",
                    "list"
                ]
            },
            "minVersion": 2,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.DownloadStation2.Package.Service": {
            "lib": "/var/packages/DownloadStation/target/webapi/SYNO.DownloadStation2.Package.so",
            "maxVersion": 2,
            "methods": {
                "2": [
                    "get"
                ]
            },
            "minVersion": 2,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.DownloadStation2.RSS.Feed": {
            "lib": "/var/packages/DownloadStation/target/webapi/SYNO.DownloadStation2.RSS.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "add",
                    "updateall",
                    "update",
                    "delete",
                    "set",
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.DownloadStation2.RSS.Filter": {
            "lib": "/var/packages/DownloadStation/target/webapi/SYNO.DownloadStation2.RSS.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "test",
                    "delete",
                    "list",
                    "set",
                    "add"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.DownloadStation2.RSS.Item": {
            "lib": "/var/packages/DownloadStation/target/webapi/SYNO.DownloadStation2.RSS.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "clear",
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.DownloadStation2.Settings.FileHosting": {
            "lib": "/var/packages/DownloadStation/target/webapi/SYNO.DownloadStation2.Settings.FileHosting.so",
            "maxVersion": 2,
            "methods": {
                "2": [
                    "verify",
                    "get",
                    "set",
                    "list",
                    "update",
                    "delete",
                    "create"
                ]
            },
            "minVersion": 2,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.DownloadStation2.Settings.AutoExtraction": {
            "lib": "/var/packages/DownloadStation/target/webapi/SYNO.DownloadStation2.Settings.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "set",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.DownloadStation2.Settings.BT": {
            "lib": "/var/packages/DownloadStation/target/webapi/SYNO.DownloadStation2.Settings.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.DownloadStation2.Settings.BTSearch": {
            "lib": "/var/packages/DownloadStation/target/webapi/SYNO.DownloadStation2.Settings.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "get",
                    "set",
                    "verify",
                    "create",
                    "delete",
                    "update_check",
                    "update",
                    "toggle_plugins"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.DownloadStation2.Settings.Emule": {
            "lib": "/var/packages/DownloadStation/target/webapi/SYNO.DownloadStation2.Settings.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.DownloadStation2.Settings.Emule.Location": {
            "lib": "/var/packages/DownloadStation/target/webapi/SYNO.DownloadStation2.Settings.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "set",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.DownloadStation2.Settings.FtpHttp": {
            "lib": "/var/packages/DownloadStation/target/webapi/SYNO.DownloadStation2.Settings.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.DownloadStation2.Settings.Global": {
            "lib": "/var/packages/DownloadStation/target/webapi/SYNO.DownloadStation2.Settings.so",
            "maxVersion": 2,
            "methods": {
                "2": [
                    "get",
                    "set",
                    "read_progress"
                ]
            },
            "minVersion": 2,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.DownloadStation2.Settings.Location": {
            "lib": "/var/packages/DownloadStation/target/webapi/SYNO.DownloadStation2.Settings.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.DownloadStation2.Settings.Nzb": {
            "lib": "/var/packages/DownloadStation/target/webapi/SYNO.DownloadStation2.Settings.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.DownloadStation2.Settings.Rss": {
            "lib": "/var/packages/DownloadStation/target/webapi/SYNO.DownloadStation2.Settings.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.DownloadStation2.Settings.Scheduler": {
            "lib": "/var/packages/DownloadStation/target/webapi/SYNO.DownloadStation2.Settings.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.DownloadStation2.Task.BT": {
            "lib": "/var/packages/DownloadStation/target/webapi/SYNO.DownloadStation2.Task.BT.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "get",
                    "set"
                ],
                "2": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.DownloadStation2.Task.BT.File": {
            "lib": "/var/packages/DownloadStation/target/webapi/SYNO.DownloadStation2.Task.BT.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "set",
                    "list",
                    "copy"
                ],
                "2": [
                    "set",
                    "list",
                    "copy"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.DownloadStation2.Task.BT.Peer": {
            "lib": "/var/packages/DownloadStation/target/webapi/SYNO.DownloadStation2.Task.BT.so",
            "maxVersion": 2,
            "methods": {
                "2": [
                    "list"
                ]
            },
            "minVersion": 2,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.DownloadStation2.Task.BT.Tracker": {
            "lib": "/var/packages/DownloadStation/target/webapi/SYNO.DownloadStation2.Task.BT.so",
            "maxVersion": 2,
            "methods": {
                "2": [
                    "list",
                    "add",
                    "delete"
                ]
            },
            "minVersion": 2,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.DownloadStation2.Task.NZB.File": {
            "lib": "/var/packages/DownloadStation/target/webapi/SYNO.DownloadStation2.Task.NZB.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.DownloadStation2.Task.NZB.Log": {
            "lib": "/var/packages/DownloadStation/target/webapi/SYNO.DownloadStation2.Task.NZB.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.DownloadStation2.Task.eMule": {
            "lib": "/var/packages/DownloadStation/target/webapi/SYNO.DownloadStation2.Task.eMule.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list_upload"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.DownloadStation2.Task": {
            "lib": "/var/packages/DownloadStation/target/webapi/SYNO.DownloadStation2.Task.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "create",
                    "list",
                    "get",
                    "delete",
                    "pause",
                    "resume",
                    "edit"
                ],
                "2": [
                    "resume_condition",
                    "pause_condition",
                    "delete_condition",
                    "create",
                    "list",
                    "get",
                    "delete",
                    "pause",
                    "resume",
                    "edit"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.DownloadStation2.Task.Complete": {
            "lib": "/var/packages/DownloadStation/target/webapi/SYNO.DownloadStation2.Task.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "start",
                    "status",
                    "stop"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.DownloadStation2.Task.List": {
            "lib": "/var/packages/DownloadStation/target/webapi/SYNO.DownloadStation2.Task.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "get",
                    "download",
                    "delete"
                ],
                "2": [
                    "get",
                    "download",
                    "delete"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.DownloadStation2.Task.List.Polling": {
            "lib": "/var/packages/DownloadStation/target/webapi/SYNO.DownloadStation2.Task.so",
            "maxVersion": 2,
            "methods": {
                "2": [
                    "download_stop",
                    "download_status",
                    "download"
                ]
            },
            "minVersion": 2,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.DownloadStation2.Task.Source": {
            "lib": "/var/packages/DownloadStation/target/webapi/SYNO.DownloadStation2.Task.so",
            "maxVersion": 2,
            "methods": {
                "2": [
                    "download"
                ]
            },
            "minVersion": 2,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.DownloadStation2.Task.Statistic": {
            "lib": "/var/packages/DownloadStation/target/webapi/SYNO.DownloadStation2.Task.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.DownloadStation2.Thumbnail": {
            "lib": "/var/packages/DownloadStation/target/webapi/SYNO.DownloadStation2.Thumbnail.so",
            "maxVersion": 2,
            "methods": {
                "2": [
                    "get",
                    "download"
                ]
            },
            "minVersion": 2,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.DownloadStation2.eMule.Search": {
            "lib": "/var/packages/DownloadStation/target/webapi/SYNO.DownloadStation2.eMule.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "download",
                    "list",
                    "stop",
                    "start"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.DownloadStation2.eMule.Server": {
            "lib": "/var/packages/DownloadStation/target/webapi/SYNO.DownloadStation2.eMule.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get_status",
                    "connect_kad",
                    "disconnect",
                    "connect",
                    "delete",
                    "add",
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        }
    },
    "SYNO.Entry": {
        "SYNO.Entry.Request.Polling": {
            "lib": "lib/webapi_entry_polling.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "status",
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Entry.Request": {
            "lib": "lib/NotExist.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "request"
                ],
                "2": [
                    "request"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Entry.SocketIo": {
            "lib": "/usr/syno/synoman/webapi/lib/webapi_entry_socket.io.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "listeners_count",
                    "emit"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        }
    },
    "SYNO.FileStation": {
        "SYNO.FileStation.BackgroundTask": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.BackgroundTask.so",
            "maxVersion": 3,
            "methods": {
                "1": [
                    "list",
                    "clear_finished"
                ],
                "2": [
                    "list",
                    "clear_finished"
                ],
                "3": [
                    "list",
                    "clear_finished"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.CheckExist": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.Directory.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "check"
                ],
                "2": [
                    "check"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.CheckPermission": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.CheckPermission.so",
            "maxVersion": 3,
            "methods": {
                "1": [
                    "write"
                ],
                "2": [
                    "write"
                ],
                "3": [
                    "write"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.Compress": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.Compress.so",
            "maxVersion": 3,
            "methods": {
                "1": [
                    "start",
                    "status",
                    "stop"
                ],
                "2": [
                    "start",
                    "status",
                    "stop"
                ],
                "3": [
                    "start",
                    "status",
                    "stop"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.CopyMove": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.CopyMove.so",
            "maxVersion": 3,
            "methods": {
                "1": [
                    "start",
                    "status",
                    "stop"
                ],
                "2": [
                    "start",
                    "status",
                    "stop"
                ],
                "3": [
                    "start",
                    "status",
                    "stop"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.CreateFolder": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.Directory.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "create"
                ],
                "2": [
                    "create"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.Delete": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.Delete.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "start",
                    "stop",
                    "status",
                    "delete"
                ],
                "2": [
                    "start",
                    "stop",
                    "status",
                    "delete"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.DirSize": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.Directory.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "start",
                    "status",
                    "stop"
                ],
                "2": [
                    "start",
                    "status",
                    "stop"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.Download": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.Download.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "download"
                ],
                "2": [
                    "download"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.External.GoogleDrive": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.External.GoogleDrive.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "open"
                ],
                "2": [
                    "open"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.Extract": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.Extract.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list",
                    "start",
                    "status",
                    "stop"
                ],
                "2": [
                    "list",
                    "start",
                    "status",
                    "stop"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.Favorite": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.Favorite.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list",
                    "edit",
                    "delete",
                    "add",
                    "clear_broken",
                    "replace_all"
                ],
                "2": [
                    "list",
                    "edit",
                    "delete",
                    "add",
                    "clear_broken",
                    "replace_all"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.FormUpload": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.Upload.so",
            "maxVersion": 2,
            "methods": {
                "2": [
                    "start",
                    "status",
                    "cancel"
                ]
            },
            "minVersion": 2,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.Info": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.Info.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "get"
                ],
                "2": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.List": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.List.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list",
                    "list_share",
                    "getinfo"
                ],
                "2": [
                    "list",
                    "list_share",
                    "getinfo"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.MD5": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.MD5.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "start",
                    "status",
                    "stop"
                ],
                "2": [
                    "start",
                    "status",
                    "stop"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.Mount": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.Mount.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "mount_iso",
                    "mount_remote",
                    "unmount"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.Mount.List": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.Mount.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "unmount",
                    "reconnect",
                    "remount"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.Notify": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.Notify.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "all",
                    "one"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.PhotoUpload": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.Upload.so",
            "maxVersion": 3,
            "methods": {
                "2": [
                    "upload"
                ],
                "3": [
                    "upload"
                ]
            },
            "minVersion": 2,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.Property": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.Property.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "set",
                    "status",
                    "stop"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.Property.ACLOwner": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.Property.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.Property.CompressSize": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.Property.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.Property.Mtime": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.Property.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.Rename": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.Rename.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "rename"
                ],
                "2": [
                    "rename"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.Search": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.Search.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list",
                    "start",
                    "stop",
                    "clean"
                ],
                "2": [
                    "list",
                    "start",
                    "stop",
                    "clean"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.Search.History": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.Search.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set",
                    "delete"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.Settings": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.Settings.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.Sharing": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.Sharing.so",
            "maxVersion": 3,
            "methods": {
                "1": [
                    "create",
                    "list",
                    "edit",
                    "delete",
                    "clear_invalid",
                    "getinfo"
                ],
                "2": [
                    "create",
                    "list",
                    "list_share_me",
                    "edit",
                    "delete",
                    "clear_invalid",
                    "getinfo"
                ],
                "3": [
                    "create",
                    "list",
                    "list_share_me",
                    "edit",
                    "delete",
                    "clear_invalid",
                    "getinfo"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.Sharing.Download": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.Sharing.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "download"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.Snapshot": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.Snapshot.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list",
                    "history",
                    "desc"
                ],
                "2": [
                    "list",
                    "history",
                    "desc"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.Thumb": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.Thumb.so",
            "maxVersion": 3,
            "methods": {
                "1": [
                    "get"
                ],
                "2": [
                    "get"
                ],
                "3": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.Timeout": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.Misc.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "avoid"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.UIString": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.Misc.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "getjs"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.Upload": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.Upload.so",
            "maxVersion": 3,
            "methods": {
                "2": [
                    "upload"
                ],
                "3": [
                    "upload"
                ]
            },
            "minVersion": 2,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.UserGrp": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.UserGrp.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list_user",
                    "list_group",
                    "list_all"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.VFS.Connection": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.VFS.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "create",
                    "set",
                    "delete",
                    "list",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.VFS.File": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.VFS.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.VFS.GDrive": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.VFS.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "download"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.VFS.Profile": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.VFS.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "create",
                    "set",
                    "delete",
                    "get",
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.VFS.Protocol": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.VFS.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.VFS.User": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.VFS.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.VirtualFolder": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.VirtualFolder.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list"
                ],
                "2": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        }
    },
    "SYNO.Finder": {
        "SYNO.Finder.AppIndexing.Search": {
            "lib": "/var/packages/SynoFinder/target/webapi/SYNO.Finder.AppIndexing.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "search"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Finder.Bookmark": {
            "lib": "/var/packages/SynoFinder/target/webapi/SYNO.Finder.Bookmark.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "del",
                    "get",
                    "add"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Finder.Elastic.SearchHistory": {
            "lib": "/var/packages/SynoFinder/target/webapi/SYNO.Finder.Elastic.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "delete",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Finder.Elastic.Spotlight": {
            "lib": "/var/packages/SynoFinder/target/webapi/SYNO.Finder.Elastic.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "boost"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Finder.Elastic.Term": {
            "lib": "/var/packages/SynoFinder/target/webapi/SYNO.Finder.Elastic.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list_avail_db",
                    "suggest"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Finder.File": {
            "lib": "/var/packages/SynoFinder/target/webapi/SYNO.Finder.File.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Finder.File.Cover": {
            "lib": "/var/packages/SynoFinder/target/webapi/SYNO.Finder.File.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Finder.File.Thumbnail": {
            "lib": "/var/packages/SynoFinder/target/webapi/SYNO.Finder.File.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Finder.FileIndexing.Folder": {
            "lib": "/var/packages/SynoFinder/target/webapi/SYNO.Finder.FileIndexing.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "reindex",
                    "delete",
                    "check",
                    "stop_check",
                    "list",
                    "list_group",
                    "summary",
                    "set",
                    "add",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Finder.FileIndexing.Highlight": {
            "lib": "/var/packages/SynoFinder/target/webapi/SYNO.Finder.FileIndexing.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "highlight"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Finder.FileIndexing.Indicate": {
            "lib": "/var/packages/SynoFinder/target/webapi/SYNO.Finder.FileIndexing.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "indicate"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Finder.FileIndexing.Search": {
            "lib": "/var/packages/SynoFinder/target/webapi/SYNO.Finder.FileIndexing.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "search"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Finder.FileIndexing.Status": {
            "lib": "/var/packages/SynoFinder/target/webapi/SYNO.Finder.FileIndexing.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "resume",
                    "pause",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Finder.FileIndexing.Term": {
            "lib": "/var/packages/SynoFinder/target/webapi/SYNO.Finder.FileIndexing.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "update"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Finder.Preference": {
            "lib": "/var/packages/SynoFinder/target/webapi/SYNO.Finder.Preference.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "set",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Finder.Settings": {
            "lib": "/var/packages/SynoFinder/target/webapi/SYNO.Finder.Settings.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "set",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Finder.UserGrp": {
            "lib": "/var/packages/SynoFinder/target/webapi/SYNO.Finder.UserGrp.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list_group",
                    "list_user"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        }
    },
    "SYNO.FolderSharing": {
        "SYNO.FolderSharing.Download": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FolderSharing.Download.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "download"
                ],
                "2": [
                    "download"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FolderSharing.List": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FolderSharing.List.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list"
                ],
                "2": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FolderSharing.Thumb": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FolderSharing.Thumb.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "get"
                ],
                "2": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        }
    },
    "SYNO.License": {
        "SYNO.License.HA": {
            "lib": "lib/SYNO.License.HA.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get_uuid",
                    "save_vault",
                    "ha_remote_login"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        }
    },
    "SYNO.MariaDB10": {
        "SYNO.MariaDB10.lib": {
            "lib": "/var/packages/MariaDB10/target/webapi/SYNO.MariaDB10.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get_info",
                    "apply",
                    "get_user",
                    "reset_root_password",
                    "change_password",
                    "rebuild",
                    "validate_password"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        }
    },
    "SYNO.MediaServer": {
        "SYNO.MediaServer.ClientList": {
            "lib": "/var/packages/MediaServer/target/webapi/client_list/SYNO.MediaServer.ClientList.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "clear_client",
                    "save_client",
                    "list_client",
                    "list_profile"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.MediaServer.IndexedFolder": {
            "lib": "/var/packages/MediaServer/target/webapi/indexed_folder/SYNO.MediaServer.IndexedFolder.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.MediaServer.Log": {
            "lib": "/var/packages/MediaServer/target/webapi/log/SYNO.MediaServer.Log.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "clear",
                    "download",
                    "set",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.MediaServer.Menu": {
            "lib": "/var/packages/MediaServer/target/webapi/menu/SYNO.MediaServer.Menu.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get_lang_text",
                    "set",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.MediaServer.Setting": {
            "lib": "/var/packages/MediaServer/target/webapi/setting/SYNO.MediaServer.Setting.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "set",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.MediaServer.VideoCollection": {
            "lib": "/var/packages/MediaServer/target/webapi/video_collection/SYNO.MediaServer.VideoCollection.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "set",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        }
    },
    "SYNO.Network": {
        "SYNO.Network.DHCPServer": {
            "lib": "/var/packages/DhcpServer/target/webapi/dhcpserver/SYNO.Network.DHCPServer.so",
            "maxVersion": 4,
            "methods": {
                "1": [
                    "get",
                    "set"
                ],
                "2": [
                    "get",
                    "set"
                ],
                "3": [
                    "get",
                    "set"
                ],
                "4": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Network.DHCPServer.ClientList": {
            "lib": "/var/packages/DhcpServer/target/webapi/dhcpserver/SYNO.Network.DHCPServer.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list",
                    "delete_devices"
                ],
                "2": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Network.DHCPServer.PXE": {
            "lib": "/var/packages/DhcpServer/target/webapi/dhcpserver/SYNO.Network.DHCPServer.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Network.DHCPServer.Reservation": {
            "lib": "/var/packages/DhcpServer/target/webapi/dhcpserver/SYNO.Network.DHCPServer.so",
            "maxVersion": 3,
            "methods": {
                "1": [
                    "get",
                    "set"
                ],
                "2": [
                    "get",
                    "set"
                ],
                "3": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Network.DHCPServer.Vendor": {
            "lib": "/var/packages/DhcpServer/target/webapi/dhcpserver/SYNO.Network.DHCPServer.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Network.DHCPServer.WPAD": {
            "lib": "/var/packages/DhcpServer/target/webapi/dhcpserver/SYNO.Network.DHCPServer.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        }
    },
    "SYNO.OAUTH": {
        "SYNO.OAUTH.Client": {
            "lib": "/var/packages/OAuthService/target/webapi/SYNO.OAUTH.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "get",
                    "add",
                    "enable",
                    "disable",
                    "del"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.OAUTH.Common": {
            "lib": "/var/packages/OAuthService/target/webapi/SYNO.OAUTH.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.OAUTH.Log": {
            "lib": "/var/packages/OAuthService/target/webapi/SYNO.OAUTH.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "del",
                    "add",
                    "export"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.OAUTH.Token": {
            "lib": "/var/packages/OAuthService/target/webapi/SYNO.OAUTH.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "revoke",
                    "verify"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        }
    },
    "SYNO.Package": {
        "SYNO.Package": {
            "lib": "lib/SYNO.Package.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        }
    },
    "SYNO.PersonMailAccount": {
        "SYNO.PersonMailAccount": {
            "lib": "lib/webapi_emailaccount.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "set",
                    "delete",
                    "get",
                    "update",
                    "test"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.PersonMailAccount.Contacts": {
            "lib": "lib/webapi_emailaccount.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.PersonMailAccount.Mail": {
            "lib": "lib/webapi_emailaccount.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "send",
                    "status",
                    "stop",
                    "clean"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        }
    },
    "SYNO.Remote": {
        "SYNO.Remote.Credential": {
            "lib": "lib/SYNO.Remote.Credential.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Remote.Credential.Challenge": {
            "lib": "lib/SYNO.Remote.Credential.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Remote.Credential.Info": {
            "lib": "lib/SYNO.Remote.Credential.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Remote.Credential.Verifier": {
            "lib": "lib/SYNO.Remote.Credential.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        }
    },
    "SYNO.ResourceMonitor": {
        "SYNO.ResourceMonitor.EventRule": {
            "lib": "lib/SYNO.ResourceMonitor.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "get",
                    "set",
                    "delete",
                    "onoff"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.ResourceMonitor.Log": {
            "lib": "lib/SYNO.ResourceMonitor.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "clear",
                    "export"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.ResourceMonitor.Setting": {
            "lib": "lib/SYNO.ResourceMonitor.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        }
    },
    "SYNO.S2S": {
        "SYNO.S2S.Server": {
            "lib": "lib/libS2SServer.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.S2S.Server.Pair": {
            "lib": "lib/libS2SServerPair.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "get",
                    "delete"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.S2S.Client": {
            "lib": "lib/libS2SClient.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list_server"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.S2S.Client.Job": {
            "lib": "lib/libS2SClientJob.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "get",
                    "set",
                    "create",
                    "delete",
                    "start",
                    "stop",
                    "test_connection"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        }
    },
    "SYNO.SDS": {
        "SYNO.SDS.Backup.Client.Common.Log": {
            "lib": "/var/packages/HyperBackup/target/webapi/SYNO.SDS.Backup.Client.Common.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "export"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SDS.Backup.Client.Common.Statistic": {
            "lib": "/var/packages/HyperBackup/target/webapi/SYNO.SDS.Backup.Client.Common.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "config_set",
                    "config_get",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SDS.Backup.Client.Common.Target": {
            "lib": "/var/packages/HyperBackup/target/webapi/SYNO.SDS.Backup.Client.Common.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "password_verify",
                    "private_key_verify"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SDS.Backup.Client.Common.Version": {
            "lib": "/var/packages/HyperBackup/target/webapi/SYNO.SDS.Backup.Client.Common.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "check_file_log",
                    "download_file_log"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SDS.Backup.Client.Explore.File": {
            "lib": "/var/packages/HyperBackup/target/webapi/SYNO.SDS.Backup.Client.Explore.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list",
                    "copy",
                    "restore",
                    "download"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SDS.Backup.Client.Explore.Folder": {
            "lib": "/var/packages/HyperBackup/target/webapi/SYNO.SDS.Backup.Client.Explore.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SDS.Backup.Client.Explore.Job": {
            "lib": "/var/packages/HyperBackup/target/webapi/SYNO.SDS.Backup.Client.Explore.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list",
                    "cancel"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SDS.Backup.Client.Explore.Target": {
            "lib": "/var/packages/HyperBackup/target/webapi/SYNO.SDS.Backup.Client.Explore.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SDS.Backup.Client.Explore.Version": {
            "lib": "/var/packages/HyperBackup/target/webapi/SYNO.SDS.Backup.Client.Explore.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list",
                    "summary"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SDS.Backup.Client.Fuse.Target": {
            "lib": "/var/packages/HyperBackup/target/webapi/SYNO.SDS.Backup.Client.Fuse.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get_avail_mountpoint",
                    "mount_by_password",
                    "mount_by_private",
                    "umount"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        }
    },
    "SYNO.SecureSignIn": {
        "SYNO.SecureSignIn.Authenticator": {
            "lib": "/var/packages/SecureSignIn/target/webapi/authenticator/SYNO.SecureSignIn.Authenticator.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "revoke",
                    "revokeAll",
                    "update"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SecureSignIn.Authenticator.Ex": {
            "lib": "/var/packages/SecureSignIn/target/webapi/authenticator/SYNO.SecureSignIn.Authenticator.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "revoke",
                    "revokeAll"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SecureSignIn.Authenticator.Info": {
            "lib": "/var/packages/SecureSignIn/target/webapi/authenticator/SYNO.SecureSignIn.Authenticator.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "get"
                ],
                "2": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SecureSignIn.Authenticator.Registration": {
            "lib": "/var/packages/SecureSignIn/target/webapi/authenticator/SYNO.SecureSignIn.Authenticator.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "register",
                    "available"
                ],
                "2": [
                    "invite"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SecureSignIn.Authenticator.Registration.Ex": {
            "lib": "/var/packages/SecureSignIn/target/webapi/authenticator/SYNO.SecureSignIn.Authenticator.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "available"
                ],
                "2": [
                    "invite"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SecureSignIn.Authenticator.Request": {
            "lib": "/var/packages/SecureSignIn/target/webapi/authenticator/SYNO.SecureSignIn.Authenticator.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "revoke",
                    "status"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SecureSignIn.Authenticator.Verdict": {
            "lib": "/var/packages/SecureSignIn/target/webapi/authenticator/SYNO.SecureSignIn.Authenticator.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "approve",
                    "deny"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SecureSignIn.Fido.Manage": {
            "lib": "/var/packages/SecureSignIn/target/webapi/fido/SYNO.SecureSignIn.Fido.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "update",
                    "delete",
                    "deleteAll"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SecureSignIn.Fido.Manage.Ex": {
            "lib": "/var/packages/SecureSignIn/target/webapi/fido/SYNO.SecureSignIn.Fido.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "update",
                    "delete",
                    "deleteAll"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SecureSignIn.Fido.Register": {
            "lib": "/var/packages/SecureSignIn/target/webapi/fido/SYNO.SecureSignIn.Fido.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get_attest",
                    "register"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SecureSignIn.Fido.Register.Ex": {
            "lib": "/var/packages/SecureSignIn/target/webapi/fido/SYNO.SecureSignIn.Fido.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get_attest",
                    "register"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SecureSignIn.Method": {
            "lib": "/var/packages/SecureSignIn/target/webapi/method/SYNO.SecureSignIn.Method.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SecureSignIn.Method.Admin": {
            "lib": "/var/packages/SecureSignIn/target/webapi/method/SYNO.SecureSignIn.Method.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "reset"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SecureSignIn.Method.Ex": {
            "lib": "/var/packages/SecureSignIn/target/webapi/method/SYNO.SecureSignIn.Method.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "get_user",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SecureSignIn.Package": {
            "lib": "/var/packages/SecureSignIn/target/webapi/package/SYNO.SecureSignIn.Package.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SecureSignIn.Package.Ex": {
            "lib": "/var/packages/SecureSignIn/target/webapi/package/SYNO.SecureSignIn.Package.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SecureSignIn.Package.Request": {
            "lib": "/var/packages/SecureSignIn/target/webapi/package/SYNO.SecureSignIn.Package.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "available"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        }
    },
    "SYNO.SecurityAdvisor": {
        "SYNO.SecurityAdvisor.Conf": {
            "lib": "lib/SYNO.SecurityAdvisor.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "set",
                    "get",
                    "init"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SecurityAdvisor.Conf.Checklist": {
            "lib": "lib/SYNO.SecurityAdvisor.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SecurityAdvisor.Conf.Checklist.Alert": {
            "lib": "lib/SYNO.SecurityAdvisor.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SecurityAdvisor.Conf.Location": {
            "lib": "lib/SYNO.SecurityAdvisor.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SecurityAdvisor.LoginActivity": {
            "lib": "lib/SYNO.SecurityAdvisor.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SecurityAdvisor.Report": {
            "lib": "lib/SYNO.SecurityAdvisor.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "create"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SecurityAdvisor.Report.HTML": {
            "lib": "lib/SYNO.SecurityAdvisor.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "open"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        }
    },
    "SYNO.Snap": {
        "SYNO.Snap.Usage.Share": {
            "lib": "lib/SYNO.Snap.Usage.Share.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "start",
                    "status",
                    "get_report",
                    "cancel",
                    "clean",
                    "get_conf",
                    "set_conf"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        }
    },
    "SYNO.Storage": {
        "SYNO.Storage.CGI.BtrfsDedupe": {
            "lib": "lib/libStorage.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get_status",
                    "manual_dedupe",
                    "dry_run",
                    "get_volume_info",
                    "set_volume_schedule_config",
                    "set_schedule_plan",
                    "get_schedule_plan",
                    "check_quota",
                    "clear_quota",
                    "stop"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Storage.CGI.Cache.Protection": {
            "lib": "lib/libStorage.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get_config",
                    "update_config",
                    "enable_passive",
                    "disable_passive",
                    "get_status",
                    "get_status_all"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Storage.CGI.Check": {
            "lib": "lib/libStorage.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "do_disk_scan",
                    "remove_ask_for_remap_scan",
                    "remove_ask_for_wcache_lost_data_scrubbing",
                    "remove_ask_for_fsck_scan",
                    "remove_ask_for_fsck",
                    "is_data_scrubbing",
                    "do_data_scrubbing",
                    "ignore_data_scrubbing",
                    "is_building",
                    "reboot_after_rebuild",
                    "should_ask_for_fsck_scan"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Storage.CGI.DetectedPool": {
            "lib": "lib/libStorage.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "assemble",
                    "remove"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Storage.CGI.DualEnclosure": {
            "lib": "lib/libStorage.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "load"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Storage.CGI.Enclosure": {
            "lib": "lib/libStorage.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "load",
                    "exp_fw_update",
                    "exp_fw_fail_get",
                    "exp_fw_update_list_get",
                    "exp_fw_update_status_get",
                    "exp_fw_update_cancel_notify",
                    "is_exp_connected",
                    "sha_exp_fw_update",
                    "sha_exp_fw_fail_get",
                    "sha_exp_fw_update_list_get",
                    "sha_exp_fw_update_status_get",
                    "sha_exp_fw_update_cancel_notify",
                    "sha_is_exp_connected"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Storage.CGI.Flashcache": {
            "lib": "lib/libStorage.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "check_system_raid",
                    "configure",
                    "check_can_create",
                    "is_redundancy_degraded",
                    "estimate_mem_size",
                    "check_volume_abnormal_cant_create_cache",
                    "remove",
                    "remove_cancel",
                    "repair",
                    "create_feasibility_hard_check",
                    "enable",
                    "check_can_lock_space",
                    "advisor_poll",
                    "check_pin_metadata_and_rec_size",
                    "advisor_history_get",
                    "advisor_start",
                    "advisor_stop"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Storage.CGI.HddMan": {
            "lib": "lib/libStorage.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set",
                    "send_health_report"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Storage.CGI.Pool": {
            "lib": "lib/libStorage.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "cancel_data_scrubbing",
                    "pause_data_scrubbing",
                    "cancel_create",
                    "create",
                    "data_scrubbing",
                    "delete",
                    "deactivate",
                    "edit_desc",
                    "get_setting",
                    "set_setting",
                    "enum_resource",
                    "estimate_size",
                    "expand_by_add_disk",
                    "expand_unallocated",
                    "expand_unfinished_shr",
                    "migrate",
                    "repair",
                    "replace",
                    "check_fast_repair",
                    "is_disk_detected_old_info",
                    "reassemble",
                    "remove_missing_pool",
                    "update_raid_sb_cache",
                    "remove_raid_sb_cache"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Storage.CGI.Smart": {
            "lib": "lib/libStorage.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "get_health_info",
                    "get_smart_info",
                    "get_smart_test_log",
                    "do_smart_test",
                    "secure_erase",
                    "list",
                    "update_smartctl_db",
                    "smart_warning_set",
                    "smart_warning_get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Storage.CGI.Smart.Scheduler": {
            "lib": "lib/libStorage.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set",
                    "list",
                    "delete",
                    "run",
                    "change_state"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Storage.CGI.Spare": {
            "lib": "lib/libStorage.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "add",
                    "edit",
                    "delete",
                    "potential_spares_dump",
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Storage.CGI.Spare.Conf": {
            "lib": "lib/libStorage.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Storage.CGI.Storage": {
            "lib": "lib/libStorage.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "load_info",
                    "load_bad_disks",
                    "login_check",
                    "repair_sys_partition",
                    "repair_system_partition",
                    "repair_rootbackup",
                    "set_schedule_plan",
                    "get_schedule_plan",
                    "set_resync_speed",
                    "get_resync_speed",
                    "set_data_scrubbing_schedule",
                    "set_data_scrubbing_schedule_status",
                    "set_fast_repair_config",
                    "get_fast_repair_config",
                    "set_auto_repair_config",
                    "get_auto_repair_config",
                    "get_sche_task_list",
                    "reload_raid_config",
                    "get_space_reclaim_status",
                    "get_space_reclaim_schedule",
                    "set_space_reclaim_schedule",
                    "delay_space_reclaim"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Storage.CGI.TaipeiEnclosure": {
            "lib": "lib/libStorage.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "load"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Storage.CGI.Volume": {
            "lib": "lib/libStorage.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "cancel_create",
                    "cancel_data_scrubbing",
                    "pause_data_scrubbing",
                    "cancel_defrag",
                    "cancel_fs_scrubbing",
                    "create_on_existing_pool",
                    "create",
                    "data_scrubbing",
                    "defrag",
                    "delete",
                    "deploy_unused",
                    "enum_resource",
                    "estimate_size",
                    "expand_by_add_disk",
                    "expand_pool_child",
                    "expand_unallocated",
                    "expand_unfinished_shr",
                    "convert_shr_to_pool",
                    "fs_scrubbing",
                    "migrate",
                    "next_trim_time_get",
                    "repair",
                    "ssd_trim_get",
                    "ssd_trim_save",
                    "vol_extent_size_get",
                    "vol_extent_size_set",
                    "transfer_to_rw",
                    "get_space_usage",
                    "enable_space_usage",
                    "disable_space_usage",
                    "set_setting",
                    "failover_keep_rw"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Storage.CGI.Volume.Installer": {
            "lib": "lib/libStorage.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "quick_create_precheck",
                    "quick_create"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        }
    },
    "SYNO.TextEditor": {
        "SYNO.TextEditor": {
            "lib": "/var/packages/TextEditor/target/webapi/lib/SYNO.TextEditor.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "translate"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.TextEditor.Preference": {
            "lib": "/var/packages/TextEditor/target/webapi/lib/SYNO.TextEditor.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "set",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        }
    },
    "SYNO.USBCopy": {
        "SYNO.USBCopy": {
            "lib": "/var/packages/USBCopy/target/lib/SYNO.USBCopy.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "create",
                    "get",
                    "get_filter",
                    "set_setting",
                    "set_trigger_time",
                    "set_filter",
                    "delete",
                    "run",
                    "cancel",
                    "enable",
                    "disable",
                    "get_global_setting",
                    "set_global_setting",
                    "get_log_list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        }
    },
    "SYNO.Utils": {
        "SYNO.Utils": {
            "lib": "/usr/syno/synoman/webapi/lib/SYNO.Utils.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "QRCode"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        }
    },
    "SYNO.VideoPlayer": {
        "SYNO.VideoPlayer.Subtitle": {
            "lib": "lib/SYNO.VideoPlayer.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.VideoPlayer.SynologyDrive.Subtitle": {
            "lib": "lib/SYNO.VideoPlayer.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        }
    },
    "SYNO.WebStation": {
        "SYNO.WebStation.Default": {
            "lib": "/var/packages/WebStation/target/webapi/SYNO.WebStation.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.WebStation.ErrorPage": {
            "lib": "/var/packages/WebStation/target/webapi/SYNO.WebStation.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "import",
                    "export",
                    "remove",
                    "update",
                    "create",
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.WebStation.HTTP.VHost": {
            "lib": "/var/packages/WebStation/target/webapi/SYNO.WebStation.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "add",
                    "delete",
                    "update"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.WebStation.PHP": {
            "lib": "/var/packages/WebStation/target/webapi/SYNO.WebStation.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set",
                    "set_advanced"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.WebStation.PHP.Profile": {
            "lib": "/var/packages/WebStation/target/webapi/SYNO.WebStation.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "add",
                    "update",
                    "delete"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.WebStation.Shortcut": {
            "lib": "/var/packages/WebStation/target/webapi/SYNO.WebStation.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "remove",
                    "list",
                    "update",
                    "create"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.WebStation.Status": {
            "lib": "/var/packages/WebStation/target/webapi/SYNO.WebStation.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.WebStation.WebService.Portal": {
            "lib": "/var/packages/WebStation/target/webapi/SYNO.WebStation.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "remove",
                    "create",
                    "update",
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.WebStation.WebService.Service": {
            "lib": "/var/packages/WebStation/target/webapi/SYNO.WebStation.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        }
    }
}