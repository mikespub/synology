{
    "SYNO.AudioStation": {
        "SYNO.AudioStation.Info": {
            "path": "AudioStation/info.cgi",
            "minVersion": 1,
            "maxVersion": 4,
            "methods": {
                "1": [
                    "getinfo"
                ],
                "2": [
                    "getinfo"
                ],
                "3": [
                    "getinfo"
                ],
                "4": [
                    "getinfo"
                ]
            }
        },
        "SYNO.AudioStation.Album": {
            "path": "AudioStation/album.cgi",
            "minVersion": 1,
            "maxVersion": 3,
            "methods": {
                "1": [
                    "list"
                ],
                "2": [
                    "list"
                ],
                "3": [
                    "list"
                ]
            }
        },
        "SYNO.AudioStation.Composer": {
            "path": "AudioStation/composer.cgi",
            "minVersion": 1,
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list"
                ],
                "2": [
                    "list"
                ]
            }
        },
        "SYNO.AudioStation.Genre": {
            "path": "AudioStation/genre.cgi",
            "minVersion": 1,
            "maxVersion": 3,
            "methods": {
                "1": [
                    "list"
                ],
                "2": [
                    "list"
                ],
                "3": [
                    "list",
                    "list_default_genre"
                ]
            }
        },
        "SYNO.AudioStation.Artist": {
            "path": "AudioStation/artist.cgi",
            "minVersion": 1,
            "maxVersion": 4,
            "methods": {
                "1": [
                    "list"
                ],
                "2": [
                    "list"
                ],
                "3": [
                    "list"
                ],
                "4": [
                    "list"
                ]
            }
        },
        "SYNO.AudioStation.Folder": {
            "path": "AudioStation/folder.cgi",
            "minVersion": 1,
            "maxVersion": 3,
            "methods": {
                "1": [
                    "list",
                    "getinfo"
                ],
                "2": [
                    "list",
                    "getinfo"
                ],
                "3": [
                    "list",
                    "getinfo"
                ]
            }
        },
        "SYNO.AudioStation.Song": {
            "path": "AudioStation/song.cgi",
            "minVersion": 1,
            "maxVersion": 3,
            "methods": {
                "1": [
                    "list",
                    "search",
                    "getinfo"
                ],
                "2": [
                    "list",
                    "search",
                    "getinfo",
                    "setrating",
                    "setsharing",
                    "getsharing"
                ],
                "3": [
                    "list",
                    "search",
                    "getinfo",
                    "setrating",
                    "setsharing",
                    "getsharing"
                ]
            }
        },
        "SYNO.AudioStation.Stream": {
            "path": "AudioStation/stream.cgi",
            "minVersion": 1,
            "maxVersion": 2,
            "methods": {
                "1": [
                    "stream",
                    "transcode"
                ],
                "2": [
                    "stream",
                    "transcode"
                ]
            }
        },
        "SYNO.AudioStation.Radio": {
            "path": "AudioStation/radio.cgi",
            "minVersion": 1,
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list",
                    "add",
                    "updateradios"
                ],
                "2": [
                    "list",
                    "add",
                    "search",
                    "updateradios"
                ]
            }
        },
        "SYNO.AudioStation.Playlist": {
            "path": "AudioStation/playlist.cgi",
            "minVersion": 1,
            "maxVersion": 3,
            "methods": {
                "1": [
                    "list",
                    "getinfo",
                    "create",
                    "delete",
                    "rename",
                    "copytolibrary",
                    "updatesongs",
                    "createsmart",
                    "updatesmart"
                ],
                "2": [
                    "list",
                    "getinfo",
                    "create",
                    "delete",
                    "rename",
                    "copytolibrary",
                    "updatesongs",
                    "createsmart",
                    "updatesmart",
                    "editsharing",
                    "saveplaying",
                    "savesearch",
                    "removemissing"
                ],
                "3": [
                    "list",
                    "getinfo",
                    "create",
                    "delete",
                    "rename",
                    "copytolibrary",
                    "updatesongs",
                    "createsmart",
                    "updatesmart",
                    "editsharing",
                    "saveplaying",
                    "savesearch",
                    "removemissing"
                ]
            }
        },
        "SYNO.AudioStation.RemotePlayer": {
            "path": "AudioStation/remote_player.cgi",
            "minVersion": 1,
            "maxVersion": 3,
            "methods": {
                "1": [
                    "list",
                    "getstatus",
                    "getplaylist",
                    "updateplaylist",
                    "control",
                    "testpassword",
                    "setpassword"
                ],
                "2": [
                    "list",
                    "getinfo",
                    "getstatus",
                    "getplaylist",
                    "updateplaylist",
                    "control",
                    "setmultiple",
                    "testpassword",
                    "setpassword"
                ],
                "3": [
                    "list",
                    "getinfo",
                    "getstatus",
                    "getplaylist",
                    "updateplaylist",
                    "control",
                    "setmultiple",
                    "testpassword",
                    "setpassword"
                ]
            }
        },
        "SYNO.AudioStation.RemotePlayerStatus": {
            "path": "AudioStation/remote_player_status.cgi",
            "minVersion": 1,
            "maxVersion": 1,
            "methods": {
                "1": [
                    "getstatus"
                ]
            }
        },
        "SYNO.AudioStation.WebPlayer": {
            "path": "AudioStation/web_player.cgi",
            "minVersion": 1,
            "maxVersion": 1,
            "methods": {
                "1": [
                    "getplaylist",
                    "updateplaylist"
                ]
            }
        },
        "SYNO.AudioStation.Proxy": {
            "path": "AudioStation/proxy.cgi",
            "minVersion": 1,
            "maxVersion": 1,
            "methods": {
                "1": [
                    "getstreamid",
                    "stream",
                    "getsonginfo",
                    "deletesonginfo"
                ]
            }
        },
        "SYNO.AudioStation.Lyrics": {
            "path": "AudioStation/lyrics.cgi",
            "minVersion": 1,
            "maxVersion": 2,
            "methods": {
                "1": [
                    "getlyrics",
                    "setlyrics"
                ],
                "2": [
                    "getlyrics",
                    "setlyrics"
                ]
            }
        },
        "SYNO.AudioStation.LyricsSearch": {
            "path": "AudioStation/lyrics_search.cgi",
            "minVersion": 1,
            "maxVersion": 2,
            "methods": {
                "1": [
                    "searchlyrics"
                ],
                "2": [
                    "searchlyrics"
                ]
            }
        },
        "SYNO.AudioStation.MediaServer": {
            "path": "AudioStation/media_server.cgi",
            "minVersion": 1,
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list"
                ]
            }
        },
        "SYNO.AudioStation.Cover": {
            "path": "AudioStation/cover.cgi",
            "minVersion": 1,
            "maxVersion": 3,
            "methods": {
                "1": [
                    "getsongcover",
                    "getfoldercover",
                    "getcover"
                ],
                "2": [
                    "getsongcover",
                    "getfoldercover",
                    "getcover"
                ],
                "3": [
                    "getsongcover",
                    "getfoldercover",
                    "getcover"
                ]
            }
        },
        "SYNO.AudioStation.Download": {
            "path": "AudioStation/download.cgi",
            "minVersion": 1,
            "maxVersion": 1,
            "methods": {
                "1": [
                    "download"
                ]
            }
        },
        "SYNO.AudioStation.Search": {
            "path": "AudioStation/search.cgi",
            "minVersion": 1,
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list"
                ]
            }
        },
        "SYNO.AudioStation.Pin": {
            "lib": "/var/packages/AudioStation/target/webapi5/pin/SYNO.AudioStation.Pin.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "reorder",
                    "unpin",
                    "rename",
                    "pin",
                    "list"
                ]
            },
            "minVersion": 1
        },
        "SYNO.AudioStation.Tag": {
            "lib": "/var/packages/AudioStation/target/webapi5/tag/SYNO.AudioStation.Tag.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "getinfo",
                    "list"
                ]
            },
            "minVersion": 1
        },
        "SYNO.AudioStation.VoiceAssistant.Info": {
            "lib": "/var/packages/AudioStation/target/webapi5/voice_assistant/SYNO.AudioStation.VoiceAssistant.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1
        },
        "SYNO.AudioStation.VoiceAssistant.Stream": {
            "lib": "/var/packages/AudioStation/target/webapi5/voice_assistant/SYNO.AudioStation.VoiceAssistant.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "stream",
                    "transcode"
                ]
            },
            "minVersion": 1
        },
        "SYNO.AudioStation.VoiceAssistant.Browse": {
            "lib": "/var/packages/AudioStation/target/webapi5/voice_assistant/SYNO.AudioStation.VoiceAssistant.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "count_search",
                    "search",
                    "search_playlist",
                    "get_playlist",
                    "get_cover"
                ]
            },
            "minVersion": 1
        },
        "SYNO.AudioStation.VoiceAssistant.Challenge": {
            "lib": "/var/packages/AudioStation/target/webapi5/voice_assistant/SYNO.AudioStation.VoiceAssistant.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1
        },
        "SYNO.AudioStation.Browse.Playlist": {
            "lib": "/var/packages/AudioStation/target/webapi5/browse/SYNO.AudioStation.Browse.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "add_track"
                ]
            },
            "minVersion": 1
        }
    },
    "SYNO.DownloadStation": {
        "SYNO.DownloadStation.BTSearch": {
            "maxVersion": 1,
            "methods": {
                "1": [
                    "start",
                    "list",
                    "getCategory",
                    "clean",
                    "getModule"
                ]
            },
            "minVersion": 1,
            "path": "DownloadStation/btsearch.cgi"
        },
        "SYNO.DownloadStation.Info": {
            "maxVersion": 2,
            "methods": {
                "1": [
                    "getinfo",
                    "getconfig",
                    "setserverconfig"
                ],
                "2": [
                    "getinfo",
                    "getconfig",
                    "setserverconfig"
                ]
            },
            "minVersion": 1,
            "path": "DownloadStation/info.cgi"
        },
        "SYNO.DownloadStation.RSS.Feed": {
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "DownloadStation/RSSfeed.cgi"
        },
        "SYNO.DownloadStation.RSS.Site": {
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "refresh"
                ]
            },
            "minVersion": 1,
            "path": "DownloadStation/RSSsite.cgi"
        },
        "SYNO.DownloadStation.Schedule": {
            "maxVersion": 1,
            "methods": {
                "1": [
                    "getconfig",
                    "setconfig"
                ]
            },
            "minVersion": 1,
            "path": "DownloadStation/schedule.cgi"
        },
        "SYNO.DownloadStation.Statistic": {
            "maxVersion": 1,
            "methods": {
                "1": [
                    "getinfo"
                ]
            },
            "minVersion": 1,
            "path": "DownloadStation/statistic.cgi"
        },
        "SYNO.DownloadStation.Task": {
            "maxVersion": 3,
            "methods": {
                "1": [
                    "list",
                    "getinfo",
                    "create",
                    "delete",
                    "resume",
                    "pause"
                ],
                "2": [
                    "list",
                    "getinfo",
                    "create",
                    "delete",
                    "resume",
                    "pause",
                    "edit"
                ],
                "3": [
                    "list",
                    "getinfo",
                    "create",
                    "delete",
                    "resume",
                    "pause",
                    "edit"
                ]
            },
            "minVersion": 1,
            "path": "DownloadStation/task.cgi"
        },
        "SYNO.DownloadStation.Xunlei.Task": {
            "maxVersion": 2,
            "methods": {
                "2": [
                    "list",
                    "add",
                    "add_by_file",
                    "delete",
                    "pause",
                    "restart",
                    "verify_account",
                    "login",
                    "get_download_default_dest",
                    "download_to_local",
                    "get_task_detail"
                ]
            },
            "minVersion": 2,
            "path": "DownloadStation/xunlei/dl_queue.cgi"
        }
    },
    "SYNO.PhotoStation": {
        "SYNO.PhotoStation.Auth": {
            "path": "auth.php",
            "minVersion": 1,
            "maxVersion": 1,
            "methods": {
                "1": [
                    "login",
                    "photo_login",
                    "logout",
                    "checkauth"
                ]
            }
        },
        "SYNO.PhotoStation.Info": {
            "path": "info.php",
            "minVersion": 1,
            "maxVersion": 2,
            "methods": {
                "2": [
                    "getinfo",
                    "getexternalip"
                ],
                "1": [
                    "getinfo"
                ]
            }
        },
        "SYNO.PhotoStation.Album": {
            "path": "album.php",
            "minVersion": 1,
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "getinfo",
                    "create",
                    "edit",
                    "delete",
                    "arrangeitem",
                    "move",
                    "cleararrangeitem",
                    "cancel"
                ]
            }
        },
        "SYNO.PhotoStation.Permission": {
            "path": "permission.php",
            "minVersion": 1,
            "maxVersion": 1,
            "methods": {
                "1": [
                    "getalbum",
                    "editalbum",
                    "editgroup",
                    "list_public_share",
                    "edit_public_share"
                ]
            }
        },
        "SYNO.PhotoStation.Photo": {
            "path": "photo.php",
            "minVersion": 1,
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "listexif",
                    "listfeatureditem",
                    "listgpsgroup",
                    "listgpsgroupeditem",
                    "getinfo",
                    "getexif",
                    "edit",
                    "delete",
                    "copy",
                    "cancel"
                ]
            }
        },
        "SYNO.PhotoStation.Thumb": {
            "path": "thumb.php",
            "minVersion": 1,
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "get_dsm_thumb"
                ]
            }
        },
        "SYNO.PhotoStation.Cover": {
            "path": "cover.php",
            "minVersion": 1,
            "maxVersion": 2,
            "methods": {
                "1": [
                    "set"
                ],
                "2": [
                    "set",
                    "setsmart"
                ]
            }
        },
        "SYNO.PhotoStation.SmartAlbum": {
            "path": "smart_album.php",
            "minVersion": 1,
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "getinfo",
                    "create",
                    "edit",
                    "delete"
                ]
            }
        },
        "SYNO.PhotoStation.File": {
            "path": "file.php",
            "minVersion": 1,
            "maxVersion": 1,
            "methods": {
                "1": [
                    "uploadphoto",
                    "uploadvideo"
                ]
            }
        },
        "SYNO.PhotoStation.Download": {
            "path": "download.php",
            "minVersion": 1,
            "maxVersion": 1,
            "methods": {
                "1": [
                    "getphoto",
                    "getvideo",
                    "getitem"
                ]
            }
        },
        "SYNO.PhotoStation.Category": {
            "path": "category.php",
            "minVersion": 1,
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "getinfo",
                    "create",
                    "edit",
                    "delete",
                    "arrangecategory",
                    "listitem",
                    "additem",
                    "removeitem",
                    "arrangeitem"
                ]
            }
        },
        "SYNO.PhotoStation.About": {
            "path": "about.php",
            "minVersion": 1,
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set",
                    "set_visibility"
                ]
            }
        },
        "SYNO.PhotoStation.Tag": {
            "path": "tag.php",
            "minVersion": 1,
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "getinfo",
                    "create",
                    "edit",
                    "delete",
                    "searchplace",
                    "delete_unconfirmed_tag"
                ]
            }
        },
        "SYNO.PhotoStation.PhotoTag": {
            "path": "photo_tag.php",
            "minVersion": 1,
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "people_tag",
                    "geo_tag",
                    "desc_tag",
                    "delete",
                    "people_tag_confirm"
                ]
            }
        },
        "SYNO.PhotoStation.Comment": {
            "path": "comment.php",
            "minVersion": 1,
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "create",
                    "delete"
                ]
            }
        },
        "SYNO.PhotoStation.Timeline": {
            "path": "timeline.php",
            "minVersion": 1,
            "maxVersion": 1,
            "methods": {
                "1": [
                    "getindex"
                ]
            }
        },
        "SYNO.PhotoStation.Group": {
            "path": "group.php",
            "minVersion": 1,
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "get",
                    "get_dsm_group",
                    "getmember",
                    "create",
                    "edit",
                    "editmember",
                    "delete"
                ]
            }
        },
        "SYNO.PhotoStation.Rotate": {
            "path": "rotate.php",
            "minVersion": 1,
            "maxVersion": 1,
            "methods": {
                "1": [
                    "set"
                ]
            }
        },
        "SYNO.PhotoStation.SlideshowMusic": {
            "path": "slideshow_music.php",
            "minVersion": 1,
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "get",
                    "add",
                    "edit",
                    "delete"
                ]
            }
        },
        "SYNO.PhotoStation.DsmShare": {
            "path": "dsm_share.php",
            "minVersion": 1,
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "copy",
                    "copymusic"
                ]
            }
        },
        "SYNO.PhotoStation.SharedAlbum": {
            "path": "shared_album.php",
            "minVersion": 1,
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list",
                    "getinfo",
                    "getinfo_public",
                    "create",
                    "edit",
                    "delete",
                    "add_items",
                    "remove_items",
                    "edit_public_share",
                    "get_single_item",
                    "set_single_item"
                ],
                "2": [
                    "list",
                    "getinfo",
                    "getinfo_public",
                    "create",
                    "edit",
                    "delete",
                    "add_items",
                    "remove_items",
                    "edit_public_share",
                    "get_single_item",
                    "set_single_item"
                ]
            }
        },
        "SYNO.PhotoStation.PhotoLog": {
            "path": "log.php",
            "minVersion": 1,
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "clear",
                    "export"
                ]
            }
        },
        "SYNO.PhotoStation.Path": {
            "path": "path.php",
            "minVersion": 1,
            "maxVersion": 1,
            "methods": {
                "1": [
                    "getpath",
                    "checkpath"
                ]
            }
        },
        "SYNO.PhotoStation.Watermark": {
            "path": "watermark.php",
            "minVersion": 1,
            "maxVersion": 1,
            "methods": {
                "1": [
                    "getshare",
                    "listshare",
                    "upload",
                    "copy",
                    "delete",
                    "remove"
                ]
            }
        },
        "SYNO.PhotoStation.Public": {
            "path": "public.php",
            "minVersion": 1,
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list"
                ]
            }
        },
        "SYNO.PhotoStation.Migration": {
            "path": "migration.php",
            "minVersion": 1,
            "maxVersion": 1,
            "methods": {
                "1": [
                    "export_blog"
                ]
            }
        },
        "SYNO.PhotoStation.ACL": {
            "path": "acl.php",
            "minVersion": 1,
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            }
        },
        "SYNO.PhotoStation.AdvancedShare": {
            "path": "advanced_share.php",
            "minVersion": 1,
            "maxVersion": 1,
            "methods": {
                "1": [
                    "getinfo",
                    "add_comment",
                    "list_comment",
                    "set_color_label",
                    "list_area",
                    "add_area",
                    "delete_area",
                    "list_log"
                ]
            }
        },
        "SYNO.PhotoStation.AppPrivilege": {
            "path": "app_privilege.php",
            "minVersion": 1,
            "maxVersion": 1,
            "methods": {
                "1": [
                    "check",
                    "seenmoments"
                ]
            }
        }
    },
    "SYNO.AudioPlayer": {
        "SYNO.AudioPlayer": {
            "lib": "/usr/syno/synoman/webapi/lib/SYNO.AudioPlayer.so",
            "maxVersion": 2,
            "methods": {
                "2": [
                    "list_media_info",
                    "get_media_info",
                    "get_support_info"
                ]
            },
            "minVersion": 2,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.AudioPlayer.Stream": {
            "lib": "/usr/syno/synoman/webapi/lib/SYNO.AudioPlayer.so",
            "maxVersion": 2,
            "methods": {
                "2": [
                    "transcode",
                    "stream"
                ]
            },
            "minVersion": 2,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        }
    },
    "SYNO.Aviary": {
        "SYNO.Aviary": {
            "lib": "lib/SYNO.AviaryEditor.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "avoid_timeout",
                    "save",
                    "save_progress"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        }
    },
    "SYNO.Backup": {
        "SYNO.Backup.App": {
            "lib": "lib/SYNO.Backup.App.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get_icon"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Backup.App.Backup": {
            "lib": "lib/SYNO.Backup.App.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "mysql_check",
                    "surveillance_check"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Backup.App.Restore": {
            "lib": "lib/SYNO.Backup.App.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "mysql_check",
                    "surveillance_check"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Backup.Config.Backup": {
            "lib": "lib/SYNO.Backup.Config.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list",
                    "start",
                    "status",
                    "download"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Backup.Config.Restore": {
            "lib": "lib/SYNO.Backup.Config.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "upload",
                    "list",
                    "delete",
                    "list_conflict",
                    "check",
                    "start",
                    "status"
                ],
                "2": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Backup.Service.NetworkBackup": {
            "lib": "lib/SYNO.Core.FileServ.Rsync.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Backup.Service.TimeBackup": {
            "lib": "lib/SYNO.Core.FileServ.Rsync.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Backup.Storage.AmazonCloudDrive.Container": {
            "lib": "/var/packages/HyperBackup/target/webapi/SYNO.Backup.Storage.AmazonCloudDrive.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list",
                    "create"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Backup.Storage.Azure.Container": {
            "lib": "/var/packages/HyperBackup/target/webapi/SYNO.Backup.Storage.Azure.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list",
                    "create"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Backup.Storage.Dropbox.Container": {
            "lib": "/var/packages/HyperBackup/target/webapi/SYNO.Backup.Storage.Dropbox.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list",
                    "create"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Backup.Storage.GoogleDrive.Container": {
            "lib": "/var/packages/HyperBackup/target/webapi/SYNO.Backup.Storage.GoogleDrive.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list",
                    "create"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Backup.Storage.HiDrive.Container": {
            "lib": "/var/packages/HyperBackup/target/webapi/SYNO.Backup.Storage.HiDrive.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list",
                    "create"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Backup.Storage.OpenStack.Container": {
            "lib": "/var/packages/HyperBackup/target/webapi/SYNO.Backup.Storage.OpenStack.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list",
                    "create"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Backup.Storage.OpenStack.Region": {
            "lib": "/var/packages/HyperBackup/target/webapi/SYNO.Backup.Storage.OpenStack.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Backup.Storage.S3.Bucket": {
            "lib": "/var/packages/HyperBackup/target/webapi/SYNO.Backup.Storage.S3.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list",
                    "create"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Backup.Storage.WebDAV.Container": {
            "lib": "/var/packages/HyperBackup/target/webapi/SYNO.Backup.Storage.WebDAV.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list",
                    "create"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Backup.Storage.hubiC.Container": {
            "lib": "/var/packages/HyperBackup/target/webapi/SYNO.Backup.Storage.hubiC.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list",
                    "create"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Backup.App2.Backup": {
            "lib": "/var/packages/HyperBackup/target/webapi/SYNO.Backup.so",
            "maxVersion": 2,
            "methods": {
                "2": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Backup.App2.Restore": {
            "lib": "/var/packages/HyperBackup/target/webapi/SYNO.Backup.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list_install"
                ],
                "2": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Backup.Log": {
            "lib": "/var/packages/HyperBackup/target/webapi/SYNO.Backup.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list",
                    "export"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Backup.Lunbackup": {
            "lib": "/var/packages/HyperBackup/target/webapi/SYNO.Backup.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "apply_lun",
                    "restore_lun",
                    "enum_lun",
                    "check_dir",
                    "check_lun",
                    "test_connections",
                    "enum_remote_share",
                    "remote_version_check",
                    "enum_local_lun_dir",
                    "enum_net_lun_dir",
                    "enum_local_restore_lun_name",
                    "enum_net_restore_lun_name",
                    "load_lun_bkp_conf",
                    "get_self_host",
                    "is_bkp_set_conflict",
                    "get_local_dest_dir",
                    "enum_local_bkp_dest",
                    "net_bkp_host",
                    "load_default_adv_schedule",
                    "get_remote_dest_dir",
                    "enum_local_share",
                    "enum_volume",
                    "load_schedule",
                    "delete",
                    "bkpnow",
                    "cancel",
                    "restore_cancel",
                    "load_task",
                    "load_restore_progress",
                    "load_dest_status"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Backup.Repository": {
            "lib": "/var/packages/HyperBackup/target/webapi/SYNO.Backup.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list",
                    "delete",
                    "create",
                    "get",
                    "set",
                    "find"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Backup.Repository.Certificate": {
            "lib": "/var/packages/HyperBackup/target/webapi/SYNO.Backup.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "verify"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Backup.Restore": {
            "lib": "/var/packages/HyperBackup/target/webapi/SYNO.Backup.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "cancel",
                    "status"
                ],
                "2": [
                    "restore"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Backup.Server": {
            "lib": "/var/packages/HyperBackup/target/webapi/SYNO.Backup.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Backup.Share.Restore": {
            "lib": "/var/packages/HyperBackup/target/webapi/SYNO.Backup.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Backup.Source.Folder": {
            "lib": "/var/packages/HyperBackup/target/webapi/SYNO.Backup.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Backup.Statistics": {
            "lib": "/var/packages/HyperBackup/target/webapi/SYNO.Backup.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Backup.Storage.Connect.Network": {
            "lib": "/var/packages/HyperBackup/target/webapi/SYNO.Backup.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Backup.Storage.Share.Local": {
            "lib": "/var/packages/HyperBackup/target/webapi/SYNO.Backup.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Backup.Storage.Share.Network": {
            "lib": "/var/packages/HyperBackup/target/webapi/SYNO.Backup.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Backup.Storage.Share.Rsync": {
            "lib": "/var/packages/HyperBackup/target/webapi/SYNO.Backup.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Backup.Target": {
            "lib": "/var/packages/HyperBackup/target/webapi/SYNO.Backup.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "create",
                    "delete",
                    "set",
                    "list",
                    "get_candidate_dir",
                    "get",
                    "password_verify",
                    "private_key_verify",
                    "private_key_download",
                    "private_key_download_by_password",
                    "create_cache",
                    "error_detect",
                    "error_detect_cancel",
                    "status",
                    "damage_report_download"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Backup.Target.Config": {
            "lib": "/var/packages/HyperBackup/target/webapi/SYNO.Backup.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Backup.Task": {
            "lib": "/var/packages/HyperBackup/target/webapi/SYNO.Backup.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list",
                    "delete",
                    "backup",
                    "resume",
                    "cancel",
                    "suspend",
                    "discard",
                    "cancel_and_discard",
                    "create",
                    "relink",
                    "import",
                    "set",
                    "status",
                    "get",
                    "mark"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Backup.Version": {
            "lib": "/var/packages/HyperBackup/target/webapi/SYNO.Backup.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "create",
                    "lock",
                    "delete",
                    "list_folder",
                    "summary",
                    "rotate",
                    "detail"
                ],
                "2": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Backup.Version.History": {
            "lib": "/var/packages/HyperBackup/target/webapi/SYNO.Backup.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        }
    },
    "SYNO.CloudStation": {
        "SYNO.CloudStation.Server": {
            "lib": "/var/packages/CloudStation/target/lib/SYNO.CloudStation.Server.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get_status",
                    "get_directory_service_status",
                    "get_extension",
                    "get_client_link",
                    "check_user",
                    "delete_database",
                    "resume_freeze"
                ]
            },
            "minVersion": 1
        },
        "SYNO.CloudStation.Server.Config": {
            "lib": "/var/packages/CloudStation/target/lib/SYNO.CloudStation.Server.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1
        },
        "SYNO.CloudStation.Server.Connection": {
            "lib": "/var/packages/CloudStation/target/lib/SYNO.CloudStation.Server.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "delete"
                ]
            },
            "minVersion": 1
        },
        "SYNO.CloudStation.Server.DBUsage": {
            "lib": "/var/packages/CloudStation/target/lib/SYNO.CloudStation.Server.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "status",
                    "start",
                    "stop",
                    "get"
                ]
            },
            "minVersion": 1
        },
        "SYNO.CloudStation.Server.Log": {
            "lib": "/var/packages/CloudStation/target/lib/SYNO.CloudStation.Server.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "delete"
                ]
            },
            "minVersion": 1
        },
        "SYNO.CloudStation.Server.Node": {
            "lib": "/var/packages/CloudStation/target/lib/SYNO.CloudStation.Server.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "list_parent",
                    "list_version",
                    "activity"
                ]
            },
            "minVersion": 1
        },
        "SYNO.CloudStation.Server.Node.Delete": {
            "lib": "/var/packages/CloudStation/target/lib/SYNO.CloudStation.Server.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "start",
                    "status"
                ]
            },
            "minVersion": 1
        },
        "SYNO.CloudStation.Server.Node.Download": {
            "lib": "/var/packages/CloudStation/target/lib/SYNO.CloudStation.Server.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "start",
                    "status",
                    "stop",
                    "finish"
                ]
            },
            "minVersion": 1
        },
        "SYNO.CloudStation.Server.Node.Restore": {
            "lib": "/var/packages/CloudStation/target/lib/SYNO.CloudStation.Server.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "start",
                    "status",
                    "finish"
                ]
            },
            "minVersion": 1
        },
        "SYNO.CloudStation.Server.Privilege": {
            "lib": "/var/packages/CloudStation/target/lib/SYNO.CloudStation.Server.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "set",
                    "status"
                ]
            },
            "minVersion": 1
        },
        "SYNO.CloudStation.Server.Profile": {
            "lib": "/var/packages/CloudStation/target/lib/SYNO.CloudStation.Server.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "set",
                    "delete"
                ]
            },
            "minVersion": 1
        },
        "SYNO.CloudStation.Server.Share": {
            "lib": "/var/packages/CloudStation/target/lib/SYNO.CloudStation.Server.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list_active",
                    "list",
                    "set"
                ]
            },
            "minVersion": 1
        }
    },
    "SYNO.CloudSync": {
        "SYNO.CloudSync": {
            "lib": "/var/packages/CloudSync/target/lib/SYNO.CloudSync.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "pause",
                    "resume",
                    "unlink_connection",
                    "unlink_session",
                    "get_property",
                    "get_config",
                    "set_global_config",
                    "set_personal_config",
                    "get_user_info",
                    "get_log",
                    "get_recently_change",
                    "get_oauth_info",
                    "get_connection_setting",
                    "get_session_setting",
                    "get_selective_folder_list",
                    "get_selective_folder_list_wizard",
                    "get_selective_sync_config",
                    "get_default_selective_sync_config",
                    "re_auth",
                    "re_oauth",
                    "test_connection_s3",
                    "test_connection_b2",
                    "test_connection_openstack",
                    "test_connection_webdav",
                    "test_connection_gcs",
                    "test_connection_acs",
                    "test_task_setting",
                    "set_connection_setting",
                    "set_schedule_setting",
                    "set_session_setting",
                    "set_selective_sync_config",
                    "list_conn",
                    "list_sess",
                    "list_s3_bucket",
                    "list_openstack_region",
                    "list_openstack_container",
                    "create_s3_bucket",
                    "list_gcs_bucket",
                    "create_gcs_bucket",
                    "list_b2_bucket",
                    "create_b2_bucket",
                    "list_acs_container",
                    "create_acs_container",
                    "create_openstack_container",
                    "create_link",
                    "create_session",
                    "export_key",
                    "export_key_by_name",
                    "get_conn_auth_info",
                    "get_server_folder_list",
                    "create_server_folder"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        }
    },
    "SYNO.Core": {
        "SYNO.Core.ACL": {
            "lib": "lib/SYNO.Core.ACL.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set",
                    "status",
                    "stop",
                    "list_owners",
                    "inspect",
                    "check_admin",
                    "check_self_denied"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.AppNotify": {
            "lib": "lib/SYNO.Core.AppNotify.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.AppPortal": {
            "lib": "lib/SYNO.Core.AppPortal.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "get",
                    "set",
                    "list"
                ],
                "2": [
                    "get",
                    "set",
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.AppPortal.Config": {
            "lib": "lib/SYNO.Core.AppPortal.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.AppPortal.ReverseProxy": {
            "lib": "lib/SYNO.Core.AppPortal.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "create",
                    "list",
                    "update",
                    "delete"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.AppPriv": {
            "lib": "lib/SYNO.Core.AppPriv.so",
            "maxVersion": 2,
            "methods": {
                "1": [],
                "2": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.AppPriv.App": {
            "lib": "lib/SYNO.Core.AppPriv.so",
            "maxVersion": 3,
            "methods": {
                "1": [],
                "2": [
                    "preview",
                    "allowed",
                    "list"
                ],
                "3": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.AppPriv.Rule": {
            "lib": "lib/SYNO.Core.AppPriv.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set",
                    "delete",
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.BandwidthControl": {
            "lib": "lib/SYNO.Core.BandwidthControl.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list",
                    "get",
                    "set"
                ],
                "2": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.BandwidthControl.Protocol": {
            "lib": "lib/SYNO.Core.BandwidthControl.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.BandwidthControl.Status": {
            "lib": "lib/SYNO.Core.BandwidthControl.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "delete"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.CMS.Cache": {
            "lib": "lib/webapi_cache_client.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "push"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.CMS.Policy": {
            "lib": "lib/webapi_gpo_client.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "fetch"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.CMS.Info": {
            "lib": "lib/SYNO.Core.CMS.Info.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.CMS": {
            "lib": "lib/SYNO.Core.CMS.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "begin_join",
                    "end_join",
                    "disjoin"
                ],
                "2": [
                    "begin_join",
                    "end_join",
                    "disjoin"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.CMS.ServerInfo": {
            "lib": "lib/SYNO.Core.CMS.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "update"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.CMS.Token": {
            "lib": "lib/SYNO.Core.CMS.Token.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "update",
                    "check",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Certificate": {
            "lib": "lib/SYNO.Core.Certificate.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "export",
                    "import"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Certificate.CRT": {
            "lib": "lib/SYNO.Core.Certificate.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "create",
                    "recreate",
                    "set",
                    "delete",
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Certificate.CSR": {
            "lib": "lib/SYNO.Core.Certificate.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "create",
                    "renew",
                    "sign"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Certificate.LetsEncrypt": {
            "lib": "lib/SYNO.Core.Certificate.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "create"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Certificate.LetsEncrypt.Account": {
            "lib": "lib/SYNO.Core.Certificate.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Certificate.Service": {
            "lib": "lib/SYNO.Core.Certificate.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.CurrentConnection": {
            "lib": "lib/libwebapi-CurrentConnection.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "list",
                    "list_by_user",
                    "kick_connection",
                    "disable_user",
                    "download"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.DDNS.ExtIP": {
            "lib": "lib/SYNO.Core.DDNS.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.DDNS.Provider": {
            "lib": "lib/SYNO.Core.DDNS.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "delete",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.DDNS.Record": {
            "lib": "lib/SYNO.Core.DDNS.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "update_ip_address",
                    "create",
                    "delete",
                    "set",
                    "test"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.DDNS.Synology": {
            "lib": "lib/SYNO.Core.DDNS.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "register_hostname",
                    "send_verified_mail",
                    "list_domain",
                    "get_hostname",
                    "get_myds_account"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.DDNS.TWNIC": {
            "lib": "lib/SYNO.Core.DDNS.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "register_hostname"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.DSMNotify": {
            "lib": "/usr/syno/synoman/webapi/lib/SYNO.Core.DSMNotify.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "notify"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.DataCollect": {
            "lib": "lib/libwebapi-DataCollect.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set",
                    "purge_cache"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.DataCollect.Application": {
            "lib": "lib/libwebapi-DataCollect.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "record"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.DataCollect.Period": {
            "lib": "lib/libwebapi-DataCollect.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Desktop.Defs": {
            "lib": "lib/SYNO.Core.Desktop.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "getjs"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Desktop.Initdata": {
            "lib": "lib/SYNO.Core.Desktop.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Desktop.JSUIString": {
            "lib": "lib/SYNO.Core.Desktop.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "getjs"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Desktop.SessionData": {
            "lib": "lib/SYNO.Core.Desktop.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "getjs",
                    "getjs_mobile",
                    "getjs_forgotpass"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Desktop.Timeout": {
            "lib": "lib/SYNO.Core.Desktop.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "check",
                    "get",
                    "reset"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Desktop.UIString": {
            "lib": "lib/SYNO.Core.Desktop.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "getjs"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Directory.Domain": {
            "lib": "lib/SYNO.Core.Directory.Domain.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "set",
                    "set_status",
                    "set_stop",
                    "get",
                    "sync_time",
                    "test_dc",
                    "get_domain_list",
                    "update_start",
                    "update_status",
                    "update_stop",
                    "leave_check",
                    "set_password",
                    "list_candidate_ou",
                    "check_is_rodc"
                ],
                "2": [
                    "set",
                    "get_domain_list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Directory.Domain.ADHealthCheck": {
            "lib": "lib/SYNO.Core.Directory.Domain.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "start",
                    "status",
                    "stop"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Directory.Domain.Conf": {
            "lib": "lib/SYNO.Core.Directory.Domain.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "set",
                    "get"
                ],
                "2": [
                    "set",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Directory.Domain.Schedule": {
            "lib": "lib/SYNO.Core.Directory.Domain.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "set",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Directory.LDAP": {
            "lib": "lib/SYNO.Core.Directory.LDAP.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set",
                    "refresh",
                    "password",
                    "unbind_check"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Directory.LDAP.BaseDN": {
            "lib": "lib/SYNO.Core.Directory.LDAP.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Directory.LDAP.Login.Notify": {
            "lib": "lib/SYNO.Core.Directory.LDAP.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "check"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Directory.LDAP.Profile": {
            "lib": "lib/SYNO.Core.Directory.LDAP.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Directory.SSO": {
            "lib": "lib/SYNO.Core.Directory.SSO.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set",
                    "register"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Directory.SSO.utils": {
            "lib": "lib/SYNO.Core.Directory.SSO.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "exchange"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.EventScheduler": {
            "lib": "lib/SYNO.Core.EventScheduler.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "list_relate",
                    "set_enable",
                    "delete",
                    "run",
                    "get",
                    "set",
                    "create",
                    "result_list",
                    "result_get_file",
                    "config_set",
                    "config_get",
                    "event_list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.ExternalDevice.Bluetooth": {
            "lib": "lib/libwebapi-Bluetooth.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list",
                    "get",
                    "set_discovery"
                ],
                "2": [
                    "list",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.ExternalDevice.Bluetooth.Device": {
            "lib": "lib/libwebapi-Bluetooth.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "create",
                    "delete"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.ExternalDevice.Bluetooth.Settings": {
            "lib": "lib/libwebapi-Bluetooth.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.ExternalDevice.DefaultPermission": {
            "lib": "lib/SYNO.Core.ExternalDevice.DefaultPermission.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.ExternalDevice.Printer": {
            "lib": "lib/SYNO.Core.ExternalDevice.Printer.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "print_test",
                    "clean"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.ExternalDevice.Printer.BonjourSharing": {
            "lib": "lib/SYNO.Core.ExternalDevice.Printer.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.ExternalDevice.Printer.Driver": {
            "lib": "lib/SYNO.Core.ExternalDevice.Printer.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.ExternalDevice.Printer.Network": {
            "lib": "lib/SYNO.Core.ExternalDevice.Printer.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "eject",
                    "get",
                    "set",
                    "create"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.ExternalDevice.Printer.Network.Host": {
            "lib": "lib/SYNO.Core.ExternalDevice.Printer.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.ExternalDevice.Printer.OAuth": {
            "lib": "lib/SYNO.Core.ExternalDevice.Printer.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set",
                    "revoke"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.ExternalDevice.Printer.USB": {
            "lib": "lib/SYNO.Core.ExternalDevice.Printer.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "eject",
                    "get",
                    "set",
                    "release_mfp"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.ExternalDevice.Storage.EUnit": {
            "lib": "lib/SYNO.Core.ExternalDevice.Storage.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.ExternalDevice.Storage.Setting": {
            "lib": "lib/SYNO.Core.ExternalDevice.Storage.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.ExternalDevice.Storage.USB": {
            "lib": "lib/SYNO.Core.ExternalDevice.Storage.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "format",
                    "eject"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.ExternalDevice.Storage.eSATA": {
            "lib": "lib/SYNO.Core.ExternalDevice.Storage.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "format",
                    "eject"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.ExternalDevice.UPS": {
            "lib": "lib/libwebapiups.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.EzInternet": {
            "lib": "lib/SYNO.Core.EzInternet.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "set",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.File": {
            "lib": "lib/webapi_file.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "save",
                    "load",
                    "list",
                    "create"
                ],
                "2": [
                    "save",
                    "load",
                    "list",
                    "create"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.File.Thumbnail": {
            "lib": "lib/webapi_file.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.FileServ.AFP": {
            "lib": "lib/SYNO.Core.FileServ.AFP.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "set",
                    "get"
                ],
                "2": [
                    "set",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.FileServ.FTP": {
            "lib": "lib/SYNO.Core.FileServ.FTP.so",
            "maxVersion": 3,
            "methods": {
                "1": [
                    "set",
                    "get"
                ],
                "2": [
                    "set",
                    "get"
                ],
                "3": [
                    "set",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.FileServ.FTP.ChrootUser": {
            "lib": "lib/SYNO.Core.FileServ.FTP.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list",
                    "delete",
                    "add"
                ],
                "2": [
                    "load",
                    "save"
                ]
            },
            "minVersion": 2,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.FileServ.FTP.SFTP": {
            "lib": "lib/SYNO.Core.FileServ.FTP.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "set",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.FileServ.FTP.Security": {
            "lib": "lib/SYNO.Core.FileServ.FTP.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "set",
                    "get",
                    "list_ftp_share"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.FileServ.NFS": {
            "lib": "lib/SYNO.Core.FileServ.NFS.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "set",
                    "get"
                ],
                "2": [
                    "set",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.FileServ.NFS.AdvancedSetting": {
            "lib": "lib/SYNO.Core.FileServ.NFS.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "set",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.FileServ.NFS.IDMap": {
            "lib": "lib/SYNO.Core.FileServ.NFS.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "create",
                    "set",
                    "delete"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.FileServ.NFS.Kerberos": {
            "lib": "lib/SYNO.Core.FileServ.NFS.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "upload_key",
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.FileServ.NFS.SharePrivilege": {
            "lib": "lib/SYNO.Core.FileServ.NFS.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "load",
                    "save"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.FileServ.ReflinkCopy": {
            "lib": "lib/SYNO.Core.FileServ.ReflinkCopy.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "set",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.FileServ.Rsync.Account": {
            "lib": "lib/SYNO.Core.FileServ.Rsync.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "create",
                    "delete",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.FileServ.SMB": {
            "lib": "lib/SYNO.Core.FileServ.SMB.so",
            "maxVersion": 3,
            "methods": {
                "1": [
                    "set",
                    "get",
                    "clean_cache"
                ],
                "2": [
                    "set",
                    "get",
                    "clean_cache"
                ],
                "3": [
                    "set",
                    "get",
                    "clean_cache"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.FileServ.ServiceDiscovery": {
            "lib": "lib/SYNO.Core.FileServ.ServiceDiscovery.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "set",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Findhost": {
            "lib": "lib/SYNO.Core.Findhost.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Group": {
            "lib": "lib/SYNO.Core.Group.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "get",
                    "set",
                    "delete",
                    "create",
                    "admin_check"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Group.Member": {
            "lib": "lib/SYNO.Core.Group.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "add",
                    "remove",
                    "admin_check"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Group.ValidLocalAdmin": {
            "lib": "lib/SYNO.Core.Group.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.GroupSettings": {
            "lib": "lib/SYNO.Core.UserSettings.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "apply"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Hardware.BeepControl": {
            "lib": "lib/libHardware.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set",
                    "stop_beep"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Hardware.DCOutput": {
            "lib": "lib/libHardware.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Hardware.DCOutput.Task": {
            "lib": "lib/libHardware.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "load",
                    "update",
                    "delete"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Hardware.FanSpeed": {
            "lib": "lib/libHardware.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Hardware.Hibernation": {
            "lib": "lib/libHardware.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Hardware.LCM": {
            "lib": "lib/libHardware.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Hardware.Led.Brightness": {
            "lib": "lib/libHardware.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set",
                    "update",
                    "set_current_brightness",
                    "get_static_data"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Hardware.MemoryLayout": {
            "lib": "lib/libHardware.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Hardware.NeedReboot": {
            "lib": "lib/libHardware.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Hardware.PowerRecovery": {
            "lib": "lib/libHardware.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Hardware.PowerSchedule": {
            "lib": "lib/libHardware.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "load",
                    "save"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Hardware.VideoTranscoding": {
            "lib": "lib/libHardware.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Hardware.ZRAM": {
            "lib": "lib/libHardware.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Help": {
            "lib": "lib/SYNO.Core.Help.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get_tree",
                    "get_search_result",
                    "get_tutorial_tree"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.ISCSI.LUN": {
            "lib": "lib/libwebapi-iSCSI.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "create",
                    "delete",
                    "list",
                    "get",
                    "set",
                    "clone",
                    "map_target",
                    "unmap_target",
                    "load_lun",
                    "unload_lun",
                    "take_snapshot",
                    "stop_snapshot",
                    "delete_snapshot",
                    "list_snapshot",
                    "get_snapshot",
                    "set_snapshot",
                    "restore_snapshot",
                    "clone_snapshot",
                    "lock_snapshot",
                    "unlock_snapshot",
                    "export",
                    "import",
                    "export_cancel",
                    "import_cancel",
                    "load_snapshot",
                    "unload_snapshot",
                    "map_vhost",
                    "unmap_vhost",
                    "loop_mount",
                    "loop_unmount",
                    "retry_stop",
                    "set_whitelist"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.ISCSI.Lunbkp": {
            "lib": "lib/libwebapi-iSCSI.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "backuplun_move",
                    "target_connect",
                    "target_disconnect",
                    "lunbackup_start",
                    "lunbackup_stop",
                    "lunrestore_start",
                    "lunrestore_stop",
                    "lunbkp_progress_get",
                    "lunbkp_bitmap_reset",
                    "lunbkp_size_get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.ISCSI.Node": {
            "lib": "lib/libwebapi-iSCSI.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "create",
                    "delete",
                    "list",
                    "get",
                    "set",
                    "add_node",
                    "delete_node",
                    "create_session",
                    "delete_session",
                    "subvol_convert"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.ISCSI.Replication": {
            "lib": "lib/libwebapi-iSCSI.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "create",
                    "delete",
                    "list",
                    "get",
                    "set",
                    "send_snapshot",
                    "stop_sending",
                    "promote",
                    "demote",
                    "compute_unsync_size",
                    "get_unsync_size",
                    "check_node",
                    "create_task",
                    "delete_task",
                    "get_base_version"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.ISCSI.Target": {
            "lib": "lib/libwebapi-iSCSI.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "create",
                    "delete",
                    "list",
                    "get",
                    "set",
                    "enable",
                    "disable",
                    "map_lun",
                    "unmap_lun",
                    "acl_masks_set",
                    "acl_masks_add",
                    "acl_masks_remove",
                    "network_portals_add",
                    "network_portals_remove"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.ISCSI.VLUN": {
            "lib": "lib/libwebapi-iSCSI.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "create",
                    "delete",
                    "list",
                    "get",
                    "set",
                    "bind"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.MediaIndexing": {
            "lib": "lib/mediaindexing.so",
            "maxVersion": 1,
            "methods": {
                "1": {
                    "0": "status",
                    "1": "get",
                    "2": "set",
                    "7": "reindex"
                }
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.MediaIndexing.IndexFolder": {
            "lib": "lib/mediaindexing-indexfolder.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.MediaIndexing.MediaConverter": {
            "lib": "lib/mediaindexing-mediaconverter.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "status",
                    "pause",
                    "resume"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.MediaIndexing.MobileEnabled": {
            "lib": "lib/mediaindexing.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.MediaIndexing.ThumbnailQuality": {
            "lib": "lib/mediaindexing.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.MyDSCenter": {
            "lib": "lib/mydscenter.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "register"
                ],
                "2": [
                    "login",
                    "login_by_key",
                    "logout",
                    "register",
                    "query",
                    "get_iframe_info",
                    "handle_apikey_error",
                    "oauth_login"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.MyDSCenter.Account": {
            "lib": "lib/mydscenter.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.MyDSCenter.Purchase": {
            "lib": "lib/mydscenter.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Network.TrafficControl.RouterRules": {
            "lib": "lib/SYNO.Core.Network.TrafficControl.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "load",
                    "save"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Network.TrafficControl.Rules": {
            "lib": "lib/SYNO.Core.Network.TrafficControl.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "load",
                    "save"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Network": {
            "lib": "lib/libwebapi-Network.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set",
                    "test_internet"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Network.Authentication": {
            "lib": "lib/libwebapi-Authentication.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set",
                    "test"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Network.Authentication.Cert": {
            "lib": "lib/libwebapi-Authentication.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "upload",
                    "delete"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Network.Bond": {
            "lib": "lib/libwebapi-Bond.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set",
                    "list",
                    "create",
                    "delete",
                    "set_mode",
                    "create_check",
                    "delete_check"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Network.Bridge": {
            "lib": "lib/libwebapi-Bridge.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Network.DHCPServer": {
            "lib": "lib/libwebapi-DHCPServer.so",
            "maxVersion": 3,
            "methods": {
                "1": [
                    "get",
                    "set"
                ],
                "2": [
                    "get",
                    "set"
                ],
                "3": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Network.DHCPServer.ClientList": {
            "lib": "lib/libwebapi-DHCPServer.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list"
                ],
                "2": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Network.DHCPServer.PXE": {
            "lib": "lib/libwebapi-DHCPServer.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "get",
                    "set",
                    "list"
                ],
                "2": [
                    "get",
                    "set",
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Network.DHCPServer.Reservation": {
            "lib": "lib/libwebapi-DHCPServer.so",
            "maxVersion": 3,
            "methods": {
                "1": [
                    "get",
                    "set"
                ],
                "2": [
                    "get",
                    "set"
                ],
                "3": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Network.DHCPServer.Vendor": {
            "lib": "lib/libwebapi-DHCPServer.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Network.DHCPServer.WPAD": {
            "lib": "lib/libwebapi-DHCPServer.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Network.Ethernet": {
            "lib": "lib/libwebapi-Ethernet.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "list",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Network.IPv6": {
            "lib": "lib/libwebapi-ipv6.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Network.IPv6.Router": {
            "lib": "lib/libwebapi-IPv6Router.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Network.IPv6.Router.Prefix": {
            "lib": "lib/libwebapi-IPv6Router.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "add",
                    "remove",
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Network.IPv6Tunnel": {
            "lib": "lib/libwebapi-IPv6Tunnel.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Network.Interface": {
            "lib": "lib/libwebapi-Network-Interface.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Network.LocalBridge": {
            "lib": "lib/libwebapi-LocalBridge.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Network.MACClone": {
            "lib": "lib/libwebapi-MacClone.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set",
                    "getRemoteMACAddress"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Network.OVS": {
            "lib": "lib/libwebapi-OVS.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "set",
                    "get",
                    "check"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Network.PPPoE": {
            "lib": "lib/libwebapi-PPPoE.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set",
                    "list",
                    "connect",
                    "disconnect"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Network.PPPoE.Relay": {
            "lib": "lib/libwebapi-PPPoE.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Network.Proxy": {
            "lib": "lib/libwebapi-Proxy.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Network.Router.ConnectionList": {
            "lib": "lib/libwebapi-Router.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set",
                    "delete",
                    "getcount"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Network.Router.CountryCode": {
            "lib": "lib/libwebapi-Router.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set",
                    "get_tip",
                    "set_tip",
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Network.Router.DMZ": {
            "lib": "lib/libwebapi-Router.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Network.Router.Gateway.List": {
            "lib": "lib/libwebapi-Router.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Network.Router.LocalLan": {
            "lib": "lib/libwebapi-Router.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Network.Router.MacFilter": {
            "lib": "lib/libwebapi-Router.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Network.Router.ParentalControl": {
            "lib": "lib/libwebapi-Router.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Network.Router.PkgList": {
            "lib": "lib/libwebapi-Router.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Network.Router.PortForward": {
            "lib": "lib/libwebapi-Router.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Network.Router.Static.Route": {
            "lib": "lib/libwebapi-Router.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set",
                    "test",
                    "tablesget"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Network.Router.Topology": {
            "lib": "lib/libwebapi-Router.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "get",
                    "set"
                ],
                "2": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Network.UPnPServer": {
            "lib": "lib/libwebapi-UPnPServer.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Network.USBModem": {
            "lib": "lib/libwebapi-USBModem.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list",
                    "get",
                    "getapn",
                    "set",
                    "unlocksim",
                    "modifypin",
                    "unlockpuk",
                    "connect",
                    "disconnect"
                ],
                "2": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Network.VPN": {
            "lib": "lib/libwebapi-VPNClient.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "check",
                    "connect",
                    "disconnect"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Network.VPN.L2TP": {
            "lib": "lib/libwebapi-VPNClient.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "create",
                    "set",
                    "delete",
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Network.VPN.OpenVPN": {
            "lib": "lib/libwebapi-VPNClient.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "create",
                    "set",
                    "delete",
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Network.VPN.OpenVPN.CA": {
            "lib": "lib/libwebapi-VPNClient.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "upload"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Network.VPN.OpenVPNWithConf": {
            "lib": "lib/libwebapi-VPNClient.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "create",
                    "set",
                    "delete",
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Network.VPN.OpenVPNWithConf.Certs": {
            "lib": "lib/libwebapi-VPNClient.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "upload"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Network.VPN.PPTP": {
            "lib": "lib/libwebapi-VPNClient.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "create",
                    "set",
                    "delete",
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Network.WOL": {
            "lib": "lib/libwebapi-WOL.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "wake"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Network.Wifi.Client": {
            "lib": "lib/libwebapi-Wifi.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "get",
                    "set",
                    "connect",
                    "disconnect",
                    "scan",
                    "create_adhoc"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Network.Wifi.Hotspot": {
            "lib": "lib/libwebapi-Wifi.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Network.Wifi.WPS": {
            "lib": "lib/libwebapi-Wifi.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "start_pbc",
                    "start_pin"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.NormalUser": {
            "lib": "lib/SYNO.Core.User.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.NormalUser.LoginNotify": {
            "lib": "lib/SYNO.Core.User.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "check"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Notification.Advance.CustomizedData": {
            "lib": "lib/libNotification.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set",
                    "reset"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Notification.Advance.FilterSettings": {
            "lib": "lib/libNotification.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set",
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Notification.Advance.Variables": {
            "lib": "lib/libNotification.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Notification.Advance.WarningPercentage": {
            "lib": "lib/libNotification.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Notification.CMS": {
            "lib": "lib/libNotification.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "send_test"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Notification.CMS.Conf": {
            "lib": "lib/libNotification.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Notification.Mail": {
            "lib": "lib/SYNO.Core.Notification.Mail.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "send_test"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Notification.Mail.Auth": {
            "lib": "lib/SYNO.Core.Notification.Mail.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Notification.Mail.Conf": {
            "lib": "lib/SYNO.Core.Notification.Mail.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Notification.Push": {
            "lib": "lib/libNotification.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "send_test"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Notification.Push.AuthToken": {
            "lib": "lib/libNotification.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Notification.Push.Conf": {
            "lib": "lib/libNotification.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set",
                    "status"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Notification.Push.Mail": {
            "lib": "lib/libNotification.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set",
                    "status",
                    "send_verify",
                    "send_test"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Notification.Push.Mobile": {
            "lib": "lib/libNotification.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "unpair"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Notification.SMS": {
            "lib": "lib/SYNO.Core.Notification.SMS.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "send_test"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Notification.SMS.Conf": {
            "lib": "lib/SYNO.Core.Notification.SMS.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Notification.SMS.Provider": {
            "lib": "lib/SYNO.Core.Notification.SMS.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "get",
                    "set",
                    "create",
                    "delete"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.OAuth.Scope": {
            "lib": "lib/webapi_entry_oauth.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "delete",
                    "set",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.OAuth.Server": {
            "lib": "lib/webapi_entry_oauth.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "delete",
                    "set",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.OTP": {
            "lib": "lib/SYNO.Core.User.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "get",
                    "reset"
                ],
                "2": [
                    "get",
                    "reset",
                    "get_one",
                    "save_mail",
                    "get_qrcode",
                    "edit_secret_key",
                    "auth_tmp_code"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.OTP.Admin": {
            "lib": "lib/SYNO.Core.User.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "reset",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.OTP.EnforcePolicy": {
            "lib": "lib/SYNO.Core.User.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.OTP.Mail": {
            "lib": "lib/SYNO.Core.User.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "send"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Package": {
            "lib": "lib/SYNO.Core.Package.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "get",
                    "feasibility_check",
                    "get_tos"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Package.Control": {
            "lib": "lib/SYNO.Core.Package.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "start",
                    "stop"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Package.FakeIFrame": {
            "lib": "lib/SYNO.Core.Package.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Package.Feed": {
            "lib": "lib/SYNO.Core.Package.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "set",
                    "add",
                    "delete"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Package.Feed.Keyring": {
            "lib": "lib/SYNO.Core.Package.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "add",
                    "list",
                    "delete"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Package.Info": {
            "lib": "lib/SYNO.Core.Package.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Package.Installation": {
            "lib": "lib/SYNO.Core.Package.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "status",
                    "cancel",
                    "check",
                    "upload",
                    "install",
                    "clean",
                    "delete",
                    "get_queue"
                ],
                "2": [
                    "check"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Package.Installation.Download": {
            "lib": "lib/SYNO.Core.Package.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "check"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Package.Log": {
            "lib": "lib/SYNO.Core.Package.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Package.MyDS": {
            "lib": "lib/SYNO.Core.Package.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Package.MyDS.Purchase": {
            "lib": "lib/SYNO.Core.Package.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "save"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Package.Screenshot": {
            "lib": "lib/SYNO.Core.Package.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Package.Screenshot.Server": {
            "lib": "lib/SYNO.Core.Package.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Package.Server": {
            "lib": "lib/SYNO.Core.Package.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "check"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Package.Setting": {
            "lib": "lib/SYNO.Core.Package.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Package.Setting.Update": {
            "lib": "lib/SYNO.Core.Package.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "add",
                    "delete"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Package.Setting.Volume": {
            "lib": "lib/SYNO.Core.Package.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "set",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Package.Thumb": {
            "lib": "lib/SYNO.Core.Package.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Package.Thumb.Server": {
            "lib": "lib/SYNO.Core.Package.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Package.Uninstallation": {
            "lib": "lib/SYNO.Core.Package.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "uninstall"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.PersonalNotification.Device": {
            "lib": "lib/SYNO.Core.PersonalNotification.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "unpair",
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.PersonalNotification.Event": {
            "lib": "lib/SYNO.Core.PersonalNotification.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "fire"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.PersonalNotification.Filter": {
            "lib": "lib/SYNO.Core.PersonalNotification.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "set",
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.PersonalNotification.Settings": {
            "lib": "lib/SYNO.Core.PersonalNotification.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "set",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.PersonalNotification.android": {
            "lib": "lib/SYNO.Core.PersonalNotification.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "pull",
                    "update",
                    "stat",
                    "pair",
                    "unpair"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.PersonalNotification.iOS": {
            "lib": "lib/SYNO.Core.PersonalNotification.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "pull",
                    "unpair",
                    "update",
                    "stat",
                    "pair"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.PersonalNotification.windows": {
            "lib": "lib/SYNO.Core.PersonalNotification.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "pull",
                    "stat",
                    "update",
                    "unpair",
                    "pair"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.PersonalSettings": {
            "lib": "/usr/syno/synoman/webapi/lib/SYNO.Core.PersonalSettings.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "wallpaper",
                    "photo",
                    "quota"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.PhotoViewer": {
            "lib": "/usr/syno/synoman/webapi/lib/SYNO.Core.PhotoViewer.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "info"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Polling.Data": {
            "lib": "/usr/syno/synoman/webman/modules/PollingTask/webapi/SYNO.Core.Polling.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "set",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.PortForwarding": {
            "lib": "lib/SYNO.Core.PortForwarding.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "detect_pre_check",
                    "detect",
                    "detect_status",
                    "get_current_process"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.PortForwarding.Compatibility": {
            "lib": "lib/SYNO.Core.PortForwarding.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "test",
                    "test_status",
                    "stop",
                    "upload"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.PortForwarding.RouterConf": {
            "lib": "lib/SYNO.Core.PortForwarding.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "set",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.PortForwarding.RouterInfo": {
            "lib": "lib/SYNO.Core.PortForwarding.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.PortForwarding.RouterList": {
            "lib": "lib/SYNO.Core.PortForwarding.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "list",
                    "update"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.PortForwarding.Rules": {
            "lib": "lib/SYNO.Core.PortForwarding.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "save",
                    "save_status",
                    "load",
                    "test",
                    "test_status"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.PortForwarding.Rules.Serv": {
            "lib": "lib/SYNO.Core.PortForwarding.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "check",
                    "test",
                    "test_status"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.PortForwarding.UserDataCollector": {
            "lib": "lib/SYNO.Core.PortForwarding.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "count"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.QuickConnect": {
            "lib": "lib/SYNO.Core.QuickConnect.so",
            "maxVersion": 3,
            "methods": {
                "1": [
                    "status",
                    "get",
                    "set",
                    "set_server_alias"
                ],
                "2": [
                    "get",
                    "set",
                    "set_server_alias"
                ],
                "3": [
                    "get_misc_config",
                    "set_misc_config"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.QuickConnect.Permission": {
            "lib": "lib/SYNO.Core.QuickConnect.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.QuickConnect.Upnp": {
            "lib": "lib/SYNO.Core.QuickConnect.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.QuickStart.Info": {
            "lib": "lib/SYNO.Core.QuickStart.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "load_ds_info",
                    "check_permission",
                    "hide_welcome"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.QuickStart.Install": {
            "lib": "lib/SYNO.Core.QuickStart.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "install_pkgs",
                    "install_sur",
                    "check_progress",
                    "notify_sur_failed"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Quota": {
            "lib": "lib/SYNO.Core.Quota.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set",
                    "inspect"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.RecycleBin": {
            "lib": "lib/SYNO.Core.RecycleBin.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "start",
                    "stop",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.RecycleBin.User": {
            "lib": "lib/SYNO.Core.RecycleBin.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "start",
                    "stop",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Region.Language": {
            "lib": "lib/SYNO.Core.Region.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Region.NTP": {
            "lib": "lib/SYNO.Core.Region.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set",
                    "sync",
                    "listzone",
                    "setzone"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Region.NTP.Server": {
            "lib": "lib/SYNO.Core.Region.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Report": {
            "lib": "/var/packages/StorageAnalyzer/target/webapi/SYNO.Core.Report.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "get",
                    "set",
                    "create",
                    "delete",
                    "export"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Report.Analyzer": {
            "lib": "/var/packages/StorageAnalyzer/target/webapi/SYNO.Core.Report.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "getdata",
                    "confirmduplicate"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Report.Analyzer.File": {
            "lib": "/var/packages/StorageAnalyzer/target/webapi/SYNO.Core.Report.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "duplicate",
                    "status"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Report.Analyzer.Share": {
            "lib": "/var/packages/StorageAnalyzer/target/webapi/SYNO.Core.Report.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "usage",
                    "user_quota",
                    "file_type"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Report.Config": {
            "lib": "/var/packages/StorageAnalyzer/target/webapi/SYNO.Core.Report.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Report.History": {
            "lib": "/var/packages/StorageAnalyzer/target/webapi/SYNO.Core.Report.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "get"
                ],
                "2": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Report.Redirect": {
            "lib": "/var/packages/StorageAnalyzer/target/webapi/SYNO.Core.Report.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "open_report"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Report.Util": {
            "lib": "/var/packages/StorageAnalyzer/target/webapi/SYNO.Core.Report.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "delete_file",
                    "list_share"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.SNMP": {
            "lib": "lib/SYNO.Core.SNMP.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "set",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Security.AutoBlock": {
            "lib": "lib/SYNO.Core.Security.AutoBlock.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Security.AutoBlock.Rules": {
            "lib": "lib/SYNO.Core.Security.AutoBlock.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "list",
                    "delete",
                    "create",
                    "upload",
                    "download"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Security.DoS": {
            "lib": "lib/SYNO.Core.Security.DoS.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Security.Firewall": {
            "lib": "lib/SYNO.Core.Security.Firewall.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "set",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Security.Firewall.Adapter": {
            "lib": "lib/SYNO.Core.Security.Firewall.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "set",
                    "get",
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Security.Firewall.Conf": {
            "lib": "lib/SYNO.Core.Security.Firewall.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Security.Firewall.Geoip": {
            "lib": "lib/SYNO.Core.Security.Firewall.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Security.Firewall.Profile": {
            "lib": "lib/SYNO.Core.Security.Firewall.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "set",
                    "get",
                    "list",
                    "rename",
                    "create",
                    "clone",
                    "delete"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Security.Firewall.Profile.Apply": {
            "lib": "lib/SYNO.Core.Security.Firewall.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "start",
                    "status",
                    "stop"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Security.Firewall.Rules": {
            "lib": "lib/SYNO.Core.Security.Firewall.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "load",
                    "save_start",
                    "save_status",
                    "save_stop"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Security.Firewall.Rules.Serv": {
            "lib": "lib/SYNO.Core.Security.Firewall.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "policy_check",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Security.VPNPassthrough": {
            "lib": "lib/SYNO.Core.Security.VPNPassthrough.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Security.VPNPassthrough.Status": {
            "lib": "lib/SYNO.Core.Security.VPNPassthrough.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Security.DSM": {
            "lib": "lib/SYNO.Core.Security.DSM.so",
            "maxVersion": 4,
            "methods": {
                "1": [
                    "get",
                    "set"
                ],
                "2": [
                    "get",
                    "set"
                ],
                "3": [
                    "get",
                    "set"
                ],
                "4": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Security.DSM.Embed": {
            "lib": "lib/SYNO.Core.Security.DSM.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.SecurityScan.Conf": {
            "lib": "lib/SYNO.Core.SecurityScan.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "set",
                    "get",
                    "time_get",
                    "first_get",
                    "group_enum",
                    "group_set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.SecurityScan.Operation": {
            "lib": "lib/SYNO.Core.SecurityScan.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "start",
                    "stop",
                    "fixme",
                    "update"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.SecurityScan.Status": {
            "lib": "lib/SYNO.Core.SecurityScan.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "system_get",
                    "rule_get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Service": {
            "lib": "lib/SYNO.Core.Service.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "control"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Service.Conf": {
            "lib": "lib/SYNO.Core.Service.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Service.PortInfo": {
            "lib": "lib/SYNO.Core.Service.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "load"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Share": {
            "lib": "lib/SYNO.Core.Share.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "create",
                    "set",
                    "move_status",
                    "stop_move",
                    "list",
                    "get",
                    "delete",
                    "validate_delete",
                    "validate_set",
                    "restore",
                    "clone"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Share.Crypto": {
            "lib": "lib/SYNO.Core.Share.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "decrypt",
                    "encrypt",
                    "validate_encrypt"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Share.Crypto.Key": {
            "lib": "lib/SYNO.Core.Share.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "export",
                    "verify"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Share.CryptoFile": {
            "lib": "lib/SYNO.Core.Share.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "decrypt"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Share.KeyManager.AutoKey": {
            "lib": "lib/SYNO.Core.Share.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "migrate"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Share.KeyManager.Key": {
            "lib": "lib/SYNO.Core.Share.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "add",
                    "add_by_file",
                    "set",
                    "delete",
                    "mount",
                    "export"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Share.KeyManager.MachineKey": {
            "lib": "lib/SYNO.Core.Share.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Share.KeyManager.Store": {
            "lib": "lib/SYNO.Core.Share.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "explore",
                    "init",
                    "verify",
                    "change_passphrase",
                    "get",
                    "set",
                    "clone"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Share.Migration": {
            "lib": "lib/SYNO.Core.Share.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "check",
                    "start",
                    "status",
                    "stop"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Share.Migration.Task": {
            "lib": "lib/SYNO.Core.Share.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Share.Permission": {
            "lib": "lib/SYNO.Core.Share.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "list_by_user",
                    "list_by_group",
                    "set",
                    "set_by_user_group"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Share.Snapshot": {
            "lib": "lib/SYNO.Core.Share.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "set_share_conf",
                    "get_share_conf",
                    "check_shareconf",
                    "set_schedule",
                    "get_schedule",
                    "create",
                    "list",
                    "delete",
                    "set"
                ],
                "2": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Sharing": {
            "lib": "/usr/syno/synoman/webapi/lib/SYNO.Core.Sharing.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "trigger_gc",
                    "list",
                    "delete",
                    "set",
                    "get",
                    "logout"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Sharing.Initdata": {
            "lib": "/usr/syno/synoman/webapi/lib/SYNO.Core.Sharing.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Sharing.Login": {
            "lib": "/usr/syno/synoman/webapi/lib/SYNO.Core.Sharing.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "login"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Sharing.Session": {
            "lib": "/usr/syno/synoman/webapi/lib/SYNO.Core.Sharing.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.SmartBlock": {
            "lib": "lib/SYNO.Core.SmartBlock.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.SmartBlock.Device": {
            "lib": "lib/SYNO.Core.SmartBlock.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set",
                    "forget"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.SmartBlock.Trusted": {
            "lib": "lib/SYNO.Core.SmartBlock.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "pardon"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.SmartBlock.Untrusted": {
            "lib": "lib/SYNO.Core.SmartBlock.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "pardon"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.SmartBlock.User": {
            "lib": "lib/SYNO.Core.SmartBlock.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "enabled",
                    "list",
                    "trust",
                    "distrust",
                    "locked",
                    "pardon"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Storage.Disk": {
            "lib": "lib/libStorage.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "get_smart_info",
                    "do_smart_test",
                    "get_smart_test_log",
                    "do_performance_test",
                    "stop_performance_test",
                    "get_performance_test_status",
                    "get_performance_test_log",
                    "get_performance_test_info",
                    "do_adv_test",
                    "get_adv_test_log",
                    "export_test_log",
                    "get_synoblock",
                    "get_disk_log",
                    "export_disk_log"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Storage.Pool": {
            "lib": "lib/libStorage.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "create",
                    "delete",
                    "expand_by_add_disk",
                    "get_progress"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Storage.Volume": {
            "lib": "lib/libStorage.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "get",
                    "create",
                    "create_on_pool",
                    "expand_pool_child",
                    "get_progress",
                    "conf_set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Storage.iSCSILUN": {
            "lib": "lib/libStorage.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "create",
                    "remove",
                    "create_block_lun",
                    "create_block_lun_on_pool",
                    "repair",
                    "update",
                    "snapshot",
                    "clone",
                    "load_snapshot",
                    "load_sched_snapshot",
                    "set_sched_snapshot",
                    "load_lunbackup_tasks",
                    "expand_unallocated",
                    "migrate",
                    "data_scrubbing",
                    "expand_by_add_disk",
                    "deploy_unused",
                    "cancel_data_scrubbing",
                    "estimate_size",
                    "cancel_iscsilun_create"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Storage.iSCSITargets": {
            "lib": "lib/libStorage.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "disable",
                    "enable",
                    "create",
                    "remove",
                    "update"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Storage.iSCSIUtils": {
            "lib": "lib/libStorage.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "load_plugin",
                    "update_isns"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.SupportForm.Form": {
            "lib": "lib/libwebapi-SupportForm.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "upload"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.SupportForm.Log": {
            "lib": "lib/libwebapi-SupportForm.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "download",
                    "collect",
                    "status",
                    "polling"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.SupportForm.Service": {
            "lib": "lib/libwebapi-SupportForm.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Synohdpack": {
            "lib": "/usr/syno/synoman/webapi/lib/SYNO.Core.Synohdpack.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "getHDIcon",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.SyslogClient.FileTransfer": {
            "lib": "lib/SYNO.Core.SyslogClient.FileTransfer.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.SyslogClient.Log": {
            "lib": "lib/SYNO.Core.SyslogClient.Log.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "export",
                    "clear",
                    "get_remotearch_subfolder"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.SyslogClient.PersonalActivity": {
            "lib": "lib/SYNO.Core.SyslogClient.PersonalActivity.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "loginhistory"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.SyslogClient.Setting.Notify": {
            "lib": "lib/SYNO.Core.SyslogClient.Setting.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.SyslogClient.Status": {
            "lib": "lib/SYNO.Core.SyslogClient.Status.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "device_enum",
                    "latestlog_get",
                    "eps_get",
                    "cnt_get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.System.Status": {
            "lib": "/usr/syno/synoman/webapi/lib/SYNO.Core.System.Status.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.System": {
            "lib": "lib/SYNO.Core.System.so",
            "maxVersion": 3,
            "methods": {
                "1": [
                    "shutdown",
                    "reboot",
                    "reset",
                    "info"
                ],
                "2": [
                    "info"
                ],
                "3": [
                    "info"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.System.Process": {
            "lib": "lib/SYNO.Core.System.Process.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.System.ResetButton": {
            "lib": "lib/SYNO.Core.System.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.System.Utilization": {
            "lib": "lib/SYNO.Core.System.Utilization.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.TFTP": {
            "lib": "lib/libCoreTFTP.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.TaskScheduler": {
            "lib": "lib/SYNO.Core.TaskScheduler.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list",
                    "get",
                    "set_enable",
                    "delete",
                    "run",
                    "set",
                    "create",
                    "view"
                ],
                "2": [
                    "get",
                    "set",
                    "create"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Terminal": {
            "lib": "lib/SYNO.Core.Terminal.so",
            "maxVersion": 3,
            "methods": {
                "1": [
                    "set",
                    "get"
                ],
                "2": [
                    "set",
                    "get"
                ],
                "3": [
                    "set",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Theme.AppPortalLogin": {
            "lib": "lib/SYNO.Core.Theme.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Theme.Desktop": {
            "lib": "lib/SYNO.Core.Theme.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Theme.FileSharingLogin": {
            "lib": "lib/SYNO.Core.Theme.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Theme.Image": {
            "lib": "lib/SYNO.Core.Theme.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "upload",
                    "get",
                    "clean_history"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Theme.Login": {
            "lib": "lib/SYNO.Core.Theme.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.TrustDevice": {
            "lib": "/usr/syno/synoman/webapi/lib/SYNO.Core.TrustDevice.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "delete",
                    "delete_others",
                    "create"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.UISearch": {
            "lib": "/usr/syno/synoman/webapi/lib/SYNO.Core.UISearch.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "uisearch"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Upgrade": {
            "lib": "lib/SYNO.Core.Upgrade.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "start",
                    "progress",
                    "status"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Upgrade.AutoUpgrade": {
            "lib": "lib/SYNO.Core.Upgrade.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "status",
                    "cancel"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Upgrade.Group": {
            "lib": "lib/SYNO.Core.Upgrade.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "info"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Upgrade.Group.Download": {
            "lib": "lib/SYNO.Core.Upgrade.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "start",
                    "cancel",
                    "progress"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Upgrade.Group.Setting": {
            "lib": "lib/SYNO.Core.Upgrade.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Upgrade.GroupInstall": {
            "lib": "lib/SYNO.Core.Upgrade.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "start",
                    "status"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Upgrade.GroupInstall.Network": {
            "lib": "lib/SYNO.Core.Upgrade.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Upgrade.Patch": {
            "lib": "lib/SYNO.Core.Upgrade.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "upload",
                    "clean",
                    "verify",
                    "validate"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Upgrade.PreCheck": {
            "lib": "lib/SYNO.Core.Upgrade.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "start"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Upgrade.Server": {
            "lib": "lib/SYNO.Core.Upgrade.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "check",
                    "smallcheck",
                    "upgrade_to_version",
                    "smallupdate_to_latest"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Upgrade.Server.Download": {
            "lib": "lib/SYNO.Core.Upgrade.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "start",
                    "cancel",
                    "progress"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Upgrade.Setting": {
            "lib": "lib/SYNO.Core.Upgrade.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "get",
                    "set"
                ],
                "2": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.User": {
            "lib": "lib/SYNO.Core.User.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "get",
                    "set",
                    "delete",
                    "create",
                    "parse_user_list",
                    "import",
                    "import_status",
                    "import_stop"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.User.Group": {
            "lib": "lib/SYNO.Core.User.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "join",
                    "join_stop",
                    "join_list",
                    "join_status"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.User.Home": {
            "lib": "lib/SYNO.Core.User.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "move_check",
                    "validate_set",
                    "set",
                    "status",
                    "stop"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.User.PasswordConfirm": {
            "lib": "lib/SYNO.Core.User.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "auth"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.User.PasswordExpiry": {
            "lib": "lib/SYNO.Core.User.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.User.PasswordPolicy": {
            "lib": "lib/SYNO.Core.User.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set",
                    "check"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.UserSettings": {
            "lib": "lib/SYNO.Core.UserSettings.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "apply"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Virtualization.Host.Capability": {
            "lib": "lib/SYNO.Core.Virtualization.Host.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Web.DSM": {
            "lib": "lib/SYNO.Core.Web.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "get",
                    "set"
                ],
                "2": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Web.DSM.External": {
            "lib": "lib/SYNO.Core.Web.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Web.Security.HTTPCompression": {
            "lib": "lib/SYNO.Core.Web.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Web.Security.TLSProfile": {
            "lib": "lib/SYNO.Core.Web.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        }
    },
    "SYNO.DR": {
        "SYNO.DR.Node": {
            "lib": "lib/SYNO.DR.Node.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "info",
                    "test_sync_speed",
                    "test_download_speed",
                    "test_privilege",
                    "test_connection"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.DR.Node.Credential": {
            "lib": "lib/SYNO.DR.Node.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "create",
                    "set",
                    "get",
                    "list",
                    "relay",
                    "reverse_create",
                    "test_create",
                    "test_reverse_create",
                    "test_set",
                    "temp_create",
                    "temp_reverse_create"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.DR.Node.Session": {
            "lib": "lib/SYNO.DR.Node.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "create",
                    "temp_create",
                    "get",
                    "delete"
                ],
                "2": [
                    "create"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        }
    },
    "SYNO.DSM": {
        "SYNO.DSM.FindMe": {
            "lib": "/usr/syno/synoman/webapi/lib/SYNO.DSM.FindMe.so",
            "maxVersion": 2,
            "methods": {
                "2": [
                    "supported",
                    "stop",
                    "start"
                ]
            },
            "minVersion": 2,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.DSM.Info": {
            "lib": "/usr/syno/synoman/webapi/lib/SYNO.DSM.Info.so",
            "maxVersion": 2,
            "methods": {
                "2": [
                    "getinfo"
                ]
            },
            "minVersion": 2,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.DSM.Network": {
            "lib": "/usr/syno/synoman/webapi/lib/SYNO.DSM.Network.so",
            "maxVersion": 2,
            "methods": {
                "2": [
                    "list"
                ]
            },
            "minVersion": 2,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.DSM.PortEnable": {
            "lib": "lib/SYNO.DSM.PortEnable.so",
            "minVersion": 1,
            "maxVersion": 1,
            "methods": {
                "1": [
                    "is_pkg_enable",
                    "is_port_block",
                    "open_block_port"
                ]
            },
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.DSM.PushNotification": {
            "lib": "/usr/syno/synoman/webapi/lib/SYNO.DSM.PushNotification.so",
            "maxVersion": 2,
            "methods": {
                "2": [
                    "requesttoken"
                ]
            },
            "minVersion": 2,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        }
    },
    "SYNO.DisasterRecovery": {
        "SYNO.DisasterRecovery.Log": {
            "lib": "lib/SYNO.DisasterRecovery.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "export",
                    "clear"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.DisasterRecovery.Retention": {
            "lib": "lib/SYNO.DisasterRecovery.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "get_timezone",
                    "set",
                    "set_timezone"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        }
    },
    "SYNO.DownloadStation2": {
        "SYNO.DownloadStation2.BTSearch": {
            "lib": "DownloadStation/SYNO.DownloadStation2.BTSearch.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list_category",
                    "list",
                    "stop",
                    "start"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.DownloadStation2.Captcha": {
            "lib": "DownloadStation/SYNO.DownloadStation2.Captcha.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "download",
                    "set",
                    "list"
                ],
                "2": [
                    "download",
                    "set",
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.DownloadStation2.Package.Info": {
            "lib": "DownloadStation/SYNO.DownloadStation2.Package.so",
            "maxVersion": 2,
            "methods": {
                "2": [
                    "get"
                ]
            },
            "minVersion": 2,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.DownloadStation2.Package.Module": {
            "lib": "DownloadStation/SYNO.DownloadStation2.Package.so",
            "maxVersion": 2,
            "methods": {
                "2": [
                    "get",
                    "list"
                ]
            },
            "minVersion": 2,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.DownloadStation2.Package.Service": {
            "lib": "DownloadStation/SYNO.DownloadStation2.Package.so",
            "maxVersion": 2,
            "methods": {
                "2": [
                    "get"
                ]
            },
            "minVersion": 2,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.DownloadStation2.RSS.Feed": {
            "lib": "DownloadStation/SYNO.DownloadStation2.RSS.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "add",
                    "updateall",
                    "update",
                    "delete",
                    "set",
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.DownloadStation2.RSS.Filter": {
            "lib": "DownloadStation/SYNO.DownloadStation2.RSS.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "test",
                    "delete",
                    "list",
                    "set",
                    "add"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.DownloadStation2.RSS.Item": {
            "lib": "DownloadStation/SYNO.DownloadStation2.RSS.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "clear",
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.DownloadStation2.Settings.FileHosting": {
            "lib": "DownloadStation/SYNO.DownloadStation2.Settings.FileHosting.so",
            "maxVersion": 2,
            "methods": {
                "2": [
                    "verify",
                    "get",
                    "set",
                    "list",
                    "update",
                    "delete",
                    "create"
                ]
            },
            "minVersion": 2,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.DownloadStation2.Settings.BT": {
            "lib": "DownloadStation/SYNO.DownloadStation2.Settings.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.DownloadStation2.Settings.BTSearch": {
            "lib": "DownloadStation/SYNO.DownloadStation2.Settings.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "get",
                    "set",
                    "verify",
                    "create",
                    "delete",
                    "update_check",
                    "update"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.DownloadStation2.Settings.Emule": {
            "lib": "DownloadStation/SYNO.DownloadStation2.Settings.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.DownloadStation2.Settings.Emule.Location": {
            "lib": "DownloadStation/SYNO.DownloadStation2.Settings.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "set",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.DownloadStation2.Settings.FtpHttp": {
            "lib": "DownloadStation/SYNO.DownloadStation2.Settings.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.DownloadStation2.Settings.Global": {
            "lib": "DownloadStation/SYNO.DownloadStation2.Settings.so",
            "maxVersion": 2,
            "methods": {
                "2": [
                    "get",
                    "set",
                    "read_progress"
                ]
            },
            "minVersion": 2,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.DownloadStation2.Settings.Location": {
            "lib": "DownloadStation/SYNO.DownloadStation2.Settings.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.DownloadStation2.Settings.Nzb": {
            "lib": "DownloadStation/SYNO.DownloadStation2.Settings.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.DownloadStation2.Settings.Rss": {
            "lib": "DownloadStation/SYNO.DownloadStation2.Settings.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.DownloadStation2.Settings.Scheduler": {
            "lib": "DownloadStation/SYNO.DownloadStation2.Settings.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.DownloadStation2.Task.BT": {
            "lib": "DownloadStation/SYNO.DownloadStation2.Task.BT.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "get",
                    "set"
                ],
                "2": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.DownloadStation2.Task.BT.File": {
            "lib": "DownloadStation/SYNO.DownloadStation2.Task.BT.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "set",
                    "list",
                    "copy"
                ],
                "2": [
                    "set",
                    "list",
                    "copy"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.DownloadStation2.Task.BT.Peer": {
            "lib": "DownloadStation/SYNO.DownloadStation2.Task.BT.so",
            "maxVersion": 2,
            "methods": {
                "2": [
                    "list"
                ]
            },
            "minVersion": 2,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.DownloadStation2.Task.BT.Tracker": {
            "lib": "DownloadStation/SYNO.DownloadStation2.Task.BT.so",
            "maxVersion": 2,
            "methods": {
                "2": [
                    "list",
                    "add",
                    "delete"
                ]
            },
            "minVersion": 2,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.DownloadStation2.Task.NZB.File": {
            "lib": "DownloadStation/SYNO.DownloadStation2.Task.NZB.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.DownloadStation2.Task.NZB.Log": {
            "lib": "DownloadStation/SYNO.DownloadStation2.Task.NZB.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.DownloadStation2.Task.eMule": {
            "lib": "DownloadStation/SYNO.DownloadStation2.Task.eMule.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list_upload"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.DownloadStation2.Task": {
            "lib": "DownloadStation/SYNO.DownloadStation2.Task.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "create",
                    "list",
                    "get",
                    "delete",
                    "pause",
                    "resume",
                    "edit"
                ],
                "2": [
                    "resume_condition",
                    "pause_condition",
                    "delete_condition",
                    "create",
                    "list",
                    "get",
                    "delete",
                    "pause",
                    "resume",
                    "edit"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.DownloadStation2.Task.List": {
            "lib": "DownloadStation/SYNO.DownloadStation2.Task.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "get",
                    "download",
                    "delete"
                ],
                "2": [
                    "get",
                    "download",
                    "delete"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.DownloadStation2.Task.List.Polling": {
            "lib": "DownloadStation/SYNO.DownloadStation2.Task.so",
            "maxVersion": 2,
            "methods": {
                "2": [
                    "download_stop",
                    "download_status",
                    "download"
                ]
            },
            "minVersion": 2,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.DownloadStation2.Task.Source": {
            "lib": "DownloadStation/SYNO.DownloadStation2.Task.so",
            "maxVersion": 2,
            "methods": {
                "2": [
                    "download"
                ]
            },
            "minVersion": 2,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.DownloadStation2.Task.Statistic": {
            "lib": "DownloadStation/SYNO.DownloadStation2.Task.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.DownloadStation2.Thumbnail": {
            "lib": "DownloadStation/SYNO.DownloadStation2.Thumbnail.so",
            "maxVersion": 2,
            "methods": {
                "2": [
                    "get",
                    "download"
                ]
            },
            "minVersion": 2,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.DownloadStation2.XunleiLixian": {
            "lib": "DownloadStation/SYNO.DownloadStation2.XunleiLixian.so",
            "maxVersion": 2,
            "methods": {
                "2": [
                    "download_captcha",
                    "set_account"
                ]
            },
            "minVersion": 2,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.DownloadStation2.eMule.Search": {
            "lib": "DownloadStation/SYNO.DownloadStation2.eMule.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "download",
                    "list",
                    "stop",
                    "start"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.DownloadStation2.eMule.Server": {
            "lib": "DownloadStation/SYNO.DownloadStation2.eMule.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get_status",
                    "connect_kad",
                    "disconnect",
                    "connect",
                    "delete",
                    "add",
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        }
    },
    "SYNO.Entry": {
        "SYNO.Entry.Request.Polling": {
            "lib": "lib/webapi_entry_polling.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "status",
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Entry.Request": {
            "lib": "lib/NotExist.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "request"
                ],
                "2": [
                    "request"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        }
    },
    "SYNO.FileStation": {
        "SYNO.FileStation.BackgroundTask": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.BackgroundTask.so",
            "maxVersion": 3,
            "methods": {
                "1": [
                    "list",
                    "clear_finished"
                ],
                "2": [
                    "list",
                    "clear_finished"
                ],
                "3": [
                    "list",
                    "clear_finished"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.CheckExist": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.Directory.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "check"
                ],
                "2": [
                    "check"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.CheckPermission": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.CheckPermission.so",
            "maxVersion": 3,
            "methods": {
                "1": [
                    "write"
                ],
                "2": [
                    "write"
                ],
                "3": [
                    "write"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.Compress": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.Compress.so",
            "maxVersion": 3,
            "methods": {
                "1": [
                    "start",
                    "status",
                    "stop"
                ],
                "2": [
                    "start",
                    "status",
                    "stop"
                ],
                "3": [
                    "start",
                    "status",
                    "stop"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.CopyMove": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.CopyMove.so",
            "maxVersion": 3,
            "methods": {
                "1": [
                    "start",
                    "status",
                    "stop"
                ],
                "2": [
                    "start",
                    "status",
                    "stop"
                ],
                "3": [
                    "start",
                    "status",
                    "stop"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.CreateFolder": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.Directory.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "create"
                ],
                "2": [
                    "create"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.Delete": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.Delete.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "start",
                    "stop",
                    "status",
                    "delete"
                ],
                "2": [
                    "start",
                    "stop",
                    "status",
                    "delete"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.DirSize": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.Directory.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "start",
                    "status",
                    "stop"
                ],
                "2": [
                    "start",
                    "status",
                    "stop"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.Download": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.Download.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "download"
                ],
                "2": [
                    "download"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.External.GoogleDrive": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.External.GoogleDrive.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "open"
                ],
                "2": [
                    "open"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.Extract": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.Extract.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list",
                    "start",
                    "status",
                    "stop"
                ],
                "2": [
                    "list",
                    "start",
                    "status",
                    "stop"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.Favorite": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.Favorite.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list",
                    "edit",
                    "delete",
                    "add",
                    "clear_broken",
                    "replace_all"
                ],
                "2": [
                    "list",
                    "edit",
                    "delete",
                    "add",
                    "clear_broken",
                    "replace_all"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.FormUpload": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.Upload.so",
            "maxVersion": 2,
            "methods": {
                "2": [
                    "start",
                    "status",
                    "cancel"
                ]
            },
            "minVersion": 2,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.Info": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.Info.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "get"
                ],
                "2": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.List": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.List.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list",
                    "list_share",
                    "getinfo"
                ],
                "2": [
                    "list",
                    "list_share",
                    "getinfo"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.MD5": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.MD5.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "start",
                    "status",
                    "stop"
                ],
                "2": [
                    "start",
                    "status",
                    "stop"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.Mount": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.Mount.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "mount_iso",
                    "mount_remote",
                    "unmount"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.Mount.List": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.Mount.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "unmount",
                    "reconnect",
                    "remount"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.Notify": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.Notify.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "all",
                    "one"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.Property": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.Property.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "set",
                    "status",
                    "stop"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.Property.ACLOwner": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.Property.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.Property.CompressSize": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.Property.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.Property.Mtime": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.Property.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.Rename": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.Rename.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "rename"
                ],
                "2": [
                    "rename"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.Search": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.Search.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list",
                    "start",
                    "stop",
                    "clean"
                ],
                "2": [
                    "list",
                    "start",
                    "stop",
                    "clean"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.Search.History": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.Search.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set",
                    "delete"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.Settings": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.Settings.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.Sharing": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.Sharing.so",
            "maxVersion": 3,
            "methods": {
                "1": [
                    "create",
                    "list",
                    "edit",
                    "delete",
                    "clear_invalid",
                    "getinfo"
                ],
                "2": [
                    "create",
                    "list",
                    "list_share_me",
                    "edit",
                    "delete",
                    "clear_invalid",
                    "getinfo"
                ],
                "3": [
                    "create",
                    "list",
                    "list_share_me",
                    "edit",
                    "delete",
                    "clear_invalid",
                    "getinfo"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.Sharing.Download": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.Sharing.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "download"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.Snapshot": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.Snapshot.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list",
                    "history",
                    "desc"
                ],
                "2": [
                    "list",
                    "history",
                    "desc"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.Thumb": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.Thumb.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "get"
                ],
                "2": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.Timeout": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.Misc.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "avoid"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.UIString": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.Misc.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "getjs"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.Upload": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.Upload.so",
            "maxVersion": 3,
            "methods": {
                "2": [
                    "upload"
                ],
                "3": [
                    "upload"
                ]
            },
            "minVersion": 2,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.UserGrp": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.UserGrp.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list_user",
                    "list_group",
                    "list_all"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.VFS.Connection": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.VFS.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "create",
                    "set",
                    "delete",
                    "list",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.VFS.File": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.VFS.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.VFS.GDrive": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.VFS.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "download"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.VFS.Profile": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.VFS.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "create",
                    "set",
                    "delete",
                    "get",
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.VFS.Protocol": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.VFS.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.VFS.User": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.VFS.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.VirtualFolder": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.VirtualFolder.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list"
                ],
                "2": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        }
    },
    "SYNO.Finder": {
        "SYNO.Finder.AppIndexing.Search": {
            "lib": "/var/packages/SynoFinder/target/webapi/SYNO.Finder.AppIndexing.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "search"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Finder.Bookmark": {
            "lib": "/var/packages/SynoFinder/target/webapi/SYNO.Finder.Bookmark.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "del",
                    "get",
                    "add"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Finder.Elastic.SearchHistory": {
            "lib": "/var/packages/SynoFinder/target/webapi/SYNO.Finder.Elastic.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "delete",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Finder.Elastic.Spotlight": {
            "lib": "/var/packages/SynoFinder/target/webapi/SYNO.Finder.Elastic.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "boost"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Finder.Elastic.Term": {
            "lib": "/var/packages/SynoFinder/target/webapi/SYNO.Finder.Elastic.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list_avail_db",
                    "suggest"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Finder.File": {
            "lib": "/var/packages/SynoFinder/target/webapi/SYNO.Finder.File.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Finder.File.Cover": {
            "lib": "/var/packages/SynoFinder/target/webapi/SYNO.Finder.File.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Finder.File.Thumbnail": {
            "lib": "/var/packages/SynoFinder/target/webapi/SYNO.Finder.File.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Finder.FileIndexing.Folder": {
            "lib": "/var/packages/SynoFinder/target/webapi/SYNO.Finder.FileIndexing.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "reindex",
                    "delete",
                    "list",
                    "list_group",
                    "summary",
                    "set",
                    "add",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Finder.FileIndexing.Highlight": {
            "lib": "/var/packages/SynoFinder/target/webapi/SYNO.Finder.FileIndexing.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "highlight"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Finder.FileIndexing.Indicate": {
            "lib": "/var/packages/SynoFinder/target/webapi/SYNO.Finder.FileIndexing.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "indicate"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Finder.FileIndexing.Search": {
            "lib": "/var/packages/SynoFinder/target/webapi/SYNO.Finder.FileIndexing.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "search"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Finder.FileIndexing.Status": {
            "lib": "/var/packages/SynoFinder/target/webapi/SYNO.Finder.FileIndexing.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "resume",
                    "pause",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Finder.FileIndexing.Term": {
            "lib": "/var/packages/SynoFinder/target/webapi/SYNO.Finder.FileIndexing.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "update"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Finder.Preference": {
            "lib": "/var/packages/SynoFinder/target/webapi/SYNO.Finder.Preference.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "set",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Finder.Settings": {
            "lib": "/var/packages/SynoFinder/target/webapi/SYNO.Finder.Settings.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "set",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Finder.UserGrp": {
            "lib": "/var/packages/SynoFinder/target/webapi/SYNO.Finder.UserGrp.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list_group",
                    "list_user"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        }
    },
    "SYNO.FolderSharing": {
        "SYNO.FolderSharing.Download": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FolderSharing.Download.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "download"
                ],
                "2": [
                    "download"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FolderSharing.List": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FolderSharing.List.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list"
                ],
                "2": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FolderSharing.Thumb": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FolderSharing.Thumb.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "get"
                ],
                "2": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        }
    },
    "SYNO.License": {
        "SYNO.License": {
            "lib": "lib/SYNO.License.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list",
                    "activate",
                    "deactivate",
                    "import",
                    "export",
                    "check_code",
                    "check_sync",
                    "check_connection",
                    "delete",
                    "check_extend_code",
                    "extend",
                    "check_extend_target"
                ],
                "2": [
                    "list",
                    "activate",
                    "deactivate",
                    "check_code",
                    "check_extend_code",
                    "check_extend_target"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        }
    },
    "SYNO.Package": {
        "SYNO.Package": {
            "lib": "lib/SYNO.Package.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        }
    },
    "SYNO.PersonMailAccount": {
        "SYNO.PersonMailAccount": {
            "lib": "lib/webapi_emailaccount.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "set",
                    "delete",
                    "get",
                    "update",
                    "test"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.PersonMailAccount.Contacts": {
            "lib": "lib/webapi_emailaccount.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.PersonMailAccount.Mail": {
            "lib": "lib/webapi_emailaccount.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "send",
                    "status",
                    "stop",
                    "clean"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        }
    },
    "SYNO.ResourceMonitor": {
        "SYNO.ResourceMonitor.Setting": {
            "lib": "lib/SYNO.ResourceMonitor.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        }
    },
    "SYNO.S2S": {
        "SYNO.S2S.Server": {
            "lib": "lib/libS2SServer.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.S2S.Server.Pair": {
            "lib": "lib/libS2SServerPair.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "get",
                    "delete"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.S2S.Client": {
            "lib": "lib/libS2SClient.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list_server"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.S2S.Client.Job": {
            "lib": "lib/libS2SClientJob.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "get",
                    "set",
                    "create",
                    "delete",
                    "start",
                    "stop",
                    "test_connection"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        }
    },
    "SYNO.SDS": {
        "SYNO.SDS.Backup.Client.Explore.File": {
            "lib": "/var/packages/HyperBackup/target/webapi/SYNO.SDS.Backup.Client.Explore.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list",
                    "copy",
                    "restore",
                    "download"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SDS.Backup.Client.Explore.Folder": {
            "lib": "/var/packages/HyperBackup/target/webapi/SYNO.SDS.Backup.Client.Explore.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SDS.Backup.Client.Explore.Job": {
            "lib": "/var/packages/HyperBackup/target/webapi/SYNO.SDS.Backup.Client.Explore.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list",
                    "cancel"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SDS.Backup.Client.Explore.Target": {
            "lib": "/var/packages/HyperBackup/target/webapi/SYNO.SDS.Backup.Client.Explore.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "get",
                    "password_verify",
                    "private_key_verify"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SDS.Backup.Client.Explore.Version": {
            "lib": "/var/packages/HyperBackup/target/webapi/SYNO.SDS.Backup.Client.Explore.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list",
                    "summary"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SDS.Backup.Client.Fuse.Target": {
            "lib": "/var/packages/HyperBackup/target/webapi/SYNO.SDS.Backup.Client.Fuse.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get_avail_mountpoint",
                    "mount_by_password",
                    "mount_by_private",
                    "umount"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        }
    },
    "SYNO.Storage": {
        "SYNO.Storage.CGI.Check": {
            "lib": "lib/libStorage.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "do_disk_scan",
                    "remove_ask_for_remap_scan",
                    "remove_ask_for_raid_force_scan",
                    "remove_ask_for_wcache_lost_data_scrubbing",
                    "remove_ask_for_fsck_scan",
                    "remove_ask_for_fsck",
                    "is_data_scrubbing",
                    "do_data_scrubbing",
                    "ignore_data_scrubbing",
                    "is_building",
                    "reboot_after_rebuild",
                    "should_ask_for_fsck_scan",
                    "schedule_next_suggestion",
                    "disable_suggestion",
                    "update_raid_list",
                    "get_space_for_scrubbing",
                    "add_schedule_raid_data_scrubbing_task",
                    "has_scrubbing_schedule"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Storage.CGI.DualEnclosure": {
            "lib": "lib/libStorage.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "load"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Storage.CGI.Enclosure": {
            "lib": "lib/libStorage.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "load"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Storage.CGI.Flashcache": {
            "lib": "lib/libStorage.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "check_system_raid",
                    "configure",
                    "create",
                    "estimate_mem_size",
                    "estimate_repair",
                    "load_history_data",
                    "remove",
                    "repair",
                    "statistics",
                    "statistics_check"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Storage.CGI.HddMan": {
            "lib": "lib/libStorage.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set",
                    "send_health_report"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Storage.CGI.Pool": {
            "lib": "lib/libStorage.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "cancel_data_scrubbing",
                    "cancel_create",
                    "create",
                    "data_scrubbing",
                    "delete",
                    "edit_desc",
                    "enum_resource",
                    "estimate_size",
                    "expand_by_add_disk",
                    "expand_unallocated",
                    "expand_unfinished_shr",
                    "migrate",
                    "remove_lun",
                    "repair"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Storage.CGI.Smart": {
            "lib": "lib/libStorage.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "get_health_info",
                    "get_smart_info",
                    "get_smart_test_log",
                    "do_smart_test",
                    "secure_erase",
                    "list",
                    "update_smartctl_db",
                    "smart_warning_set",
                    "smart_warning_get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Storage.CGI.Smart.Scheduler": {
            "lib": "lib/libStorage.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set",
                    "list",
                    "delete",
                    "run",
                    "change_state"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Storage.CGI.Spare": {
            "lib": "lib/libStorage.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Storage.CGI.Spare.Conf": {
            "lib": "lib/libStorage.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Storage.CGI.Storage": {
            "lib": "lib/libStorage.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "load_info",
                    "load_system_raid",
                    "login_check",
                    "repair_sys_partition",
                    "repair_system_partition",
                    "set_system_raid"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Storage.CGI.Volume": {
            "lib": "lib/libStorage.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "cancel_create",
                    "cancel_data_scrubbing",
                    "cancel_defrag",
                    "cancel_fs_scrubbing",
                    "create_on_existing_pool",
                    "create",
                    "data_scrubbing",
                    "defrag",
                    "delete",
                    "deploy_unused",
                    "enum_resource",
                    "estimate_size",
                    "expand_by_add_disk",
                    "expand_pool_child",
                    "expand_unallocated",
                    "expand_unfinished_shr",
                    "convert_shr_to_pool",
                    "fs_scrubbing",
                    "migrate",
                    "next_trim_time_get",
                    "repair",
                    "ssd_trim_get",
                    "ssd_trim_save",
                    "vol_extent_size_get",
                    "vol_extent_size_set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        }
    },
    "SYNO.TextEditor": {
        "SYNO.TextEditor": {
            "lib": "/var/packages/TextEditor/target/webapi/lib/SYNO.TextEditor.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "translate"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.TextEditor.Preference": {
            "lib": "/var/packages/TextEditor/target/webapi/lib/SYNO.TextEditor.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "set",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        }
    },
    "SYNO.Utils": {
        "SYNO.Utils": {
            "lib": "/usr/syno/synoman/webapi/lib/SYNO.Utils.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "QRCode"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        }
    },
    "SYNO.VideoPlayer": {
        "SYNO.VideoPlayer.Subtitle": {
            "lib": "lib/SYNO.VideoPlayer.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        }
    },
    "SYNO.VideoStation": {
        "SYNO.VideoStation.AcrossLibrary": {
            "lib": "/var/packages/VideoStation/target/webapi5/SYNO.VideoStation.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list_library",
                    "list_movie"
                ]
            },
            "minVersion": 1
        },
        "SYNO.VideoStation.Backdrop": {
            "lib": "/var/packages/VideoStation/target/webapi5/SYNO.VideoStation.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "add",
                    "delete_all",
                    "get"
                ]
            },
            "minVersion": 1
        },
        "SYNO.VideoStation.OfflineConversion": {
            "lib": "/var/packages/VideoStation/target/webapi5/SYNO.VideoStation.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "create",
                    "delete",
                    "list",
                    "restart",
                    "restart_all",
                    "stop",
                    "stop_all"
                ]
            },
            "minVersion": 1
        },
        "SYNO.VideoStation.Info": {
            "path": "VideoStation/info.cgi",
            "minVersion": 1,
            "maxVersion": 1,
            "methods": {
                "1": [
                    "getinfo"
                ]
            }
        },
        "SYNO.VideoStation.Video": {
            "path": "VideoStation/video.cgi",
            "minVersion": 1,
            "maxVersion": 3,
            "methods": {
                "1": [
                    "download",
                    "getinfo",
                    "delete_symlink"
                ],
                "2": [
                    "download",
                    "delete",
                    "getinfo",
                    "delete_symlink"
                ],
                "3": [
                    "download",
                    "delete",
                    "getinfo",
                    "delete_symlink",
                    "get_track_info"
                ]
            }
        },
        "SYNO.VideoStation.Movie": {
            "path": "VideoStation/movie.cgi",
            "minVersion": 1,
            "maxVersion": 4,
            "methods": {
                "1": [
                    "list",
                    "search",
                    "getinfo",
                    "edit"
                ],
                "2": [
                    "list",
                    "search",
                    "getinfo",
                    "edit",
                    "set_watched"
                ],
                "3": [
                    "list",
                    "search",
                    "getinfo",
                    "edit",
                    "delete",
                    "set_watched"
                ],
                "4": [
                    "list",
                    "search",
                    "getinfo",
                    "edit",
                    "delete",
                    "set_watched",
                    "set_rating"
                ]
            }
        },
        "SYNO.VideoStation.TVShow": {
            "path": "VideoStation/tvshow.cgi",
            "minVersion": 1,
            "maxVersion": 3,
            "methods": {
                "1": [
                    "list",
                    "search",
                    "getinfo",
                    "edit"
                ],
                "2": [
                    "list",
                    "search",
                    "getinfo",
                    "edit"
                ],
                "3": [
                    "list",
                    "search",
                    "getinfo",
                    "edit"
                ]
            }
        },
        "SYNO.VideoStation.TVShowEpisode": {
            "path": "VideoStation/tvshow_episode.cgi",
            "minVersion": 1,
            "maxVersion": 4,
            "methods": {
                "1": [
                    "list",
                    "search",
                    "getinfo",
                    "edit",
                    "edit_adv"
                ],
                "2": [
                    "list",
                    "search",
                    "getinfo",
                    "edit",
                    "edit_adv",
                    "set_watched"
                ],
                "3": [
                    "list",
                    "search",
                    "getinfo",
                    "edit",
                    "delete",
                    "edit_adv",
                    "set_watched"
                ],
                "4": [
                    "list",
                    "search",
                    "getinfo",
                    "edit",
                    "delete",
                    "edit_adv",
                    "set_watched",
                    "set_rating"
                ]
            }
        },
        "SYNO.VideoStation.HomeVideo": {
            "path": "VideoStation/homevideo.cgi",
            "minVersion": 1,
            "maxVersion": 4,
            "methods": {
                "1": [
                    "list",
                    "search",
                    "getinfo",
                    "edit"
                ],
                "2": [
                    "list",
                    "search",
                    "getinfo",
                    "edit",
                    "set_watched"
                ],
                "3": [
                    "list",
                    "search",
                    "getinfo",
                    "edit",
                    "delete",
                    "set_watched"
                ],
                "4": [
                    "list",
                    "search",
                    "getinfo",
                    "edit",
                    "delete",
                    "set_watched",
                    "set_rating"
                ]
            }
        },
        "SYNO.VideoStation.TVRecording": {
            "path": "VideoStation/tvrecord.cgi",
            "minVersion": 1,
            "maxVersion": 3,
            "methods": {
                "1": [
                    "list",
                    "search",
                    "getinfo",
                    "edit"
                ],
                "2": [
                    "list",
                    "search",
                    "getinfo",
                    "edit",
                    "set_watched"
                ],
                "3": [
                    "list",
                    "search",
                    "getinfo",
                    "edit",
                    "delete",
                    "set_watched"
                ]
            }
        },
        "SYNO.VideoStation.Collection": {
            "path": "VideoStation/collection.cgi",
            "minVersion": 1,
            "maxVersion": 3,
            "methods": {
                "1": [
                    "list",
                    "video_list",
                    "search",
                    "create",
                    "delete",
                    "edit",
                    "addvideo",
                    "deletevideo"
                ],
                "2": [
                    "list",
                    "video_list",
                    "search",
                    "create",
                    "delete",
                    "edit",
                    "addvideo",
                    "deletevideo",
                    "getinfo",
                    "create_smart",
                    "edit_smart"
                ],
                "3": [
                    "list",
                    "video_list",
                    "search",
                    "create",
                    "delete",
                    "edit",
                    "addvideo",
                    "deletevideo",
                    "getinfo",
                    "create_smart",
                    "edit_smart"
                ]
            }
        },
        "SYNO.VideoStation.Metadata": {
            "path": "VideoStation/metadata.cgi",
            "minVersion": 1,
            "maxVersion": 3,
            "methods": {
                "1": [
                    "list"
                ],
                "2": [
                    "list"
                ],
                "3": [
                    "list"
                ]
            }
        },
        "SYNO.VideoStation.Poster": {
            "path": "VideoStation/poster.cgi",
            "minVersion": 1,
            "maxVersion": 3,
            "methods": {
                "1": [
                    "getimage",
                    "setimage"
                ],
                "2": [
                    "getimage",
                    "setimage"
                ],
                "3": [
                    "getimage",
                    "setimage",
                    "deleteimage"
                ]
            }
        },
        "SYNO.VideoStation.Streaming": {
            "path": "VideoStation/vtestreaming.cgi",
            "minVersion": 1,
            "maxVersion": 3,
            "methods": {
                "1": [
                    "open",
                    "stream",
                    "close"
                ],
                "2": [
                    "open",
                    "stream",
                    "close"
                ],
                "3": [
                    "open",
                    "stream",
                    "close"
                ]
            }
        },
        "SYNO.VideoStation.Subtitle": {
            "path": "VideoStation/subtitle.cgi",
            "minVersion": 1,
            "maxVersion": 4,
            "methods": {
                "1": [
                    "list",
                    "get"
                ],
                "2": [
                    "list",
                    "get"
                ],
                "3": [
                    "list",
                    "get",
                    "search",
                    "download"
                ],
                "4": [
                    "list",
                    "get",
                    "search",
                    "download",
                    "discover"
                ]
            }
        },
        "SYNO.VideoStation.AudioTrack": {
            "path": "VideoStation/audiotrack.cgi",
            "minVersion": 1,
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list"
                ]
            }
        },
        "SYNO.VideoStation.Folder": {
            "path": "VideoStation/folder.cgi",
            "minVersion": 1,
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list"
                ],
                "2": [
                    "list"
                ]
            }
        },
        "SYNO.VideoStation.WatchStatus": {
            "path": "VideoStation/watchstatus.cgi",
            "minVersion": 1,
            "maxVersion": 1,
            "methods": {
                "1": [
                    "getinfo",
                    "setinfo"
                ]
            }
        },
        "SYNO.VideoStation.Library": {
            "path": "VideoStation/library.cgi",
            "minVersion": 1,
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list"
                ],
                "2": [
                    "list",
                    "set_visibility"
                ]
            }
        },
        "SYNO.VideoStation.Sharing": {
            "path": "VideoStation/sharing.cgi",
            "minVersion": 1,
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            }
        },
        "SYNO.VideoStation.Misc": {
            "path": "VideoStation/misc.cgi",
            "minVersion": 1,
            "maxVersion": 1,
            "methods": {
                "1": [
                    "reset_timeout"
                ]
            }
        }
    },
    "SYNO.VideoStation2": {
        "SYNO.VideoStation2.AcrossLibrary": {
            "lib": "/var/packages/VideoStation/target/webapi5/SYNO.VideoStation.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list_library",
                    "list_movie"
                ]
            },
            "minVersion": 1
        },
        "SYNO.VideoStation2.Backdrop": {
            "lib": "/var/packages/VideoStation/target/webapi5/SYNO.VideoStation.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "add",
                    "delete_all",
                    "get"
                ]
            },
            "minVersion": 1
        },
        "SYNO.VideoStation2.Collection": {
            "lib": "/var/packages/VideoStation/target/webapi5/SYNO.VideoStation.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "add_video",
                    "create",
                    "create_smart",
                    "delete",
                    "delete_video",
                    "edit",
                    "edit_smart",
                    "getinfo",
                    "list",
                    "list_video"
                ],
                "2": [
                    "add_video",
                    "create",
                    "create_smart",
                    "delete",
                    "delete_video",
                    "edit",
                    "edit_smart",
                    "getinfo",
                    "list",
                    "list_video"
                ]
            },
            "minVersion": 1
        },
        "SYNO.VideoStation2.Controller.Device": {
            "lib": "/var/packages/VideoStation/target/webapi5/SYNO.VideoStation.Controller.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list"
                ]
            },
            "minVersion": 1
        },
        "SYNO.VideoStation2.Controller.Password": {
            "lib": "/var/packages/VideoStation/target/webapi5/SYNO.VideoStation.Controller.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "set",
                    "test"
                ]
            },
            "minVersion": 1
        },
        "SYNO.VideoStation2.Controller.Playback": {
            "lib": "/var/packages/VideoStation/target/webapi5/SYNO.VideoStation.Controller.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "pause",
                    "play",
                    "seek",
                    "set_repeat",
                    "status",
                    "stop"
                ],
                "2": [
                    "pause",
                    "play",
                    "seek",
                    "set_repeat",
                    "status",
                    "stop"
                ]
            },
            "minVersion": 1
        },
        "SYNO.VideoStation2.Controller.Volume": {
            "lib": "/var/packages/VideoStation/target/webapi5/SYNO.VideoStation.Controller.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1
        },
        "SYNO.VideoStation2.DTV.Channel": {
            "lib": "/var/packages/VideoStation/target/webapi5/SYNO.VideoStation.DTV.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "delete_all",
                    "edit",
                    "getinfo",
                    "list"
                ]
            },
            "minVersion": 1
        },
        "SYNO.VideoStation2.DTV.ChannelScan": {
            "lib": "/var/packages/VideoStation/target/webapi5/SYNO.VideoStation.DTV.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get_country",
                    "getinfo",
                    "get_region",
                    "start",
                    "status",
                    "stop"
                ]
            },
            "minVersion": 1
        },
        "SYNO.VideoStation2.DTV.DVBSScan": {
            "lib": "/var/packages/VideoStation/target/webapi5/SYNO.VideoStation.DTV.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "create_lnb",
                    "create_satellite",
                    "delete_lnb",
                    "delete_satellite",
                    "edit_lnb",
                    "edit_satellite",
                    "edit_tp",
                    "get_default_tp",
                    "getinfo",
                    "get_lnb",
                    "get_satellite",
                    "get_tp",
                    "start",
                    "status",
                    "stop"
                ]
            },
            "minVersion": 1
        },
        "SYNO.VideoStation2.DTV.Program": {
            "lib": "/var/packages/VideoStation/target/webapi5/SYNO.VideoStation.DTV.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "search",
                    "update"
                ]
            },
            "minVersion": 1
        },
        "SYNO.VideoStation2.DTV.Schedule": {
            "lib": "/var/packages/VideoStation/target/webapi5/SYNO.VideoStation.DTV.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "create",
                    "create_repeat",
                    "create_userdefine",
                    "delete",
                    "delete_passed",
                    "delete_repeat",
                    "delete_userdefine",
                    "edit_repeat",
                    "edit_userdefine",
                    "getinfo_repeat",
                    "getinfo_userdefine",
                    "list",
                    "stop"
                ]
            },
            "minVersion": 1
        },
        "SYNO.VideoStation2.DTV.Statistic": {
            "lib": "/var/packages/VideoStation/target/webapi5/SYNO.VideoStation.DTV.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "getinfo"
                ]
            },
            "minVersion": 1
        },
        "SYNO.VideoStation2.DTV.StreamController": {
            "lib": "/var/packages/VideoStation/target/webapi5/SYNO.VideoStation.DTV.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "getinfo",
                    "set_streaming",
                    "stop_streaming"
                ]
            },
            "minVersion": 1
        },
        "SYNO.VideoStation2.DTV.Streaming": {
            "lib": "/var/packages/VideoStation/target/webapi5/SYNO.VideoStation.DTV.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "close",
                    "open",
                    "stream"
                ]
            },
            "minVersion": 1
        },
        "SYNO.VideoStation2.DTV.StreamingNonAuth": {
            "lib": "/var/packages/VideoStation/target/webapi5/SYNO.VideoStation.DTV.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "stream"
                ]
            },
            "minVersion": 1
        },
        "SYNO.VideoStation2.DTV.Tuner": {
            "lib": "/var/packages/VideoStation/target/webapi5/SYNO.VideoStation.DTV.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "getinfo",
                    "list"
                ]
            },
            "minVersion": 1
        },
        "SYNO.VideoStation2.File": {
            "lib": "/var/packages/VideoStation/target/webapi5/SYNO.VideoStation.VTE.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "delete",
                    "delete_symlink",
                    "download",
                    "getinfo",
                    "get_track_info",
                    "set_watchstatus"
                ],
                "2": [
                    "delete",
                    "delete_symlink",
                    "download",
                    "getinfo",
                    "get_playback_setting",
                    "get_track_info",
                    "set_playback_setting",
                    "set_watchstatus"
                ]
            },
            "minVersion": 1
        },
        "SYNO.VideoStation2.Folder": {
            "lib": "/var/packages/VideoStation/target/webapi5/SYNO.VideoStation.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list"
                ]
            },
            "minVersion": 1
        },
        "SYNO.VideoStation2.HomeVideo": {
            "lib": "/var/packages/VideoStation/target/webapi5/SYNO.VideoStation.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "delete",
                    "edit",
                    "getinfo",
                    "list",
                    "set_rating",
                    "set_watched"
                ],
                "2": [
                    "delete",
                    "edit",
                    "getinfo",
                    "list",
                    "set_rating",
                    "set_watched",
                    "time_line"
                ]
            },
            "minVersion": 1
        },
        "SYNO.VideoStation2.Info": {
            "lib": "/var/packages/VideoStation/target/webapi5/SYNO.VideoStation.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1
        },
        "SYNO.VideoStation2.Library": {
            "lib": "/var/packages/VideoStation/target/webapi5/SYNO.VideoStation.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "set_visibility"
                ]
            },
            "minVersion": 1
        },
        "SYNO.VideoStation2.Metadata": {
            "lib": "/var/packages/VideoStation/target/webapi5/SYNO.VideoStation.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list"
                ]
            },
            "minVersion": 1
        },
        "SYNO.VideoStation2.Misc": {
            "lib": "/var/packages/VideoStation/target/webapi5/SYNO.VideoStation.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "reset_timeout"
                ]
            },
            "minVersion": 1
        },
        "SYNO.VideoStation2.Movie": {
            "lib": "/var/packages/VideoStation/target/webapi5/SYNO.VideoStation.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "delete",
                    "edit",
                    "getinfo",
                    "list",
                    "set_rating",
                    "set_watched"
                ]
            },
            "minVersion": 1
        },
        "SYNO.VideoStation2.OfflineConversion": {
            "lib": "/var/packages/VideoStation/target/webapi5/SYNO.VideoStation.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "create",
                    "delete",
                    "list",
                    "restart",
                    "restart_all",
                    "stop",
                    "stop_all"
                ]
            },
            "minVersion": 1
        },
        "SYNO.VideoStation2.ParentalControl": {
            "lib": "/var/packages/VideoStation/target/webapi5/SYNO.VideoStation.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "delete",
                    "get",
                    "list",
                    "list_certificate",
                    "list_user",
                    "set"
                ]
            },
            "minVersion": 1
        },
        "SYNO.VideoStation2.PluginSearch": {
            "lib": "/var/packages/VideoStation/target/webapi5/SYNO.VideoStation.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "query",
                    "start",
                    "stop"
                ]
            },
            "minVersion": 1
        },
        "SYNO.VideoStation2.Poster": {
            "lib": "/var/packages/VideoStation/target/webapi5/SYNO.VideoStation.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "delete",
                    "get",
                    "set"
                ]
            },
            "minVersion": 1
        },
        "SYNO.VideoStation2.Setting.Folder": {
            "lib": "/var/packages/VideoStation/target/webapi5/SYNO.VideoStation.Setting.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list"
                ]
            },
            "minVersion": 1
        },
        "SYNO.VideoStation2.Setting.Network": {
            "lib": "/var/packages/VideoStation/target/webapi5/SYNO.VideoStation.Setting.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get_preferred_interface",
                    "list",
                    "set_preferred_interface"
                ]
            },
            "minVersion": 1
        },
        "SYNO.VideoStation2.Setting.Personal": {
            "lib": "/var/packages/VideoStation/target/webapi5/SYNO.VideoStation.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1
        },
        "SYNO.VideoStation2.Setting.PreAnalysis": {
            "lib": "/var/packages/VideoStation/target/webapi5/SYNO.VideoStation.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set",
                    "trigger"
                ]
            },
            "minVersion": 1
        },
        "SYNO.VideoStation2.Sharing": {
            "lib": "/var/packages/VideoStation/target/webapi5/SYNO.VideoStation.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1
        },
        "SYNO.VideoStation2.Streaming": {
            "lib": "/var/packages/VideoStation/target/webapi5/SYNO.VideoStation.VTE.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "close",
                    "open",
                    "stream"
                ],
                "2": [
                    "close",
                    "open",
                    "stream"
                ]
            },
            "minVersion": 1
        },
        "SYNO.VideoStation2.Subtitle": {
            "lib": "/var/packages/VideoStation/target/webapi5/SYNO.VideoStation.VTE.so",
            "maxVersion": 3,
            "methods": {
                "1": [
                    "discover",
                    "download",
                    "get",
                    "list",
                    "search"
                ],
                "2": [
                    "discover",
                    "download",
                    "get",
                    "get_offset",
                    "list",
                    "search",
                    "set_offset"
                ],
                "3": [
                    "discover",
                    "download",
                    "get",
                    "get_offset",
                    "list",
                    "search",
                    "set_offset"
                ]
            },
            "minVersion": 1
        },
        "SYNO.VideoStation2.TVRecording": {
            "lib": "/var/packages/VideoStation/target/webapi5/SYNO.VideoStation.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "delete",
                    "edit",
                    "getinfo",
                    "list",
                    "list_channel",
                    "list_program",
                    "set_watched"
                ]
            },
            "minVersion": 1
        },
        "SYNO.VideoStation2.TVShow": {
            "lib": "/var/packages/VideoStation/target/webapi5/SYNO.VideoStation.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "edit",
                    "getinfo",
                    "list"
                ]
            },
            "minVersion": 1
        },
        "SYNO.VideoStation2.TVShowEpisode": {
            "lib": "/var/packages/VideoStation/target/webapi5/SYNO.VideoStation.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "delete",
                    "edit",
                    "getinfo",
                    "list",
                    "edit_adv",
                    "set_rating",
                    "set_watched"
                ]
            },
            "minVersion": 1
        }
    },
    "SYNO.WebStation": {
        "SYNO.WebStation.Default": {
            "lib": "/var/packages/WebStation/target/webapi/SYNO.WebStation.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.WebStation.HTTP.VHost": {
            "lib": "/var/packages/WebStation/target/webapi/SYNO.WebStation.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "add",
                    "delete",
                    "update"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.WebStation.PHP": {
            "lib": "/var/packages/WebStation/target/webapi/SYNO.WebStation.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set",
                    "set_advanced"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.WebStation.PHP.Extension": {
            "lib": "/var/packages/WebStation/target/webapi/SYNO.WebStation.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.WebStation.PHP.Profile": {
            "lib": "/var/packages/WebStation/target/webapi/SYNO.WebStation.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "add",
                    "update",
                    "delete"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.WebStation.Status": {
            "lib": "/var/packages/WebStation/target/webapi/SYNO.WebStation.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        }
    },
    "SYNO.VideoController": {
        "SYNO.VideoController.Playback": {
            "path": "VideoController/playback.cgi",
            "minVersion": 1,
            "maxVersion": 2,
            "methods": {
                "1": [
                    "play",
                    "pause",
                    "stop",
                    "seek",
                    "status"
                ],
                "2": [
                    "play",
                    "pause",
                    "stop",
                    "seek",
                    "status",
                    "set_repeat"
                ]
            }
        },
        "SYNO.VideoController.Volume": {
            "path": "VideoController/volume.cgi",
            "minVersion": 1,
            "maxVersion": 1,
            "methods": {
                "1": [
                    "setvolume",
                    "getvolume"
                ]
            }
        },
        "SYNO.VideoController.Device": {
            "path": "VideoController/device.cgi",
            "minVersion": 1,
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list"
                ]
            }
        },
        "SYNO.VideoController.Password": {
            "path": "VideoController/password.cgi",
            "minVersion": 1,
            "maxVersion": 1,
            "methods": {
                "1": [
                    "setpassword",
                    "testpassword"
                ]
            }
        }
    },
    "SYNO.VideoStataion": {
        "SYNO.VideoStataion.Poster": {
            "path": "VideoStation/poster.cgi",
            "minVersion": 1,
            "maxVersion": 1,
            "methods": {
                "1": [
                    "getimage",
                    "setimage"
                ]
            }
        }
    },
    "SYNO.DTV": {
        "SYNO.DTV.ChannelScan": {
            "path": "VideoStation/channelscan.cgi",
            "minVersion": 1,
            "maxVersion": 1,
            "methods": {
                "1": [
                    "getcountry",
                    "getregion",
                    "getconfig",
                    "start",
                    "stop",
                    "status"
                ]
            }
        },
        "SYNO.DTV.DVBSScan": {
            "path": "VideoStation/dvbsscan.cgi",
            "minVersion": 1,
            "maxVersion": 1,
            "methods": {
                "1": [
                    "getconfig",
                    "get_satellite",
                    "create_satellite",
                    "edit_satellite",
                    "delete_satellite",
                    "get_lnb",
                    "create_lnb",
                    "edit_lnb",
                    "delete_lnb",
                    "get_tp",
                    "get_tp_default",
                    "save_tp",
                    "start",
                    "stop",
                    "status"
                ]
            }
        },
        "SYNO.DTV.Channel": {
            "path": "VideoStation/channellist.cgi",
            "minVersion": 1,
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "getinfo",
                    "delete_all_channels",
                    "edit"
                ]
            }
        },
        "SYNO.DTV.Program": {
            "path": "VideoStation/programlist.cgi",
            "minVersion": 1,
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "search",
                    "update"
                ]
            }
        },
        "SYNO.DTV.Schedule": {
            "path": "VideoStation/schedule_recording.cgi",
            "minVersion": 1,
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "create",
                    "delete",
                    "delete_passed",
                    "create_repeat",
                    "getinfo_repeat",
                    "edit_repeat",
                    "delete_repeat",
                    "getinfo_userdefine",
                    "create_userdefine",
                    "edit_userdefine",
                    "delete_userdefine"
                ]
            }
        },
        "SYNO.DTV.Controller": {
            "path": "VideoStation/dtvcontrol.cgi",
            "minVersion": 1,
            "maxVersion": 1,
            "methods": {
                "1": [
                    "getchannel",
                    "setchannel"
                ]
            }
        },
        "SYNO.DTV.Streaming": {
            "path": "VideoStation/dtvstreaming.cgi",
            "minVersion": 1,
            "maxVersion": 1,
            "methods": {
                "1": [
                    "open",
                    "stream",
                    "close"
                ]
            }
        },
        "SYNO.DTV.Statistic": {
            "path": "VideoStation/dtvstatistic.cgi",
            "minVersion": 1,
            "maxVersion": 1,
            "methods": {
                "1": [
                    "getinfo"
                ]
            }
        },
        "SYNO.DTV.Tuner": {
            "path": "VideoStation/tuner.cgi",
            "minVersion": 1,
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "getinfo"
                ]
            }
        }
    },
    "SYNO.API": {
        "SYNO.API.Info": {
            "path": "query.cgi",
            "minVersion": 1,
            "maxVersion": 1,
            "methods": {
                "1": [
                    "query"
                ]
            }
        },
        "SYNO.API.Auth": {
            "path": "auth.cgi",
            "minVersion": 1,
            "maxVersion": 6,
            "methods": {
                "1": [
                    "login",
                    "logout"
                ],
                "2": [
                    "login",
                    "logout"
                ],
                "3": [
                    "login",
                    "logout"
                ],
                "4": [
                    "login",
                    "logout"
                ],
                "5": [
                    "login",
                    "logout",
                    "synotoken",
                    "session"
                ],
                "6": [
                    "login",
                    "logout",
                    "synotoken",
                    "session"
                ]
            }
        },
        "SYNO.API.OTP": {
            "path": "otp.cgi",
            "minVersion": 1,
            "maxVersion": 1,
            "methods": {
                "1": [
                    "setup"
                ]
            }
        },
        "SYNO.API.Encryption": {
            "path": "encryption.cgi",
            "minVersion": 1,
            "maxVersion": 1,
            "methods": {
                "1": [
                    "getinfo"
                ]
            }
        }
    }
}