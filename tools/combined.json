{
    "SYNO.AME": {
        "SYNO.AME.Pack": {
            "lib": "/var/packages/CodecPack/target/usr/webapi/SYNO.AME.Pack.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get_info",
                    "get_plugin_app_id",
                    "manual_update"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        }
    },
    "SYNO.API": {
        "SYNO.API.Auth": {
            "lib": "lib/SYNO.API.Auth.so",
            "maxVersion": 7,
            "methods": {
                "1": [
                    "logout"
                ],
                "2": [
                    "logout"
                ],
                "3": [
                    "logout",
                    "login"
                ],
                "4": [
                    "logout",
                    "login"
                ],
                "5": [
                    "synotoken",
                    "session",
                    "logout",
                    "login"
                ],
                "6": [
                    "oidc",
                    "Logout",
                    "Login",
                    "reset",
                    "session",
                    "synotoken",
                    "token",
                    "logout",
                    "login"
                ],
                "7": [
                    "suspend",
                    "resume",
                    "reset",
                    "logout",
                    "login"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi"
        },
        "SYNO.API.Auth.Key": {
            "lib": "lib/SYNO.API.Auth.so",
            "maxVersion": 7,
            "methods": {
                "7": [
                    "grant",
                    "get"
                ]
            },
            "minVersion": 7,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.API.Auth.Key.Code": {
            "lib": "lib/SYNO.API.Auth.so",
            "maxVersion": 7,
            "methods": {
                "7": [
                    "get"
                ]
            },
            "minVersion": 7,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.API.Auth.RedirectURI": {
            "lib": "lib/SYNO.API.Auth.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "run",
                    "check"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.API.Auth.Type": {
            "lib": "lib/SYNO.API.Auth.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.API.Auth.UIConfig": {
            "lib": "lib/SYNO.API.Auth.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.API.Encryption": {
            "lib": "lib/SYNO.API.Encryption.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "getinfo"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.API.Info": {
            "lib": "lib/SYNO.API.Info.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "query"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        }
    },
    "SYNO.ActiveInsight": {
        "SYNO.ActiveInsight.CompleteCollection": {
            "lib": "ActiveInsight/SYNO.ActiveInsight.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.ActiveInsight.License": {
            "lib": "ActiveInsight/SYNO.ActiveInsight.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.ActiveInsight.Package": {
            "lib": "ActiveInsight/SYNO.ActiveInsight.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "get_status",
                    "start_mib",
                    "stop_mib",
                    "change_mode"
                ],
                "2": [
                    "get_status",
                    "start_mib",
                    "stop_mib",
                    "change_mode"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.ActiveInsight.RelationManager": {
            "lib": "ActiveInsight/SYNO.ActiveInsight.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.ActiveInsight.Setting": {
            "lib": "ActiveInsight/SYNO.ActiveInsight.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        }
    },
    "SYNO.AudioPlayer": {
        "SYNO.AudioPlayer": {
            "lib": "/usr/syno/synoman/webapi/lib/SYNO.AudioPlayer.so",
            "maxVersion": 2,
            "methods": {
                "2": [
                    "list_media_info",
                    "get_media_info",
                    "get_support_info"
                ]
            },
            "minVersion": 2,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.AudioPlayer.Stream": {
            "lib": "/usr/syno/synoman/webapi/lib/SYNO.AudioPlayer.so",
            "maxVersion": 2,
            "methods": {
                "2": [
                    "transcode",
                    "stream"
                ]
            },
            "minVersion": 2,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        }
    },
    "SYNO.AudioStation": {
        "SYNO.AudioStation.Album": {
            "maxVersion": 3,
            "methods": {
                "1": [
                    "list"
                ],
                "2": [
                    "list"
                ],
                "3": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "AudioStation/album.cgi"
        },
        "SYNO.AudioStation.Artist": {
            "maxVersion": 4,
            "methods": {
                "1": [
                    "list"
                ],
                "2": [
                    "list"
                ],
                "3": [
                    "list"
                ],
                "4": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "AudioStation/artist.cgi"
        },
        "SYNO.AudioStation.Composer": {
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list"
                ],
                "2": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "AudioStation/composer.cgi"
        },
        "SYNO.AudioStation.Cover": {
            "maxVersion": 3,
            "methods": {
                "1": [
                    "getsongcover",
                    "getfoldercover",
                    "getcover"
                ],
                "2": [
                    "getsongcover",
                    "getfoldercover",
                    "getcover"
                ],
                "3": [
                    "getsongcover",
                    "getfoldercover",
                    "getcover"
                ]
            },
            "minVersion": 1,
            "path": "AudioStation/cover.cgi"
        },
        "SYNO.AudioStation.Download": {
            "maxVersion": 1,
            "methods": {
                "1": [
                    "download"
                ]
            },
            "minVersion": 1,
            "path": "AudioStation/download.cgi"
        },
        "SYNO.AudioStation.Folder": {
            "maxVersion": 3,
            "methods": {
                "1": [
                    "list",
                    "getinfo"
                ],
                "2": [
                    "list",
                    "getinfo"
                ],
                "3": [
                    "list",
                    "getinfo"
                ]
            },
            "minVersion": 1,
            "path": "AudioStation/folder.cgi"
        },
        "SYNO.AudioStation.Genre": {
            "maxVersion": 3,
            "methods": {
                "1": [
                    "list"
                ],
                "2": [
                    "list"
                ],
                "3": [
                    "list",
                    "list_default_genre"
                ]
            },
            "minVersion": 1,
            "path": "AudioStation/genre.cgi"
        },
        "SYNO.AudioStation.Info": {
            "maxVersion": 6,
            "methods": {
                "1": [
                    "getinfo"
                ],
                "2": [
                    "getinfo"
                ],
                "3": [
                    "getinfo"
                ],
                "4": [
                    "getinfo"
                ],
                "5": [
                    "getinfo"
                ],
                "6": [
                    "getinfo"
                ]
            },
            "minVersion": 1,
            "path": "AudioStation/info.cgi"
        },
        "SYNO.AudioStation.Lyrics": {
            "maxVersion": 2,
            "methods": {
                "1": [
                    "getlyrics",
                    "setlyrics"
                ],
                "2": [
                    "getlyrics",
                    "setlyrics"
                ]
            },
            "minVersion": 1,
            "path": "AudioStation/lyrics.cgi"
        },
        "SYNO.AudioStation.LyricsSearch": {
            "maxVersion": 2,
            "methods": {
                "1": [
                    "searchlyrics"
                ],
                "2": [
                    "searchlyrics"
                ]
            },
            "minVersion": 1,
            "path": "AudioStation/lyrics_search.cgi"
        },
        "SYNO.AudioStation.MediaServer": {
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "AudioStation/media_server.cgi"
        },
        "SYNO.AudioStation.Playlist": {
            "maxVersion": 3,
            "methods": {
                "1": [
                    "list",
                    "getinfo",
                    "create",
                    "delete",
                    "rename",
                    "copytolibrary",
                    "updatesongs",
                    "createsmart",
                    "updatesmart"
                ],
                "2": [
                    "list",
                    "getinfo",
                    "create",
                    "delete",
                    "rename",
                    "copytolibrary",
                    "updatesongs",
                    "createsmart",
                    "updatesmart",
                    "editsharing",
                    "saveplaying",
                    "savesearch",
                    "removemissing"
                ],
                "3": [
                    "list",
                    "getinfo",
                    "create",
                    "delete",
                    "rename",
                    "copytolibrary",
                    "updatesongs",
                    "createsmart",
                    "updatesmart",
                    "editsharing",
                    "saveplaying",
                    "savesearch",
                    "removemissing"
                ]
            },
            "minVersion": 1,
            "path": "AudioStation/playlist.cgi"
        },
        "SYNO.AudioStation.Proxy": {
            "maxVersion": 2,
            "methods": {
                "1": [
                    "getstreamid",
                    "stream",
                    "getsonginfo",
                    "deletesonginfo"
                ],
                "2": [
                    "getstreamid",
                    "stream",
                    "getsonginfo",
                    "deletesonginfo"
                ]
            },
            "minVersion": 1,
            "path": "AudioStation/proxy.cgi"
        },
        "SYNO.AudioStation.Radio": {
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list",
                    "add",
                    "updateradios"
                ],
                "2": [
                    "list",
                    "add",
                    "search",
                    "updateradios"
                ]
            },
            "minVersion": 1,
            "path": "AudioStation/radio.cgi"
        },
        "SYNO.AudioStation.RemotePlayer": {
            "maxVersion": 3,
            "methods": {
                "1": [
                    "list",
                    "getstatus",
                    "getplaylist",
                    "updateplaylist",
                    "control",
                    "testpassword",
                    "setpassword"
                ],
                "2": [
                    "list",
                    "getinfo",
                    "getstatus",
                    "getplaylist",
                    "updateplaylist",
                    "control",
                    "setmultiple",
                    "testpassword",
                    "setpassword"
                ],
                "3": [
                    "list",
                    "getinfo",
                    "getstatus",
                    "getplaylist",
                    "updateplaylist",
                    "control",
                    "setmultiple",
                    "testpassword",
                    "setpassword"
                ]
            },
            "minVersion": 1,
            "path": "AudioStation/remote_player.cgi"
        },
        "SYNO.AudioStation.RemotePlayerStatus": {
            "maxVersion": 2,
            "methods": {
                "1": [
                    "getstatus"
                ],
                "2": [
                    "getstatus"
                ]
            },
            "minVersion": 1,
            "path": "AudioStation/remote_player_status.cgi"
        },
        "SYNO.AudioStation.Search": {
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "AudioStation/search.cgi"
        },
        "SYNO.AudioStation.Song": {
            "maxVersion": 3,
            "methods": {
                "1": [
                    "list",
                    "search",
                    "getinfo"
                ],
                "2": [
                    "list",
                    "search",
                    "getinfo",
                    "setrating",
                    "setsharing",
                    "getsharing"
                ],
                "3": [
                    "list",
                    "search",
                    "getinfo",
                    "setrating",
                    "setsharing",
                    "getsharing"
                ]
            },
            "minVersion": 1,
            "path": "AudioStation/song.cgi"
        },
        "SYNO.AudioStation.Stream": {
            "maxVersion": 2,
            "methods": {
                "1": [
                    "stream",
                    "transcode"
                ],
                "2": [
                    "stream",
                    "transcode"
                ]
            },
            "minVersion": 1,
            "path": "AudioStation/stream.cgi"
        },
        "SYNO.AudioStation.WebPlayer": {
            "maxVersion": 1,
            "methods": {
                "1": [
                    "getplaylist",
                    "updateplaylist"
                ]
            },
            "minVersion": 1,
            "path": "AudioStation/web_player.cgi"
        },
        "SYNO.AudioStation.Browse.Playlist": {
            "lib": "/var/packages/AudioStation/target/webapi5/browse/SYNO.AudioStation.Browse.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "add_track"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.AudioStation.Pin": {
            "lib": "/var/packages/AudioStation/target/webapi5/pin/SYNO.AudioStation.Pin.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "pin",
                    "rename",
                    "reorder",
                    "unpin"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.AudioStation.Tag": {
            "lib": "/var/packages/AudioStation/target/webapi5/tag/SYNO.AudioStation.Tag.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "getinfo",
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.AudioStation.VoiceAssistant.Browse": {
            "lib": "/var/packages/AudioStation/target/webapi5/voice_assistant/SYNO.AudioStation.VoiceAssistant.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "count_search",
                    "get_cover",
                    "get_playlist",
                    "search",
                    "search_playlist"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.AudioStation.VoiceAssistant.Challenge": {
            "lib": "/var/packages/AudioStation/target/webapi5/voice_assistant/SYNO.AudioStation.VoiceAssistant.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.AudioStation.VoiceAssistant.Info": {
            "lib": "/var/packages/AudioStation/target/webapi5/voice_assistant/SYNO.AudioStation.VoiceAssistant.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.AudioStation.VoiceAssistant.Stream": {
            "lib": "/var/packages/AudioStation/target/webapi5/voice_assistant/SYNO.AudioStation.VoiceAssistant.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "stream",
                    "transcode"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        }
    },
    "SYNO.Auth": {
        "SYNO.Auth.ForgotPwd": {
            "lib": "lib/SYNO.Auth.ForgotPwd.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "send",
                    "reset"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Auth.RescueEmail": {
            "lib": "/usr/syno/synoman/webapi/lib/SYNO.Auth.RescueEmail.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "verify",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        }
    },
    "SYNO.Backup": {
        "SYNO.Backup.App": {
            "lib": "lib/SYNO.Backup.App.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get_icon"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Backup.App.Backup": {
            "lib": "lib/SYNO.Backup.App.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "mysql_check",
                    "surveillance_check"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Backup.App.Restore": {
            "lib": "lib/SYNO.Backup.App.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "mysql_check",
                    "surveillance_check"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Backup.Config.AutoBackup": {
            "lib": "lib/SYNO.Backup.Config.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "set",
                    "get",
                    "backup",
                    "list",
                    "restore",
                    "get_meta",
                    "download_private_key",
                    "upload_private_key",
                    "status"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Backup.Config.Backup": {
            "lib": "lib/SYNO.Backup.Config.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list",
                    "start",
                    "status",
                    "download"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Backup.Config.Restore": {
            "lib": "lib/SYNO.Backup.Config.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "upload",
                    "list",
                    "delete",
                    "list_conflict",
                    "check",
                    "start",
                    "status"
                ],
                "2": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Backup.Service.NetworkBackup": {
            "lib": "lib/SYNO.Core.FileServ.Rsync.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Backup.Storage.AmazonCloudDrive.Container": {
            "lib": "/var/packages/HyperBackup/target/webapi/SYNO.Backup.Storage.AmazonCloudDrive.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list",
                    "create"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Backup.Storage.Azure.Container": {
            "lib": "/var/packages/HyperBackup/target/webapi/SYNO.Backup.Storage.Azure.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list",
                    "create"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Backup.Storage.Dropbox.Container": {
            "lib": "/var/packages/HyperBackup/target/webapi/SYNO.Backup.Storage.Dropbox.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list",
                    "create"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Backup.Storage.GoogleDrive.Container": {
            "lib": "/var/packages/HyperBackup/target/webapi/SYNO.Backup.Storage.GoogleDrive.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list",
                    "create"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Backup.Storage.HiDrive.Container": {
            "lib": "/var/packages/HyperBackup/target/webapi/SYNO.Backup.Storage.HiDrive.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list",
                    "create"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Backup.Storage.OpenStack.Container": {
            "lib": "/var/packages/HyperBackup/target/webapi/SYNO.Backup.Storage.OpenStack.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list",
                    "create"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Backup.Storage.OpenStack.Region": {
            "lib": "/var/packages/HyperBackup/target/webapi/SYNO.Backup.Storage.OpenStack.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Backup.Storage.S3.Bucket": {
            "lib": "/var/packages/HyperBackup/target/webapi/SYNO.Backup.Storage.S3.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list",
                    "create"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Backup.Storage.WebDAV.Container": {
            "lib": "/var/packages/HyperBackup/target/webapi/SYNO.Backup.Storage.WebDAV.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list",
                    "create"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Backup.Storage.hubiC.Container": {
            "lib": "/var/packages/HyperBackup/target/webapi/SYNO.Backup.Storage.hubiC.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list",
                    "create"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Backup.App2.Backup": {
            "lib": "/var/packages/HyperBackup/target/webapi/SYNO.Backup.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "get"
                ],
                "2": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Backup.App2.Restore": {
            "lib": "/var/packages/HyperBackup/target/webapi/SYNO.Backup.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list_install"
                ],
                "2": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Backup.Lunbackup": {
            "lib": "/var/packages/HyperBackup/target/webapi/SYNO.Backup.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "apply_lun",
                    "restore_lun",
                    "enum_lun",
                    "check_dir",
                    "check_lun",
                    "test_connections",
                    "enum_remote_share",
                    "remote_version_check",
                    "enum_local_lun_dir",
                    "enum_net_lun_dir",
                    "enum_local_restore_lun_name",
                    "enum_net_restore_lun_name",
                    "load_lun_bkp_conf",
                    "get_self_host",
                    "is_bkp_set_conflict",
                    "get_local_dest_dir",
                    "enum_local_bkp_dest",
                    "net_bkp_host",
                    "load_default_adv_schedule",
                    "get_remote_dest_dir",
                    "enum_local_share",
                    "enum_volume",
                    "load_schedule",
                    "delete",
                    "bkpnow",
                    "cancel",
                    "restore_cancel",
                    "load_task",
                    "load_restore_progress",
                    "load_dest_status",
                    "do_cksum",
                    "get_cksum_status"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Backup.Repository": {
            "lib": "/var/packages/HyperBackup/target/webapi/SYNO.Backup.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list",
                    "delete",
                    "create",
                    "get",
                    "set",
                    "find",
                    "mount_fireball"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Backup.Repository.Certificate": {
            "lib": "/var/packages/HyperBackup/target/webapi/SYNO.Backup.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "verify",
                    "ignore"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Backup.Repository.LoginPort": {
            "lib": "/var/packages/HyperBackup/target/webapi/SYNO.Backup.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Backup.Restore": {
            "lib": "/var/packages/HyperBackup/target/webapi/SYNO.Backup.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "cancel",
                    "status"
                ],
                "2": [
                    "restore"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Backup.Share.Restore": {
            "lib": "/var/packages/HyperBackup/target/webapi/SYNO.Backup.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Backup.Source.Folder": {
            "lib": "/var/packages/HyperBackup/target/webapi/SYNO.Backup.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Backup.Storage.Connect.Network": {
            "lib": "/var/packages/HyperBackup/target/webapi/SYNO.Backup.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Backup.Storage.Share.Local": {
            "lib": "/var/packages/HyperBackup/target/webapi/SYNO.Backup.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Backup.Storage.Share.Network": {
            "lib": "/var/packages/HyperBackup/target/webapi/SYNO.Backup.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Backup.Storage.Share.Rsync": {
            "lib": "/var/packages/HyperBackup/target/webapi/SYNO.Backup.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Backup.Target": {
            "lib": "/var/packages/HyperBackup/target/webapi/SYNO.Backup.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "create",
                    "delete",
                    "set",
                    "list",
                    "get_candidate_dir",
                    "get",
                    "get_ai_info",
                    "private_key_download_by_password",
                    "create_cache",
                    "error_detect",
                    "error_detect_cancel",
                    "status",
                    "damage_report_download",
                    "ip_lookup"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Backup.Target.Config": {
            "lib": "/var/packages/HyperBackup/target/webapi/SYNO.Backup.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Backup.Task": {
            "lib": "/var/packages/HyperBackup/target/webapi/SYNO.Backup.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list",
                    "delete",
                    "backup",
                    "resume",
                    "cancel",
                    "suspend",
                    "discard",
                    "cancel_and_discard",
                    "create",
                    "relink",
                    "import",
                    "reauth",
                    "set",
                    "status",
                    "get",
                    "mark",
                    "get_support_cloud",
                    "correct_synorbd",
                    "get_current_dsm_storage_layout"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Backup.Version": {
            "lib": "/var/packages/HyperBackup/target/webapi/SYNO.Backup.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "lock",
                    "delete",
                    "list_folder",
                    "summary",
                    "rotate",
                    "detail"
                ],
                "2": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Backup.Version.History": {
            "lib": "/var/packages/HyperBackup/target/webapi/SYNO.Backup.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        }
    },
    "SYNO.C2FS": {
        "SYNO.C2FS.Account": {
            "lib": "HybridShare/SYNO.C2FS.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "fetch_info"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.C2FS.Bucket": {
            "lib": "HybridShare/SYNO.C2FS.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "ask_account",
                    "password_key_export",
                    "get_account_mount",
                    "decrypt",
                    "encrypt"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.C2FS.Conf": {
            "lib": "HybridShare/SYNO.C2FS.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "confbackup_import",
                    "confbackup_export"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.C2FS.File": {
            "lib": "HybridShare/SYNO.C2FS.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "evict",
                    "pin",
                    "get_cache_status",
                    "get_local_status"
                ],
                "2": [
                    "evict"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.C2FS.Share": {
            "lib": "HybridShare/SYNO.C2FS.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list_accessible",
                    "set_permission",
                    "stop_daemons",
                    "start_daemons",
                    "restart_daemons",
                    "set",
                    "validate_set",
                    "unmount",
                    "mount",
                    "remount",
                    "validate_delete",
                    "delete",
                    "list",
                    "create",
                    "reauth"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.C2FS.Share.Status": {
            "lib": "HybridShare/SYNO.C2FS.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "is_connected_to_server"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.C2FS.Snapshot": {
            "lib": "HybridShare/SYNO.C2FS.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "add"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.C2FS.Transform": {
            "lib": "HybridShare/SYNO.C2FS.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "re_add_progress",
                    "list_progress",
                    "export_invalid_files",
                    "cancel",
                    "transform_to_c2share",
                    "validate_for_service",
                    "get_progress"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.C2FS.Utils": {
            "lib": "HybridShare/SYNO.C2FS.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "file_dup",
                    "load_global_config",
                    "get_ds_info",
                    "get_share_quota_status",
                    "get_share_space_usage",
                    "check_ntp_enable"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        }
    },
    "SYNO.Cal": {
        "SYNO.Cal.AuthForeign": {
            "lib": "/var/packages/Calendar/target/webapi/SYNO.Cal.AuthForeign.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "create",
                    "delete",
                    "list",
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Cal.Cal": {
            "lib": "/var/packages/Calendar/target/webapi/SYNO.Cal.Cal.so",
            "maxVersion": 5,
            "methods": {
                "1": [
                    "export",
                    "import",
                    "create",
                    "delete",
                    "list",
                    "get",
                    "set"
                ],
                "2": [
                    "create",
                    "list"
                ],
                "5": [
                    "create",
                    "set",
                    "delete",
                    "list",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Cal.Chatbot": {
            "lib": "/var/packages/Calendar/target/webapi/SYNO.Cal.Chatbot.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "receive",
                    "send",
                    "cancel"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Cal.Contact": {
            "lib": "/var/packages/Calendar/target/webapi/SYNO.Cal.Contact.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "get_user_info",
                    "notify_update_contact",
                    "notify_reset_contact"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Cal.Event": {
            "lib": "/var/packages/Calendar/target/webapi/SYNO.Cal.Event.so",
            "maxVersion": 5,
            "methods": {
                "1": [
                    "create_by_ics",
                    "search",
                    "list",
                    "get",
                    "set",
                    "create",
                    "create_simple",
                    "delete",
                    "reply"
                ],
                "2": [
                    "set",
                    "set_attach",
                    "create",
                    "list",
                    "get"
                ],
                "3": [
                    "set",
                    "set_attach",
                    "create",
                    "list",
                    "get"
                ],
                "4": [
                    "list",
                    "get"
                ],
                "5": [
                    "create",
                    "set",
                    "subevent_set",
                    "invite_event_set",
                    "invite_subevent_set",
                    "delete",
                    "list",
                    "get",
                    "set_exdate",
                    "set_personal_property"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Cal.InviteMail": {
            "lib": "/var/packages/Calendar/target/webapi/SYNO.Cal.InviteMail.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "reply"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Cal.InviteMailInit": {
            "lib": "/var/packages/Calendar/target/webapi/SYNO.Cal.InviteMailInit.so",
            "maxVersion": 5,
            "methods": {
                "1": [
                    "token",
                    "tokens"
                ],
                "5": [
                    "token",
                    "tokens"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Cal.Proxy": {
            "lib": "/var/packages/Calendar/target/webapi/SYNO.Cal.Proxy.so",
            "maxVersion": 5,
            "methods": {
                "1": [
                    "cal_list",
                    "task_create",
                    "task_create_ics",
                    "task_list",
                    "task_update"
                ],
                "5": [
                    "jitsi_list",
                    "jitsi",
                    "set_config",
                    "get_config"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Cal.SendMail": {
            "lib": "/var/packages/Calendar/target/webapi/SYNO.Cal.SendMail.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "send_cancel"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Cal.Setting": {
            "lib": "/var/packages/Calendar/target/webapi/SYNO.Cal.Setting.so",
            "maxVersion": 5,
            "methods": {
                "1": [
                    "list",
                    "set",
                    "get"
                ],
                "2": [
                    "list",
                    "set",
                    "get"
                ],
                "5": [
                    "list",
                    "set",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Cal.Share.Priv": {
            "lib": "/var/packages/Calendar/target/webapi/SYNO.Cal.Share.Priv.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Cal.Sharing": {
            "lib": "/var/packages/Calendar/target/webapi/SYNO.Cal.Sharing.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Cal.SyncUser": {
            "lib": "/var/packages/Calendar/target/webapi/SYNO.Cal.SyncUser.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "sync",
                    "convert_fake_email",
                    "check_convert_fake_email_status",
                    "has_converted_fake_email"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Cal.Timezone": {
            "lib": "/var/packages/Calendar/target/webapi/SYNO.Cal.Timezone.so",
            "maxVersion": 5,
            "methods": {
                "1": [
                    "list"
                ],
                "2": [
                    "list"
                ],
                "5": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Cal.Todo": {
            "lib": "/var/packages/Calendar/target/webapi/SYNO.Cal.Todo.so",
            "maxVersion": 5,
            "methods": {
                "1": [
                    "search",
                    "list",
                    "get",
                    "set",
                    "create",
                    "delete",
                    "set_order",
                    "list_count",
                    "count_todo",
                    "clean_complete"
                ],
                "5": [
                    "list",
                    "get",
                    "set",
                    "create",
                    "delete",
                    "count_todo"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Cal.UserAction": {
            "lib": "/var/packages/Calendar/target/webapi/SYNO.Cal.UserAction.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        }
    },
    "SYNO.CloudSync": {
        "SYNO.CloudSync": {
            "lib": "/var/packages/CloudSync/target/lib/SYNO.CloudSync.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "pause",
                    "resume",
                    "unlink_connection",
                    "unlink_session",
                    "get_available_clouds",
                    "get_property",
                    "get_config",
                    "set_global_config",
                    "set_personal_config",
                    "get_user_info",
                    "get_log",
                    "get_recently_change",
                    "get_oauth_info",
                    "get_connection_setting",
                    "get_session_setting",
                    "get_selective_folder_list",
                    "get_selective_folder_list_wizard",
                    "get_selective_sync_config",
                    "get_default_selective_sync_config",
                    "re_auth",
                    "re_oauth",
                    "test_connection_s3",
                    "test_connection_b2",
                    "test_connection_openstack",
                    "test_connection_webdav",
                    "test_connection_gcs",
                    "test_connection_acs",
                    "test_task_setting",
                    "set_connection_setting",
                    "set_schedule_setting",
                    "set_session_setting",
                    "set_selective_sync_config",
                    "list_conn",
                    "list_sess",
                    "list_s3_bucket",
                    "list_openstack_region",
                    "list_openstack_container",
                    "create_s3_bucket",
                    "list_gcs_bucket",
                    "create_gcs_bucket",
                    "list_gsd_drive",
                    "update_gsd_conn_info",
                    "list_b2_bucket",
                    "list_share_point_sites",
                    "list_share_point_drives",
                    "create_b2_bucket",
                    "list_acs_container",
                    "create_acs_container",
                    "create_openstack_container",
                    "create_link",
                    "create_session",
                    "export_key",
                    "export_key_by_name",
                    "check_server_ever_encrypted",
                    "get_conn_auth_info",
                    "get_server_folder_list",
                    "create_server_folder",
                    "request_onedrive_access_token",
                    "dump_event_tree",
                    "megadisk_request_code",
                    "megadisk_confirm_code"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        }
    },
    "SYNO.Contacts": {
        "SYNO.Contacts.Addressbook": {
            "lib": "/var/packages/Contacts/target/webapi/SYNO.Contacts.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "copy_member",
                    "create",
                    "delete",
                    "export",
                    "get",
                    "import",
                    "import_preview",
                    "list",
                    "list_principal",
                    "move_member",
                    "set",
                    "set_addressbook_display",
                    "share_addressbook"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Contacts.AdminSetting": {
            "lib": "/var/packages/Contacts/target/webapi/SYNO.Contacts.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "migrate",
                    "set",
                    "set_sharing"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Contacts.Contact": {
            "lib": "/var/packages/Contacts/target/webapi/SYNO.Contacts.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "create",
                    "delete",
                    "export",
                    "get",
                    "get_photo",
                    "list",
                    "list_group",
                    "list_team_contact",
                    "set",
                    "toggle_group",
                    "toggle_member",
                    "toggle_person",
                    "update_usage_frequency"
                ],
                "2": [
                    "create",
                    "delete",
                    "export",
                    "get_photo",
                    "get",
                    "list",
                    "list_group",
                    "list_team_contact",
                    "set",
                    "toggle_group",
                    "toggle_member",
                    "toggle_person",
                    "update_usage_frequency"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Contacts.ExternalSource": {
            "lib": "/var/packages/Contacts/target/webapi/SYNO.Contacts.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "create",
                    "create_carddav",
                    "get",
                    "list",
                    "refresh",
                    "set",
                    "set_carddav"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Contacts.Info": {
            "lib": "/var/packages/Contacts/target/webapi/SYNO.Contacts.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "get",
                    "get_timezone"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Contacts.Label": {
            "lib": "/var/packages/Contacts/target/webapi/SYNO.Contacts.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "add_member",
                    "create",
                    "delete",
                    "export",
                    "list",
                    "remove_member",
                    "set"
                ],
                "2": [
                    "add_member",
                    "create",
                    "delete",
                    "export",
                    "list",
                    "remove_member",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Contacts.OU": {
            "lib": "/var/packages/Contacts/target/webapi/SYNO.Contacts.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        }
    },
    "SYNO.Core": {
        "SYNO.Core.ACL": {
            "lib": "lib/SYNO.Core.ACL.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "get",
                    "set",
                    "status",
                    "stop",
                    "list_owners",
                    "inspect",
                    "check_admin",
                    "check_self_denied",
                    "get_ui_info",
                    "get_bypass_traverse",
                    "set_bypass_traverse",
                    "validate_set_bypass_traverse"
                ],
                "2": [
                    "list_owners"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.ActionPriv": {
            "lib": "lib/SYNO.Core.ActionPriv.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set",
                    "preview",
                    "export"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.ActionPriv.Role": {
            "lib": "lib/SYNO.Core.ActionPriv.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.AppNotify": {
            "lib": "lib/SYNO.Core.AppNotify.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "view",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.AppPortal": {
            "lib": "lib/SYNO.Core.AppPortal.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "get",
                    "set",
                    "list"
                ],
                "2": [
                    "get",
                    "set",
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.AppPortal.AccessControl": {
            "lib": "lib/SYNO.Core.AppPortal.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "create",
                    "list",
                    "update",
                    "delete"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.AppPortal.Config": {
            "lib": "lib/SYNO.Core.AppPortal.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.AppPortal.ReverseProxy": {
            "lib": "lib/SYNO.Core.AppPortal.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "create",
                    "list",
                    "update",
                    "delete"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.AppPriv": {
            "lib": "lib/SYNO.Core.AppPriv.so",
            "maxVersion": 2,
            "methods": {
                "1": [],
                "2": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.AppPriv.App": {
            "lib": "lib/SYNO.Core.AppPriv.so",
            "maxVersion": 3,
            "methods": {
                "1": [],
                "2": [
                    "preview",
                    "allowed",
                    "list"
                ],
                "3": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.AppPriv.Rule": {
            "lib": "lib/SYNO.Core.AppPriv.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set",
                    "delete",
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.BackgroundTask": {
            "lib": "/usr/syno/synoman/webapi/lib/SYNO.Core.BackgroundTask.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Backup.ED": {
            "lib": "lib/SYNO.Core.Backup.ED.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "ensure_package_installed_and_started"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.BandwidthControl": {
            "lib": "lib/SYNO.Core.BandwidthControl.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list",
                    "get",
                    "set"
                ],
                "2": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.BandwidthControl.Protocol": {
            "lib": "lib/SYNO.Core.BandwidthControl.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.BandwidthControl.Status": {
            "lib": "lib/SYNO.Core.BandwidthControl.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "delete"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.CMS.Cache": {
            "lib": "lib/webapi_cache_client.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "push",
                    "reset"
                ],
                "2": [
                    "push"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.CMS.Policy": {
            "lib": "lib/webapi_gpo_client.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "fetch"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.CMS.Info": {
            "lib": "lib/SYNO.Core.CMS.Info.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.CMS": {
            "lib": "lib/SYNO.Core.CMS.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "begin_join",
                    "end_join",
                    "disjoin"
                ],
                "2": [
                    "begin_join",
                    "end_join",
                    "disjoin"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.CMS.ServerInfo": {
            "lib": "lib/SYNO.Core.CMS.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "update"
                ],
                "2": [
                    "update"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.CMS.Task": {
            "lib": "lib/SYNO.Core.CMS.Task.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "create",
                    "query"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.CMS.Token": {
            "lib": "lib/SYNO.Core.CMS.Token.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "update",
                    "check",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.CMS.Identity": {
            "lib": "lib/SYNO.Core.CMS.Identity.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "check"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Certificate": {
            "lib": "lib/SYNO.Core.Certificate.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "export",
                    "import",
                    "reset"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Certificate.CRT": {
            "lib": "lib/SYNO.Core.Certificate.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "create",
                    "recreate",
                    "set",
                    "delete",
                    "list",
                    "renew"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Certificate.CSR": {
            "lib": "lib/SYNO.Core.Certificate.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "create",
                    "renew",
                    "sign"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Certificate.LetsEncrypt": {
            "lib": "lib/SYNO.Core.Certificate.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "create",
                    "renew"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Certificate.LetsEncrypt.Account": {
            "lib": "lib/SYNO.Core.Certificate.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Certificate.Service": {
            "lib": "lib/SYNO.Core.Certificate.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Certificate.Tencent": {
            "lib": "lib/SYNO.Core.Certificate.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "create",
                    "renew"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.CurrentConnection": {
            "lib": "lib/libwebapi-CurrentConnection.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "list",
                    "list_by_user",
                    "kick_connection",
                    "disable_user",
                    "kick_self",
                    "download"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.DDNS.Ethernet": {
            "lib": "lib/SYNO.Core.DDNS.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.DDNS.ExtIP": {
            "lib": "lib/SYNO.Core.DDNS.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list"
                ],
                "2": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.DDNS.Provider": {
            "lib": "lib/SYNO.Core.DDNS.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "delete",
                    "set",
                    "update_customized_provider"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.DDNS.Record": {
            "lib": "lib/SYNO.Core.DDNS.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "update_ip_address",
                    "create",
                    "delete",
                    "set",
                    "test"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.DDNS.Synology": {
            "lib": "lib/SYNO.Core.DDNS.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "register_hostname",
                    "send_verified_mail",
                    "list_domain",
                    "get_hostname",
                    "get_myds_account"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.DDNS.TWNIC": {
            "lib": "lib/SYNO.Core.DDNS.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "register_hostname"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.DSMNotify": {
            "lib": "/usr/syno/synoman/webapi/lib/SYNO.Core.DSMNotify.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "notify"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.DSMNotify.MailContent": {
            "lib": "/usr/syno/synoman/webapi/lib/SYNO.Core.DSMNotify.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.DSMNotify.Strings": {
            "lib": "/usr/syno/synoman/webapi/lib/SYNO.Core.DSMNotify.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.DataCollect": {
            "lib": "lib/libwebapi-DataCollect.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.DataCollect.Application": {
            "lib": "lib/libwebapi-DataCollect.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "record"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Desktop.Defs": {
            "lib": "lib/SYNO.Core.Desktop.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "getjs"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Desktop.Initdata": {
            "lib": "lib/SYNO.Core.Desktop.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get_user_lang",
                    "get_user_service",
                    "get_ui_config",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Desktop.JSUIString": {
            "lib": "lib/SYNO.Core.Desktop.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "getjs"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Desktop.PersonalUpdater": {
            "lib": "lib/SYNO.Core.Desktop.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get_update_progress",
                    "need_update",
                    "get_current_job",
                    "start"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Desktop.SessionData": {
            "lib": "lib/SYNO.Core.Desktop.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "getjs",
                    "getjs_mobile",
                    "getjs_forgotpass"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Desktop.Timeout": {
            "lib": "lib/SYNO.Core.Desktop.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "check",
                    "get",
                    "reset"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Desktop.UIString": {
            "lib": "lib/SYNO.Core.Desktop.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "getjs"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Desktop.Upgrade": {
            "lib": "lib/SYNO.Core.Desktop.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get_pgsql",
                    "done"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Directory.Azure.SSO": {
            "lib": "lib/SYNO.Core.Directory.SSO.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Directory.Domain": {
            "lib": "/var/packages/SMBService/target/usr/syno/synoman/webapi/lib/SYNO.Core.Directory.Domain.so",
            "maxVersion": 3,
            "methods": {
                "1": [
                    "set",
                    "set_status",
                    "set_stop",
                    "get",
                    "sync_time",
                    "test_dc",
                    "get_domain_list",
                    "update_start",
                    "update_status",
                    "update_stop",
                    "join_check",
                    "leave_check",
                    "set_password",
                    "list_candidate_ou",
                    "check_is_rodc",
                    "get_db_status",
                    "sync_db"
                ],
                "2": [
                    "set",
                    "get_domain_list"
                ],
                "3": [
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Directory.Domain.Conf": {
            "lib": "/var/packages/SMBService/target/usr/syno/synoman/webapi/lib/SYNO.Core.Directory.Domain.so",
            "maxVersion": 3,
            "methods": {
                "1": [
                    "set",
                    "get"
                ],
                "2": [
                    "set",
                    "get"
                ],
                "3": [
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Directory.Domain.Schedule": {
            "lib": "/var/packages/SMBService/target/usr/syno/synoman/webapi/lib/SYNO.Core.Directory.Domain.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "set",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Directory.Domain.Trust": {
            "lib": "/var/packages/SMBService/target/usr/syno/synoman/webapi/lib/SYNO.Core.Directory.Domain.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set",
                    "list",
                    "set_allow_domain"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Directory.LDAP": {
            "lib": "lib/SYNO.Core.Directory.LDAP.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "get",
                    "set",
                    "upload_certificate",
                    "refresh",
                    "password",
                    "bind_check",
                    "unbind_check"
                ],
                "2": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Directory.LDAP.BaseDN": {
            "lib": "lib/SYNO.Core.Directory.LDAP.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list"
                ],
                "2": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Directory.LDAP.Login.Notify": {
            "lib": "lib/SYNO.Core.Directory.LDAP.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "check"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Directory.LDAP.Profile": {
            "lib": "lib/SYNO.Core.Directory.LDAP.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list",
                    "get",
                    "set"
                ],
                "2": [
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Directory.LDAP.Refresh": {
            "lib": "lib/SYNO.Core.Directory.LDAP.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "start",
                    "get_status"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Directory.LDAP.User": {
            "lib": "lib/SYNO.Core.Directory.LDAP.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "set_pwd"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Directory.OIDC.SSO": {
            "lib": "lib/SYNO.Core.Directory.SSO.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Directory.SSO.CAS": {
            "lib": "lib/SYNO.Core.Directory.SSO.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "set",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Directory.SSO.Profile": {
            "lib": "lib/SYNO.Core.Directory.SSO.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Directory.SSO.SAML": {
            "lib": "lib/SYNO.Core.Directory.SSO.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "set",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Directory.SSO.SAML.Metadata": {
            "lib": "lib/SYNO.Core.Directory.SSO.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "import"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Directory.SSO.SAML.Status": {
            "lib": "lib/SYNO.Core.Directory.SSO.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Directory.SSO": {
            "lib": "lib/SYNO.Core.Directory.SSO.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "get",
                    "set",
                    "register"
                ],
                "2": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Directory.SSO.IWA": {
            "lib": "lib/SYNO.Core.Directory.SSO.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "set",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Directory.SSO.Setting": {
            "lib": "lib/SYNO.Core.Directory.SSO.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Directory.SSO.Status": {
            "lib": "lib/SYNO.Core.Directory.SSO.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Directory.SSO.utils": {
            "lib": "lib/SYNO.Core.Directory.SSO.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "exchange"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Directory.WebSphere.SSO": {
            "lib": "lib/SYNO.Core.Directory.SSO.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.DirectoryServiceCheck.Common": {
            "lib": "lib/SYNO.Core.DirectoryServiceCheck.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "get_stages",
                    "get_last_test",
                    "set_last_test",
                    "test_dns_valid",
                    "test_dns_record",
                    "test_srv_target",
                    "test_srv_target_post",
                    "set_dns",
                    "test_mtu",
                    "test_port",
                    "test_port_by_domain",
                    "test_nas_ip_conflict",
                    "test_ip_conflict",
                    "test_hostname_conflict"
                ],
                "2": [
                    "test_mtu",
                    "test_ip_conflict"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.DirectoryServiceCheck.Debug": {
            "lib": "lib/SYNO.Core.DirectoryServiceCheck.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "generate_issue"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.DirectoryServiceCheck.Domain": {
            "lib": "lib/SYNO.Core.DirectoryServiceCheck.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "check_server_address",
                    "prepare_test_ip"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.DirectoryServiceCheck.DomainJoin": {
            "lib": "lib/SYNO.Core.DirectoryServiceCheck.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "join_domain",
                    "set_join_env",
                    "set_ntp",
                    "init_pre_join",
                    "gen_join_conf",
                    "record_smb_gpo"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.DirectoryServiceCheck.DomainService": {
            "lib": "lib/SYNO.Core.DirectoryServiceCheck.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "init_pre_service",
                    "sync_dc_time",
                    "test_kinit",
                    "check_rodc",
                    "test_smb_auth",
                    "test_smb_auth_local",
                    "test_ldap_auth",
                    "check_computer_account"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.DirectoryServiceCheck.DomainValidation": {
            "lib": "lib/SYNO.Core.DirectoryServiceCheck.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "check_essential_spn",
                    "check_duplicate_spn",
                    "check_gpo",
                    "check_machine_conflict",
                    "check_machine_password",
                    "check_time_sync",
                    "check_winbind_alive",
                    "check_smb_conf",
                    "check_domain_files",
                    "check_dc_connection",
                    "check_winbind_get",
                    "check_userget",
                    "check_trust_direction",
                    "check_trustrpc"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.DirectoryServiceCheck.LDAP": {
            "lib": "lib/SYNO.Core.DirectoryServiceCheck.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "check_member_attr",
                    "check_server_address",
                    "check_auth_info",
                    "check_profile",
                    "check_user_name_empty",
                    "check_user_name_dup",
                    "check_user_id_empty",
                    "check_user_id_type",
                    "check_user_id_dup",
                    "check_group_name_empty",
                    "check_group_name_dup",
                    "check_group_id_empty",
                    "check_group_id_type",
                    "check_group_id_dup",
                    "check_samba_schema",
                    "check_samba_ntpwd"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.DirectoryServiceCheck.Progress": {
            "lib": "lib/SYNO.Core.DirectoryServiceCheck.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "start_progress",
                    "update_progress",
                    "end_progress"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.DisableAdmin": {
            "lib": "lib/SYNO.Core.DisableAdmin.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "ignore"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.EW.Info": {
            "lib": "lib/SYNO.Core.EW.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.EventScheduler": {
            "lib": "lib/SYNO.Core.EventScheduler.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "list_relate",
                    "set_enable",
                    "delete",
                    "run",
                    "get",
                    "set",
                    "create",
                    "result_list",
                    "result_get_file",
                    "config_set",
                    "config_get",
                    "event_list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.EventScheduler.Root": {
            "lib": "lib/SYNO.Core.EventScheduler.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "set",
                    "create"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.ExternalDevice.Bluetooth": {
            "lib": "lib/libwebapi-Bluetooth.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list",
                    "get",
                    "set_discovery"
                ],
                "2": [
                    "list",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.ExternalDevice.Bluetooth.Device": {
            "lib": "lib/libwebapi-Bluetooth.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "create",
                    "delete"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.ExternalDevice.Bluetooth.Settings": {
            "lib": "lib/libwebapi-Bluetooth.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.ExternalDevice.DefaultPermission": {
            "lib": "lib/SYNO.Core.ExternalDevice.DefaultPermission.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.ExternalDevice.Printer": {
            "lib": "lib/SYNO.Core.ExternalDevice.Printer.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "print_test",
                    "clean"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.ExternalDevice.Printer.BonjourSharing": {
            "lib": "lib/SYNO.Core.ExternalDevice.Printer.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.ExternalDevice.Printer.Driver": {
            "lib": "lib/SYNO.Core.ExternalDevice.Printer.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.ExternalDevice.Printer.Network": {
            "lib": "lib/SYNO.Core.ExternalDevice.Printer.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "eject",
                    "get",
                    "set",
                    "create"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.ExternalDevice.Printer.Network.Host": {
            "lib": "lib/SYNO.Core.ExternalDevice.Printer.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.ExternalDevice.Printer.OAuth": {
            "lib": "lib/SYNO.Core.ExternalDevice.Printer.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set",
                    "revoke"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.ExternalDevice.Printer.USB": {
            "lib": "lib/SYNO.Core.ExternalDevice.Printer.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "eject",
                    "get",
                    "set",
                    "release_mfp"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.ExternalDevice.Storage.EUnit": {
            "lib": "lib/SYNO.Core.ExternalDevice.Storage.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.ExternalDevice.Storage.Setting": {
            "lib": "lib/SYNO.Core.ExternalDevice.Storage.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.ExternalDevice.Storage.USB": {
            "lib": "lib/SYNO.Core.ExternalDevice.Storage.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "format",
                    "eject"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.ExternalDevice.Storage.eSATA": {
            "lib": "lib/SYNO.Core.ExternalDevice.Storage.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "format",
                    "eject"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.ExternalDevice.UPS": {
            "lib": "lib/libwebapiups.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Factory.Config": {
            "lib": "lib/SYNO.Core.Factory.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "download"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Factory.Manutild": {
            "lib": "lib/SYNO.Core.Factory.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "set",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.File": {
            "lib": "lib/webapi_file.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "save",
                    "load",
                    "list",
                    "create"
                ],
                "2": [
                    "save",
                    "load",
                    "list",
                    "create"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.File.Thumbnail": {
            "lib": "lib/webapi_file.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.FileHandle": {
            "lib": "lib/SYNO.Core.FileHandle.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "export",
                    "kick",
                    "kickable_list",
                    "delete_db"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.FileServ.AFP": {
            "lib": "lib/SYNO.Core.FileServ.AFP.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "set",
                    "get"
                ],
                "2": [
                    "set",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.FileServ.FTP": {
            "lib": "lib/SYNO.Core.FileServ.FTP.so",
            "maxVersion": 3,
            "methods": {
                "1": [
                    "set",
                    "get"
                ],
                "2": [
                    "set",
                    "get"
                ],
                "3": [
                    "set",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.FileServ.FTP.ChrootUser": {
            "lib": "lib/SYNO.Core.FileServ.FTP.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list",
                    "delete",
                    "add"
                ],
                "2": [
                    "load",
                    "save"
                ]
            },
            "minVersion": 2,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.FileServ.FTP.SFTP": {
            "lib": "lib/SYNO.Core.FileServ.FTP.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "set",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.FileServ.FTP.Security": {
            "lib": "lib/SYNO.Core.FileServ.FTP.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "set",
                    "get",
                    "list_ftp_share"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.FileServ.NFS": {
            "lib": "lib/SYNO.Core.FileServ.NFS.so",
            "maxVersion": 3,
            "methods": {
                "1": [
                    "set",
                    "get"
                ],
                "2": [
                    "set",
                    "get"
                ],
                "3": [
                    "set",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.FileServ.NFS.AdvancedSetting": {
            "lib": "lib/SYNO.Core.FileServ.NFS.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "set",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.FileServ.NFS.ConfBackup": {
            "lib": "lib/SYNO.Core.FileServ.NFS.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get_conf",
                    "set_conf",
                    "get_rules",
                    "set_rules",
                    "get_idmap",
                    "set_idmap",
                    "remove_keytab"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.FileServ.NFS.IDMap": {
            "lib": "lib/SYNO.Core.FileServ.NFS.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "create",
                    "set",
                    "delete"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.FileServ.NFS.Kerberos": {
            "lib": "lib/SYNO.Core.FileServ.NFS.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "upload_key",
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.FileServ.NFS.SharePrivilege": {
            "lib": "lib/SYNO.Core.FileServ.NFS.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "load",
                    "save"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.FileServ.ReflinkCopy": {
            "lib": "lib/SYNO.Core.FileServ.ReflinkCopy.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "set",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.FileServ.Rsync.Account": {
            "lib": "lib/SYNO.Core.FileServ.Rsync.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "create",
                    "delete",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.FileServ.SMB": {
            "lib": "/var/packages/SMBService/target/usr/syno/synoman/webapi/lib/SYNO.Core.FileServ.SMB.so",
            "maxVersion": 3,
            "methods": {
                "1": [
                    "set",
                    "get",
                    "clean_cache"
                ],
                "2": [
                    "set",
                    "get",
                    "clean_cache"
                ],
                "3": [
                    "set",
                    "get",
                    "clean_cache"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.FileServ.SMB.ConfBackup": {
            "lib": "/var/packages/SMBService/target/usr/syno/synoman/webapi/lib/SYNO.Core.FileServ.SMB.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "import",
                    "get",
                    "export_extra",
                    "translate"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.FileServ.SMB.Control": {
            "lib": "/var/packages/SMBService/target/usr/syno/synoman/webapi/lib/SYNO.Core.FileServ.SMB.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "close_share",
                    "reload"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.FileServ.SMB.MSDFS": {
            "lib": "/var/packages/SMBService/target/usr/syno/synoman/webapi/lib/SYNO.Core.FileServ.SMB.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get_url",
                    "probe",
                    "dirsrv_auth",
                    "test_start",
                    "test_stop",
                    "test_status",
                    "set",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.FileServ.ServiceDiscovery.WSTransfer": {
            "lib": "/var/packages/SMBService/target/usr/syno/synoman/webapi/lib/SYNO.Core.FileServ.SMB.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "set",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.FileServ.ServiceDiscovery": {
            "lib": "lib/SYNO.Core.FileServ.ServiceDiscovery.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "set",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Findhost": {
            "lib": "lib/SYNO.Core.Findhost.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Group": {
            "lib": "lib/SYNO.Core.Group.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "get",
                    "set",
                    "delete",
                    "create",
                    "admin_check",
                    "export_prepare",
                    "export_prepare_status",
                    "export_prepare_stop",
                    "export"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Group.ExtraAdmin": {
            "lib": "lib/SYNO.Core.Group.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "set",
                    "get",
                    "add",
                    "delete"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Group.Member": {
            "lib": "lib/SYNO.Core.Group.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "add",
                    "remove",
                    "change",
                    "admin_check"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Group.ValidLocalAdmin": {
            "lib": "lib/SYNO.Core.Group.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.GroupSettings": {
            "lib": "lib/SYNO.Core.UserSettings.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "apply"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Hardware.BeepControl": {
            "lib": "lib/libHardware.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set",
                    "stop_beep"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Hardware.FanSpeed": {
            "lib": "lib/libHardware.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Hardware.Hibernation": {
            "lib": "lib/libHardware.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Hardware.LCM": {
            "lib": "lib/libHardware.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Hardware.Led.Brightness": {
            "lib": "lib/libHardware.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set",
                    "update",
                    "set_current_brightness",
                    "get_static_data"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Hardware.MemoryLayout": {
            "lib": "lib/libHardware.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Hardware.NeedReboot": {
            "lib": "lib/libHardware.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Hardware.OOBManagement": {
            "lib": "lib/libHardware.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set",
                    "update",
                    "list_blocked_ipv4",
                    "exec"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Hardware.PowerRecovery": {
            "lib": "lib/libHardware.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Hardware.PowerSchedule": {
            "lib": "lib/libHardware.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "load",
                    "save"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Hardware.RemoteFanStatus": {
            "lib": "lib/libHardware.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "update"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Hardware.SpectreMeltdown": {
            "lib": "lib/libHardware.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Hardware.VideoTranscoding": {
            "lib": "lib/libHardware.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Hardware.ZRAM": {
            "lib": "lib/libHardware.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Help": {
            "lib": "lib/SYNO.Core.Help.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get_tree",
                    "get_search_result",
                    "get_tutorial_tree",
                    "get_online_help_url"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.ISCSI.FCTarget": {
            "lib": "/var/packages/ScsiTarget/target/lib/libsynoiscsiep.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "get",
                    "set",
                    "enable",
                    "disable",
                    "map_lun",
                    "unmap_lun"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.ISCSI.Host": {
            "lib": "/var/packages/ScsiTarget/target/lib/libsynoiscsiep.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "create",
                    "delete",
                    "list",
                    "get",
                    "set",
                    "map_initiator",
                    "unmap_initiator",
                    "lun_acl_masks_set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.ISCSI.LUN": {
            "lib": "/var/packages/ScsiTarget/target/lib/libsynoiscsiep.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "create",
                    "create_feasibility_check",
                    "delete",
                    "list",
                    "get",
                    "set",
                    "clone",
                    "map_target",
                    "unmap_target",
                    "map_fctarget",
                    "unmap_fctarget",
                    "load_lun",
                    "unload_lun",
                    "take_snapshot",
                    "stop_snapshot",
                    "delete_snapshot",
                    "list_snapshot",
                    "get_snapshot",
                    "set_snapshot",
                    "set_sched_snapshot",
                    "restore_snapshot",
                    "clone_snapshot",
                    "lock_snapshot",
                    "unlock_snapshot",
                    "export_to_file",
                    "export",
                    "import",
                    "export_cancel",
                    "import_cancel",
                    "load_snapshot",
                    "unload_snapshot",
                    "map_vhost",
                    "unmap_vhost",
                    "loop_mount",
                    "loop_unmount",
                    "retry_stop",
                    "set_whitelist",
                    "stop_clone",
                    "test_cloneability",
                    "defrag",
                    "stop_defrag",
                    "top",
                    "acl_masks_add",
                    "acl_masks_set",
                    "acl_masks_remove",
                    "host_acl_masks_set",
                    "lun_type_translate",
                    "thick_lun_warn_size_get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.ISCSI.Lunbkp": {
            "lib": "/var/packages/ScsiTarget/target/lib/libsynoiscsiep.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "backuplun_move",
                    "target_connect",
                    "target_disconnect",
                    "lunbackup_start",
                    "lunbackup_stop",
                    "lunrestore_start",
                    "lunrestore_stop",
                    "lunbkp_progress_get",
                    "lunbkp_bitmap_reset",
                    "lunbkp_size_get",
                    "get",
                    "set",
                    "remove",
                    "lun_limit_check",
                    "trg_limit_check",
                    "uuid_get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.ISCSI.Node": {
            "lib": "/var/packages/ScsiTarget/target/lib/libsynoiscsiep.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "create",
                    "delete",
                    "list",
                    "get",
                    "set",
                    "add_node",
                    "delete_node",
                    "create_session",
                    "delete_session",
                    "log_list",
                    "log_clear",
                    "log_export",
                    "welcome_set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.ISCSI.Replication": {
            "lib": "/var/packages/ScsiTarget/target/lib/libsynoiscsiep.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "create",
                    "delete",
                    "list",
                    "get",
                    "set",
                    "send_snapshot",
                    "stop_sending",
                    "promote",
                    "demote",
                    "compute_unsync_size",
                    "get_unsync_size",
                    "check_node",
                    "create_task",
                    "delete_task",
                    "get_base_version",
                    "get_token",
                    "clean_token"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.ISCSI.Target": {
            "lib": "/var/packages/ScsiTarget/target/lib/libsynoiscsiep.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "create",
                    "create_default_target",
                    "create_feasibility_check",
                    "delete",
                    "list",
                    "get",
                    "set",
                    "enable",
                    "disable",
                    "map_lun",
                    "unmap_lun",
                    "acl_masks_set",
                    "acl_masks_add",
                    "acl_masks_remove",
                    "network_portals_add",
                    "network_portals_remove"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.ISCSI.VMware": {
            "lib": "/var/packages/ScsiTarget/target/lib/libsynoiscsiep.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "register",
                    "deregister",
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.MediaIndexing": {
            "lib": "lib/mediaindexing.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "status",
                    "reindex"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.MediaIndexing.IndexFolder": {
            "lib": "lib/mediaindexing-indexfolder.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.MediaIndexing.MediaConverter": {
            "lib": "lib/mediaindexing-mediaconverter.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "status",
                    "pause",
                    "resume"
                ],
                "2": [
                    "status",
                    "pause",
                    "resume"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.MediaIndexing.Scheduler": {
            "lib": "lib/mediaindexing-scheduler.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.MediaIndexing.ThumbnailQuality": {
            "lib": "lib/mediaindexing.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.MyDSCenter": {
            "lib": "lib/mydscenter.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "register"
                ],
                "2": [
                    "login",
                    "login_by_key",
                    "logout",
                    "register",
                    "query",
                    "get_iframe_info",
                    "handle_apikey_error",
                    "oauth_login"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.MyDSCenter.Account": {
            "lib": "lib/mydscenter.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.MyDSCenter.Login": {
            "lib": "lib/mydscenter.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "login",
                    "authkey_login",
                    "oauth_login",
                    "pkce_config_get",
                    "pkce_login"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.MyDSCenter.Logout": {
            "lib": "lib/mydscenter.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "pkce_logout"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.MyDSCenter.Purchase": {
            "lib": "lib/mydscenter.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Network.TrafficControl.RouterRules": {
            "lib": "lib/SYNO.Core.Network.TrafficControl.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "load",
                    "save"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Network.TrafficControl.Rules": {
            "lib": "lib/SYNO.Core.Network.TrafficControl.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "load",
                    "save"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Network": {
            "lib": "lib/libwebapi-Network.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "get",
                    "set",
                    "test_internet"
                ],
                "2": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Network.Authentication": {
            "lib": "lib/libwebapi-Authentication.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set",
                    "test"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Network.Authentication.Cert": {
            "lib": "lib/libwebapi-Authentication.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "upload",
                    "delete"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Network.Bond": {
            "lib": "lib/libwebapi-Bond.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "get",
                    "set",
                    "list",
                    "create",
                    "delete",
                    "set_mode",
                    "create_check",
                    "delete_check"
                ],
                "2": [
                    "get",
                    "set",
                    "list",
                    "create",
                    "delete",
                    "set_mode",
                    "create_check",
                    "delete_check"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Network.Ethernet": {
            "lib": "lib/libwebapi-Ethernet.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "get",
                    "list",
                    "set",
                    "DAD"
                ],
                "2": [
                    "get",
                    "list",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Network.Ethernet.External": {
            "lib": "lib/libwebapi-Ethernet.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "check"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Network.IPv6": {
            "lib": "lib/libwebapi-ipv6.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Network.IPv6.Router": {
            "lib": "lib/libwebapi-IPv6Router.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Network.IPv6.Router.Prefix": {
            "lib": "lib/libwebapi-IPv6Router.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "add",
                    "remove",
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Network.Interface": {
            "lib": "lib/libwebapi-Network-Interface.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Network.MACClone": {
            "lib": "lib/libwebapi-MacClone.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set",
                    "getRemoteMACAddress"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Network.OVS": {
            "lib": "lib/libwebapi-OVS.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "set",
                    "get",
                    "check"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Network.PPPoE": {
            "lib": "lib/libwebapi-PPPoE.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set",
                    "list",
                    "connect",
                    "disconnect"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Network.PPPoE.Relay": {
            "lib": "lib/libwebapi-PPPoE.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Network.Proxy": {
            "lib": "lib/libwebapi-Proxy.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Network.Router.Gateway.List": {
            "lib": "lib/libwebapi-Router.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Network.Router.Static.Route": {
            "lib": "lib/libwebapi-Router.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set",
                    "test",
                    "tablesget"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Network.UPnPServer": {
            "lib": "lib/libwebapi-UPnPServer.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Network.VPN": {
            "lib": "lib/libwebapi-VPNClient.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "check",
                    "connect",
                    "disconnect"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Network.VPN.L2TP": {
            "lib": "lib/libwebapi-VPNClient.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "create",
                    "set",
                    "delete",
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Network.VPN.OpenVPN": {
            "lib": "lib/libwebapi-VPNClient.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "create",
                    "set",
                    "delete",
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Network.VPN.OpenVPN.CA": {
            "lib": "lib/libwebapi-VPNClient.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "upload"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Network.VPN.OpenVPNWithConf": {
            "lib": "lib/libwebapi-VPNClient.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "create",
                    "set",
                    "delete",
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Network.VPN.OpenVPNWithConf.Certs": {
            "lib": "lib/libwebapi-VPNClient.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "upload"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Network.VPN.PPTP": {
            "lib": "lib/libwebapi-VPNClient.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "create",
                    "set",
                    "delete",
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Network.WOL": {
            "lib": "lib/libwebapi-WOL.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "wake"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.NormalUser": {
            "lib": "lib/SYNO.Core.User.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "get"
                ],
                "2": [
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.NormalUser.LoginNotify": {
            "lib": "lib/SYNO.Core.User.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "check"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Notification.Advance.CustomizedData": {
            "lib": "lib/libNotification.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set",
                    "reset"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Notification.Advance.FilterSettings": {
            "lib": "lib/libNotification.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "get",
                    "set",
                    "list"
                ],
                "2": [
                    "get",
                    "set",
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Notification.Advance.FilterSettings.Profile": {
            "lib": "lib/libNotification.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Notification.Advance.FilterSettings.Template": {
            "lib": "lib/libNotification.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "delete",
                    "create",
                    "list",
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Notification.Advance.Variables": {
            "lib": "lib/libNotification.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Notification.Advance.WarningPercentage": {
            "lib": "lib/libNotification.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Notification.CMS": {
            "lib": "lib/libNotification.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "send_test"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Notification.CMS.Conf": {
            "lib": "lib/libNotification.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "get",
                    "set"
                ],
                "2": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Notification.Line": {
            "lib": "lib/SYNO.Core.Notification.Line.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get_bot_info",
                    "refresh_token",
                    "verify_token",
                    "revoke_token",
                    "send_test"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Notification.Mail": {
            "lib": "lib/SYNO.Core.Notification.Mail.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "refresh_token",
                    "send_test"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Notification.Mail.Auth": {
            "lib": "lib/SYNO.Core.Notification.Mail.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Notification.Mail.Conf": {
            "lib": "lib/SYNO.Core.Notification.Mail.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "getEnable",
                    "get",
                    "set"
                ],
                "2": [
                    "set",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Notification.Mail.Oauth": {
            "lib": "lib/SYNO.Core.Notification.Mail.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "outlook",
                    "gmail"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Notification.Mail.Profile.Conf": {
            "lib": "lib/SYNO.Core.Notification.Mail.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "create",
                    "set",
                    "delete"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Notification.Push": {
            "lib": "lib/libNotification.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "send_test"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Notification.Push.AuthToken": {
            "lib": "lib/libNotification.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Notification.Push.Conf": {
            "lib": "lib/libNotification.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set",
                    "status"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Notification.Push.Mail": {
            "lib": "lib/libNotification.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "get",
                    "set",
                    "status",
                    "send_verify",
                    "send_test"
                ],
                "2": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Notification.Push.Mobile": {
            "lib": "lib/libNotification.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "set",
                    "list",
                    "unpair"
                ],
                "2": [
                    "list",
                    "unpair"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Notification.Push.Webhook.Provider": {
            "lib": "lib/libNotification.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "delete",
                    "create",
                    "set",
                    "get",
                    "list",
                    "send_test"
                ],
                "2": [
                    "delete",
                    "create",
                    "set",
                    "get",
                    "list",
                    "send_test"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Notification.SMS": {
            "lib": "lib/SYNO.Core.Notification.SMS.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "send_test"
                ],
                "2": [
                    "send_test"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Notification.SMS.Conf": {
            "lib": "lib/SYNO.Core.Notification.SMS.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "get",
                    "set"
                ],
                "2": [
                    "set",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Notification.SMS.Provider": {
            "lib": "lib/SYNO.Core.Notification.SMS.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list",
                    "get",
                    "set",
                    "create",
                    "delete"
                ],
                "2": [
                    "delete",
                    "create",
                    "set",
                    "get",
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Notification.Sysnotify": {
            "lib": "lib/SYNO.Core.Notification.Sysnotify.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "notify"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.OAuth.Scope": {
            "lib": "lib/webapi_entry_oauth.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "delete",
                    "set",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.OAuth.Server": {
            "lib": "lib/webapi_entry_oauth.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "delete",
                    "set",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.OTP": {
            "lib": "lib/SYNO.Core.User.so",
            "maxVersion": 3,
            "methods": {
                "1": [
                    "get",
                    "reset"
                ],
                "2": [
                    "get",
                    "reset",
                    "get_one",
                    "save_mail",
                    "get_qrcode",
                    "edit_secret_key",
                    "auth_tmp_code"
                ],
                "3": [
                    "get_qrcode",
                    "auth_tmp_code"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.OTP.Admin": {
            "lib": "lib/SYNO.Core.User.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "reset",
                    "get",
                    "get_otp_status"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.OTP.EnforcePolicy": {
            "lib": "lib/SYNO.Core.User.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set",
                    "list",
                    "custom_set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.OTP.Ex": {
            "lib": "lib/SYNO.Core.User.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "save_mail",
                    "get_qrcode",
                    "edit_secret_key",
                    "auth_tmp_code"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.OTP.Mail": {
            "lib": "lib/SYNO.Core.User.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "send"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Package": {
            "lib": "lib/SYNO.Core.Package.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list",
                    "list_status",
                    "get",
                    "feasibility_check",
                    "get_queue",
                    "get_current_candidate_operation",
                    "get_future_candidate_operation",
                    "bulk"
                ],
                "2": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Package.AutoUpgrade.Progress": {
            "lib": "lib/SYNO.Core.Package.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Package.Control": {
            "lib": "lib/SYNO.Core.Package.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "start",
                    "stop"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Package.FakeIFrame": {
            "lib": "lib/SYNO.Core.Package.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Package.Feed": {
            "lib": "lib/SYNO.Core.Package.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "set",
                    "add",
                    "delete"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Package.Info": {
            "lib": "lib/SYNO.Core.Package.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Package.Installation": {
            "lib": "lib/SYNO.Core.Package.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "status",
                    "cancel",
                    "check",
                    "upload",
                    "install",
                    "upgrade",
                    "clean",
                    "delete",
                    "get_queue"
                ],
                "2": [
                    "check"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Package.Installation.Download": {
            "lib": "lib/SYNO.Core.Package.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "check"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Package.Legal.PreRelease": {
            "lib": "lib/SYNO.Core.Package.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Package.Log": {
            "lib": "lib/SYNO.Core.Package.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Package.MyDS": {
            "lib": "lib/SYNO.Core.Package.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Package.MyDS.Purchase": {
            "lib": "lib/SYNO.Core.Package.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "save"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Package.Progress": {
            "lib": "lib/SYNO.Core.Package.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Package.Screenshot": {
            "lib": "lib/SYNO.Core.Package.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Package.Screenshot.Server": {
            "lib": "lib/SYNO.Core.Package.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Package.Server": {
            "lib": "lib/SYNO.Core.Package.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list",
                    "check"
                ],
                "2": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Package.Setting": {
            "lib": "lib/SYNO.Core.Package.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Package.Setting.Update": {
            "lib": "lib/SYNO.Core.Package.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "add",
                    "delete"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Package.Setting.Volume": {
            "lib": "lib/SYNO.Core.Package.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "set",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Package.Thumb": {
            "lib": "lib/SYNO.Core.Package.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Package.Thumb.Server": {
            "lib": "lib/SYNO.Core.Package.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Package.Uninstallation": {
            "lib": "lib/SYNO.Core.Package.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "uninstall"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.PersonalNotification.Device": {
            "lib": "lib/SYNO.Core.PersonalNotification.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "unpair",
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.PersonalNotification.Event": {
            "lib": "lib/SYNO.Core.PersonalNotification.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "fire"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.PersonalNotification.Filter": {
            "lib": "lib/SYNO.Core.PersonalNotification.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "set",
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.PersonalNotification.Mobile": {
            "lib": "lib/SYNO.Core.PersonalNotification.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "unpair",
                    "stat",
                    "pair",
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.PersonalNotification.Settings": {
            "lib": "lib/SYNO.Core.PersonalNotification.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "set",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.PersonalSettings": {
            "lib": "/usr/syno/synoman/webapi/lib/SYNO.Core.PersonalSettings.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "wallpaper",
                    "photo",
                    "quota"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.PhotoViewer": {
            "lib": "/usr/syno/synoman/webapi/lib/SYNO.Core.PhotoViewer.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "info"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Polling.Data": {
            "lib": "/usr/syno/synoman/webman/modules/PollingTask/webapi/SYNO.Core.Polling.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "set",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.PortForwarding": {
            "lib": "lib/SYNO.Core.PortForwarding.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "detect_pre_check",
                    "detect",
                    "detect_status",
                    "get_current_process"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.PortForwarding.Compatibility": {
            "lib": "lib/SYNO.Core.PortForwarding.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "test",
                    "test_status",
                    "stop",
                    "upload"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.PortForwarding.RouterConf": {
            "lib": "lib/SYNO.Core.PortForwarding.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "set",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.PortForwarding.RouterInfo": {
            "lib": "lib/SYNO.Core.PortForwarding.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.PortForwarding.RouterList": {
            "lib": "lib/SYNO.Core.PortForwarding.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "list",
                    "update"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.PortForwarding.Rules": {
            "lib": "lib/SYNO.Core.PortForwarding.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "save",
                    "force_save",
                    "save_status",
                    "load",
                    "test",
                    "test_status"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.PortForwarding.Rules.Serv": {
            "lib": "lib/SYNO.Core.PortForwarding.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "check",
                    "test",
                    "test_status"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Promotion.PreInstall": {
            "lib": "lib/SYNO.Core.Promotion.PreInstall.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "set_never_show",
                    "set_installing_pkg",
                    "set_not_install",
                    "set_pkg_should_install",
                    "set_preinstall_cnt",
                    "start_preinstall",
                    "get_install_confirm",
                    "get_never_show",
                    "get_pkg_should_install",
                    "enable_preinstall"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Promotion.Info": {
            "lib": "lib/SYNO.Core.Promotion.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "is_AMFA_enabled",
                    "hide_promotion",
                    "get_old_patch",
                    "is_2FA_enabled"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.QuickConnect": {
            "lib": "/var/packages/QuickConnect/target/webapi/SYNO.Core.QuickConnect.so",
            "maxVersion": 3,
            "methods": {
                "1": [
                    "status",
                    "get",
                    "set",
                    "set_server_alias"
                ],
                "2": [
                    "get",
                    "set",
                    "set_server_alias"
                ],
                "3": [
                    "get_misc_config",
                    "set_misc_config",
                    "check_availability",
                    "junior_unregister",
                    "register_crt",
                    "get_server_alias"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.QuickConnect.Hostname": {
            "lib": "/var/packages/QuickConnect/target/webapi/SYNO.Core.QuickConnect.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get_ip"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.QuickConnect.Permission": {
            "lib": "/var/packages/QuickConnect/target/webapi/SYNO.Core.QuickConnect.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.QuickConnect.RegisterSite": {
            "lib": "/var/packages/QuickConnect/target/webapi/SYNO.Core.QuickConnect.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.QuickConnect.SNI": {
            "lib": "/var/packages/QuickConnect/target/webapi/SYNO.Core.QuickConnect.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.QuickConnect.Upnp": {
            "lib": "/var/packages/QuickConnect/target/webapi/SYNO.Core.QuickConnect.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.QuickStart.Info": {
            "lib": "lib/SYNO.Core.QuickStart.so",
            "maxVersion": 3,
            "methods": {
                "1": [
                    "load_ds_info",
                    "check_permission",
                    "hide_welcome",
                    "set_udc",
                    "load_confautobkp_info",
                    "set_confautobkp"
                ],
                "2": [
                    "load_ds_info",
                    "check_permission",
                    "hide_welcome",
                    "set_udc",
                    "set_mib",
                    "load_mib_info"
                ],
                "3": [
                    "load_ds_info",
                    "check_permission",
                    "hide_welcome",
                    "set_udc",
                    "set_mib",
                    "load_mib_info",
                    "set_wizard_step"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.QuickStart.Install": {
            "lib": "lib/SYNO.Core.QuickStart.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "install_pkgs",
                    "install_sur",
                    "check_progress",
                    "notify_sur_failed"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Quota": {
            "lib": "lib/SYNO.Core.Quota.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set",
                    "inspect"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.RecycleBin": {
            "lib": "lib/SYNO.Core.RecycleBin.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "start",
                    "stop",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.RecycleBin.User": {
            "lib": "lib/SYNO.Core.RecycleBin.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "start",
                    "stop",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Region.Language": {
            "lib": "lib/SYNO.Core.Region.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Region.NTP": {
            "lib": "lib/SYNO.Core.Region.so",
            "maxVersion": 3,
            "methods": {
                "1": [
                    "get",
                    "set",
                    "sync",
                    "status",
                    "listzone",
                    "setzone",
                    "ensure_ntp_sync_and_enable"
                ],
                "2": [
                    "get",
                    "set",
                    "sync"
                ],
                "3": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Region.NTP.DateTimeFormat": {
            "lib": "lib/SYNO.Core.Region.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Region.NTP.Server": {
            "lib": "lib/SYNO.Core.Region.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Report": {
            "lib": "/var/packages/StorageAnalyzer/target/webapi/SYNO.Core.Report.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "get",
                    "set",
                    "create",
                    "delete",
                    "export"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Report.Analyzer": {
            "lib": "/var/packages/StorageAnalyzer/target/webapi/SYNO.Core.Report.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "getdata",
                    "confirmduplicate"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Report.Analyzer.File": {
            "lib": "/var/packages/StorageAnalyzer/target/webapi/SYNO.Core.Report.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "duplicate",
                    "status"
                ],
                "2": [
                    "duplicate"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Report.Analyzer.Share": {
            "lib": "/var/packages/StorageAnalyzer/target/webapi/SYNO.Core.Report.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "usage",
                    "user_quota",
                    "file_type"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Report.Config": {
            "lib": "/var/packages/StorageAnalyzer/target/webapi/SYNO.Core.Report.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Report.History": {
            "lib": "/var/packages/StorageAnalyzer/target/webapi/SYNO.Core.Report.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "get"
                ],
                "2": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Report.Redirect": {
            "lib": "/var/packages/StorageAnalyzer/target/webapi/SYNO.Core.Report.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "open_report"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Report.Util": {
            "lib": "/var/packages/StorageAnalyzer/target/webapi/SYNO.Core.Report.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "delete_file",
                    "list_share"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.ResetAdmin": {
            "lib": "lib/SYNO.Core.ResetAdmin.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "disable"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.SNMP": {
            "lib": "lib/SYNO.Core.SNMP.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "set",
                    "get",
                    "get_run_conf",
                    "gen_run_conf",
                    "gen_syno_conf"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Security.AutoBlock": {
            "lib": "lib/SYNO.Core.Security.AutoBlock.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Security.AutoBlock.Rules": {
            "lib": "lib/SYNO.Core.Security.AutoBlock.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "list",
                    "delete",
                    "create",
                    "upload",
                    "upload_deny_list",
                    "download"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Security.DoS": {
            "lib": "lib/SYNO.Core.Security.DoS.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "get",
                    "set"
                ],
                "2": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Security.Firewall": {
            "lib": "lib/SYNO.Core.Security.Firewall.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "set",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Security.Firewall.Adapter": {
            "lib": "lib/SYNO.Core.Security.Firewall.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "set",
                    "get",
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Security.Firewall.Conf": {
            "lib": "lib/SYNO.Core.Security.Firewall.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Security.Firewall.Geoip": {
            "lib": "lib/SYNO.Core.Security.Firewall.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Security.Firewall.Profile": {
            "lib": "lib/SYNO.Core.Security.Firewall.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "set",
                    "get",
                    "list",
                    "rename",
                    "create",
                    "clone",
                    "delete"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Security.Firewall.Profile.Apply": {
            "lib": "lib/SYNO.Core.Security.Firewall.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "start",
                    "status",
                    "stop"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Security.Firewall.Rules": {
            "lib": "lib/SYNO.Core.Security.Firewall.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "load",
                    "save_start",
                    "save_status",
                    "save_stop"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Security.Firewall.Rules.Serv": {
            "lib": "lib/SYNO.Core.Security.Firewall.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "policy_check",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Security.DSM": {
            "lib": "lib/SYNO.Core.Security.DSM.so",
            "maxVersion": 5,
            "methods": {
                "1": [
                    "get",
                    "set"
                ],
                "2": [
                    "get",
                    "set"
                ],
                "3": [
                    "get",
                    "set"
                ],
                "4": [
                    "get",
                    "set"
                ],
                "5": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Security.DSM.Embed": {
            "lib": "lib/SYNO.Core.Security.DSM.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Security.DSM.Proxy": {
            "lib": "lib/SYNO.Core.Security.DSM.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.SecurityScan.Conf": {
            "lib": "lib/SYNO.Core.SecurityScan.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "set",
                    "get",
                    "time_get",
                    "first_get",
                    "group_enum",
                    "group_set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.SecurityScan.Operation": {
            "lib": "lib/SYNO.Core.SecurityScan.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "start",
                    "stop",
                    "fixme",
                    "update"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.SecurityScan.Status": {
            "lib": "lib/SYNO.Core.SecurityScan.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "system_get",
                    "rule_get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Service": {
            "lib": "lib/SYNO.Core.Service.so",
            "maxVersion": 3,
            "methods": {
                "1": [
                    "control"
                ],
                "2": [
                    "get"
                ],
                "3": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Service.Conf": {
            "lib": "lib/SYNO.Core.Service.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Service.PortInfo": {
            "lib": "lib/SYNO.Core.Service.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "load"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Share": {
            "lib": "lib/SYNO.Core.Share.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "create",
                    "set",
                    "move_status",
                    "stop_move",
                    "get_all_move_task",
                    "list",
                    "get",
                    "delete",
                    "validate_delete",
                    "validate_set",
                    "restore",
                    "clone"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Share.Crypto": {
            "lib": "lib/SYNO.Core.Share.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "decrypt",
                    "encrypt",
                    "validate_encrypt"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Share.Crypto.Key": {
            "lib": "lib/SYNO.Core.Share.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "export",
                    "verify"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Share.CryptoFile": {
            "lib": "lib/SYNO.Core.Share.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "decrypt"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Share.KeyManager.AutoKey": {
            "lib": "lib/SYNO.Core.Share.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "migrate"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Share.KeyManager.Key": {
            "lib": "lib/SYNO.Core.Share.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "add",
                    "add_by_file",
                    "set",
                    "delete",
                    "mount",
                    "umount",
                    "export"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Share.KeyManager.MachineKey": {
            "lib": "lib/SYNO.Core.Share.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Share.KeyManager.Store": {
            "lib": "lib/SYNO.Core.Share.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "explore",
                    "init",
                    "verify",
                    "change_passphrase",
                    "change_location",
                    "get",
                    "set",
                    "clone"
                ],
                "2": [
                    "init"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Share.Migration": {
            "lib": "lib/SYNO.Core.Share.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "check",
                    "start",
                    "status",
                    "stop"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Share.Migration.Task": {
            "lib": "lib/SYNO.Core.Share.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Share.Permission": {
            "lib": "lib/SYNO.Core.Share.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "list_by_user",
                    "list_by_group",
                    "set",
                    "set_by_user_group"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Share.PermissionReport": {
            "lib": "lib/SYNO.Core.Share.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "export",
                    "export_status",
                    "export_bg_status",
                    "export_stop",
                    "get_config"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Share.Snapshot": {
            "lib": "lib/SYNO.Core.Share.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "set_share_conf",
                    "get_share_conf",
                    "check_shareconf",
                    "set_schedule",
                    "get_schedule",
                    "create",
                    "list",
                    "delete",
                    "set"
                ],
                "2": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Sharing": {
            "lib": "/usr/syno/synoman/webapi/lib/SYNO.Core.Sharing.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "trigger_gc",
                    "list",
                    "delete",
                    "set",
                    "get",
                    "logout"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Sharing.Initdata": {
            "lib": "/usr/syno/synoman/webapi/lib/SYNO.Core.Sharing.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Sharing.Login": {
            "lib": "/usr/syno/synoman/webapi/lib/SYNO.Core.Sharing.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "login"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Sharing.Session": {
            "lib": "/usr/syno/synoman/webapi/lib/SYNO.Core.Sharing.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.SmartBlock": {
            "lib": "lib/SYNO.Core.SmartBlock.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.SmartBlock.Device": {
            "lib": "lib/SYNO.Core.SmartBlock.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set",
                    "forget"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.SmartBlock.Trusted": {
            "lib": "lib/SYNO.Core.SmartBlock.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "pardon"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.SmartBlock.Untrusted": {
            "lib": "lib/SYNO.Core.SmartBlock.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "pardon"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.SmartBlock.User": {
            "lib": "lib/SYNO.Core.SmartBlock.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "enabled",
                    "list",
                    "trust",
                    "distrust",
                    "locked",
                    "pardon"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Storage.Disk": {
            "lib": "StorageManager/libStorage.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "get_smart_info",
                    "do_smart_test",
                    "get_smart_test_log",
                    "do_performance_test",
                    "stop_performance_test",
                    "get_performance_test_status",
                    "get_performance_test_log",
                    "get_performance_test_info",
                    "do_adv_test",
                    "get_adv_test_log",
                    "export_test_log",
                    "export_test_log_content",
                    "get_synoblock",
                    "get_disk_led_status",
                    "set_disk_led_status",
                    "test_deactivate_disk",
                    "deactivate_disk",
                    "wcache_get",
                    "wcache_set",
                    "disk_test_log_get",
                    "disk_health_prediction_log_get",
                    "get_wdda_test_result",
                    "disk_partition_rescan",
                    "disks_info_get",
                    "upload_offlinekit",
                    "get_offlinekit_ver",
                    "list_detail",
                    "load_local_info",
                    "load_info",
                    "emit_info",
                    "control_local_sofs_daemon",
                    "control_sofs_daemon",
                    "health_report_get",
                    "health_record_update",
                    "check_ui_open",
                    "reset_metadata"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Storage.Disk.FWUpgrade": {
            "lib": "StorageManager/libStorage.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list_drive",
                    "list_drive_group",
                    "prepare",
                    "get_latest_auto_upgrade_result",
                    "prepare_group",
                    "get_upgrade_method",
                    "start_upgrade",
                    "get_firm_path",
                    "upgrade",
                    "defer_upgrade",
                    "poll",
                    "check_continue",
                    "get_summary",
                    "cancel_send_notification",
                    "cancel_auto_launch",
                    "send_notification",
                    "send_notification_group"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Storage.Pool": {
            "lib": "StorageManager/libStorage.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Storage.Volume": {
            "lib": "StorageManager/libStorage.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "get",
                    "conf_get",
                    "conf_set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Storage.iSCSILUN": {
            "lib": "StorageManager/libStorage.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "repair",
                    "expand_unallocated",
                    "migrate",
                    "data_scrubbing",
                    "expand_by_add_disk",
                    "cancel_data_scrubbing",
                    "pause_data_scrubbing",
                    "estimate_size",
                    "delete_block_lun"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.SupportForm.Form": {
            "lib": "lib/libwebapi-SupportForm.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "upload"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.SupportForm.Log": {
            "lib": "lib/libwebapi-SupportForm.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "download",
                    "collect",
                    "status",
                    "polling"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.SupportForm.Service": {
            "lib": "lib/libwebapi-SupportForm.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set",
                    "set_log_gen"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Synohdpack": {
            "lib": "/usr/syno/synoman/webapi/lib/SYNO.Core.Synohdpack.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "getHDIcon",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.SyslogClient.FileTransfer": {
            "lib": "lib/SYNO.Core.SyslogClient.FileTransfer.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set",
                    "get_level",
                    "set_level"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.SyslogClient.Log": {
            "lib": "lib/SYNO.Core.SyslogClient.Log.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "export",
                    "clear",
                    "get_remotearch_subfolder"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.SyslogClient.PersonalActivity": {
            "lib": "lib/SYNO.Core.SyslogClient.PersonalActivity.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "loginhistory",
                    "get",
                    "clear"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.SyslogClient.Setting.Notify": {
            "lib": "lib/SYNO.Core.SyslogClient.Setting.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.SyslogClient.Status": {
            "lib": "lib/SYNO.Core.SyslogClient.Status.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "device_enum",
                    "latestlog_get",
                    "eps_get",
                    "cnt_get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.System.Status": {
            "lib": "/usr/syno/synoman/webapi/lib/SYNO.Core.System.Status.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.System": {
            "lib": "lib/SYNO.Core.System.so",
            "maxVersion": 3,
            "methods": {
                "1": [
                    "shutdown",
                    "reboot",
                    "reset",
                    "reset_check",
                    "info",
                    "poll"
                ],
                "2": [
                    "shutdown",
                    "reboot",
                    "info"
                ],
                "3": [
                    "info"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.System.Process": {
            "lib": "lib/SYNO.Core.System.Process.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.System.ProcessGroup": {
            "lib": "lib/SYNO.Core.System.ProcessGroup.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.System.ResetButton": {
            "lib": "lib/SYNO.Core.System.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.System.SystemHealth": {
            "lib": "lib/SYNO.Core.System.SystemHealth.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.System.Utilization": {
            "lib": "lib/SYNO.Core.System.Utilization.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.TFTP": {
            "lib": "lib/libCoreTFTP.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.TaskScheduler": {
            "lib": "lib/SYNO.Core.TaskScheduler.so",
            "maxVersion": 4,
            "methods": {
                "1": [
                    "list",
                    "get",
                    "set_enable",
                    "delete",
                    "run",
                    "set",
                    "create",
                    "view",
                    "get_history_status_list",
                    "get_history_log"
                ],
                "2": [
                    "get",
                    "set",
                    "create",
                    "list",
                    "delete",
                    "set_enable",
                    "run"
                ],
                "3": [
                    "get",
                    "set",
                    "create",
                    "list"
                ],
                "4": [
                    "get",
                    "set",
                    "create"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.TaskScheduler.Root": {
            "lib": "lib/SYNO.Core.TaskScheduler.so",
            "maxVersion": 4,
            "methods": {
                "1": [
                    "set",
                    "create"
                ],
                "2": [
                    "set",
                    "create"
                ],
                "3": [
                    "set",
                    "create"
                ],
                "4": [
                    "set",
                    "create"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Terminal": {
            "lib": "lib/SYNO.Core.Terminal.so",
            "maxVersion": 3,
            "methods": {
                "1": [
                    "set",
                    "get"
                ],
                "2": [
                    "set",
                    "get"
                ],
                "3": [
                    "set",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Theme.AppPortalLogin": {
            "lib": "lib/SYNO.Core.Theme.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Theme.Desktop": {
            "lib": "lib/SYNO.Core.Theme.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Theme.FileSharingLogin": {
            "lib": "lib/SYNO.Core.Theme.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Theme.Image": {
            "lib": "lib/SYNO.Core.Theme.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "upload",
                    "get",
                    "clean_history"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Theme.Login": {
            "lib": "lib/SYNO.Core.Theme.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.TrustDevice": {
            "lib": "/usr/syno/synoman/webapi/lib/SYNO.Core.TrustDevice.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "delete",
                    "delete_others",
                    "create"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Tuned": {
            "lib": "lib/SYNO.Core.Tuned.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "profile_list",
                    "profile_set",
                    "config_get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.UISearch": {
            "lib": "/usr/syno/synoman/webapi/lib/SYNO.Core.UISearch.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "uisearch"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Upgrade": {
            "lib": "lib/SYNO.Core.Upgrade.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "start",
                    "progress",
                    "status",
                    "basic_status",
                    "is_upgraded_from_dsm_62",
                    "is_upgraded_from_dsm_700",
                    "did_user_see_new_upgrade_setting_toast",
                    "now_user_sees_new_upgrade_setting_toast",
                    "check_having_upgradeable_drives"
                ],
                "2": [
                    "status"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Upgrade.AutoUpgrade": {
            "lib": "lib/SYNO.Core.Upgrade.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "status",
                    "cancel"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Upgrade.Cluster.Patch": {
            "lib": "lib/SYNO.Core.Upgrade.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "upload"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Upgrade.Cluster.Server": {
            "lib": "lib/SYNO.Core.Upgrade.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "check",
                    "check_target"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Upgrade.Cluster.Server.Download": {
            "lib": "lib/SYNO.Core.Upgrade.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "start"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Upgrade.Group": {
            "lib": "lib/SYNO.Core.Upgrade.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "info"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Upgrade.Group.Download": {
            "lib": "lib/SYNO.Core.Upgrade.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "start",
                    "cancel",
                    "progress"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Upgrade.Group.Setting": {
            "lib": "lib/SYNO.Core.Upgrade.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Upgrade.GroupInstall": {
            "lib": "lib/SYNO.Core.Upgrade.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "start",
                    "status"
                ],
                "2": [
                    "start"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Upgrade.GroupInstall.Network": {
            "lib": "lib/SYNO.Core.Upgrade.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Upgrade.JuniorModeData": {
            "lib": "lib/SYNO.Core.Upgrade.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get_info",
                    "cleanup"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Upgrade.Patch": {
            "lib": "lib/SYNO.Core.Upgrade.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "upload",
                    "local_upload",
                    "clean",
                    "verify",
                    "find_destination",
                    "get_uploaded_patch_info"
                ],
                "2": [
                    "verify",
                    "find_destination"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Upgrade.PreCheck": {
            "lib": "lib/SYNO.Core.Upgrade.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "start"
                ],
                "2": [
                    "start"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Upgrade.RemoteAction": {
            "lib": "lib/SYNO.Core.Upgrade.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "start"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Upgrade.Server": {
            "lib": "lib/SYNO.Core.Upgrade.so",
            "maxVersion": 4,
            "methods": {
                "1": [
                    "check"
                ],
                "2": [
                    "check"
                ],
                "3": [
                    "check"
                ],
                "4": [
                    "check"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Upgrade.Server.Download": {
            "lib": "lib/SYNO.Core.Upgrade.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "start",
                    "cancel",
                    "clean",
                    "progress"
                ],
                "2": [
                    "start",
                    "progress"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Upgrade.Setting": {
            "lib": "lib/SYNO.Core.Upgrade.so",
            "maxVersion": 4,
            "methods": {
                "1": [
                    "get",
                    "set"
                ],
                "2": [
                    "get",
                    "set"
                ],
                "3": [
                    "get",
                    "set"
                ],
                "4": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.User": {
            "lib": "lib/SYNO.Core.User.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "get",
                    "set",
                    "delete",
                    "create",
                    "parse_user_list",
                    "import",
                    "import_status",
                    "import_stop",
                    "export_prepare",
                    "export_prepare_status",
                    "export_prepare_stop",
                    "export",
                    "invite"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.User.Group": {
            "lib": "lib/SYNO.Core.User.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "join",
                    "join_stop",
                    "join_list",
                    "join_status",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.User.Home": {
            "lib": "lib/SYNO.Core.User.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "move_check",
                    "validate_set",
                    "set",
                    "status",
                    "stop"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.User.PasswordConfirm": {
            "lib": "lib/SYNO.Core.User.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "auth"
                ],
                "2": [
                    "auth"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.User.PasswordExpiry": {
            "lib": "lib/SYNO.Core.User.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.User.PasswordMeter": {
            "lib": "lib/SYNO.Core.User.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "evaluate"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.User.PasswordPolicy": {
            "lib": "lib/SYNO.Core.User.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set",
                    "check"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.User.UsernamePolicy": {
            "lib": "lib/SYNO.Core.User.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.UserSettings": {
            "lib": "lib/SYNO.Core.UserSettings.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "apply"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Virtualization.Host.Capability": {
            "lib": "lib/SYNO.Core.Virtualization.Host.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.VolEncKeepKey": {
            "lib": "lib/SYNO.Core.VolEncKeepKey.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "ignore"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Web.DSM": {
            "lib": "lib/SYNO.Core.Web.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "get",
                    "set"
                ],
                "2": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Web.DSM.External": {
            "lib": "lib/SYNO.Core.Web.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Web.Security.HTTPCompression": {
            "lib": "lib/SYNO.Core.Web.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Core.Web.Security.TLSProfile": {
            "lib": "lib/SYNO.Core.Web.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        }
    },
    "SYNO.DR": {
        "SYNO.DR.Node": {
            "lib": "lib/SYNO.DR.Node.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "info",
                    "test_sync_speed",
                    "test_download_speed",
                    "test_privilege",
                    "test_connection",
                    "reset",
                    "check_and_reset"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.DR.Node.Credential": {
            "lib": "lib/SYNO.DR.Node.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "create",
                    "set",
                    "get",
                    "list",
                    "relay",
                    "reverse_create",
                    "test_create",
                    "test_reverse_create",
                    "test_set",
                    "temp_create",
                    "temp_reverse_create",
                    "delete"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.DR.Node.Session": {
            "lib": "lib/SYNO.DR.Node.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "create",
                    "temp_create",
                    "get",
                    "delete",
                    "find"
                ],
                "2": [
                    "create"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        }
    },
    "SYNO.DSM": {
        "SYNO.DSM.FindMe": {
            "lib": "/usr/syno/synoman/webapi/lib/SYNO.DSM.FindMe.so",
            "maxVersion": 2,
            "methods": {
                "2": [
                    "supported",
                    "stop",
                    "start"
                ]
            },
            "minVersion": 2,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.DSM.Info": {
            "lib": "/usr/syno/synoman/webapi/lib/SYNO.DSM.Info.so",
            "maxVersion": 2,
            "methods": {
                "2": [
                    "getinfo"
                ]
            },
            "minVersion": 2,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.DSM.Network": {
            "lib": "/usr/syno/synoman/webapi/lib/SYNO.DSM.Network.so",
            "maxVersion": 2,
            "methods": {
                "2": [
                    "list"
                ]
            },
            "minVersion": 2,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.DSM.PortEnable": {
            "lib": "lib/SYNO.DSM.PortEnable.so",
            "minVersion": 1,
            "maxVersion": 1,
            "methods": {
                "1": [
                    "is_pkg_enable",
                    "is_port_block",
                    "open_block_port"
                ]
            },
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.DSM.PushNotification": {
            "lib": "/usr/syno/synoman/webapi/lib/SYNO.DSM.PushNotification.so",
            "maxVersion": 2,
            "methods": {
                "2": [
                    "requesttoken"
                ]
            },
            "minVersion": 2,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        }
    },
    "SYNO.Default": {
        "SYNO.Default.API": {
            "lib": "",
            "maxVersion": 1,
            "methods": [],
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        }
    },
    "SYNO.DisasterRecovery": {
        "SYNO.DisasterRecovery.Log": {
            "lib": "lib/SYNO.DisasterRecovery.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "export",
                    "clear"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.DisasterRecovery.Retention": {
            "lib": "lib/SYNO.DisasterRecovery.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "get_timezone",
                    "get_worm_lock",
                    "set",
                    "set_timezone",
                    "set_worm_lock",
                    "delete",
                    "info",
                    "check_worm_lockable",
                    "notify_worm_lock_disable",
                    "clear_worm_lock_notify_time"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        }
    },
    "SYNO.Docker": {
        "SYNO.Docker.Container": {
            "lib": "/var/packages/ContainerManager/target/webapi/container/SYNO.Docker.Container.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "create",
                    "delete",
                    "export",
                    "import",
                    "get",
                    "get_log",
                    "get_process",
                    "list",
                    "restart",
                    "set",
                    "set_start",
                    "set_status",
                    "signal",
                    "start",
                    "stop",
                    "stats",
                    "upload"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Docker.Container.Log": {
            "lib": "/var/packages/ContainerManager/target/webapi/container/SYNO.Docker.Container.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "export",
                    "get",
                    "get_date_by_id",
                    "get_date_list",
                    "search"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Docker.Container.PkgProfile": {
            "lib": "/var/packages/ContainerManager/target/webapi/container/SYNO.Docker.Container.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "create",
                    "remove"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Docker.Container.Profile": {
            "lib": "/var/packages/ContainerManager/target/webapi/container/SYNO.Docker.Container.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "duplicate",
                    "export",
                    "import",
                    "upload"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Docker.Container.Resource": {
            "lib": "/var/packages/ContainerManager/target/webapi/container/SYNO.Docker.Container.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Docker.Image": {
            "lib": "/var/packages/ContainerManager/target/webapi/image/SYNO.Docker.Image.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "prune",
                    "list",
                    "pull_start",
                    "pull_status",
                    "upgrade_start",
                    "upgrade_status",
                    "export",
                    "import",
                    "delete",
                    "upload",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Docker.Log": {
            "lib": "/var/packages/ContainerManager/target/webapi/log/SYNO.Docker.Log.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "clear",
                    "export"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Docker.Migrate": {
            "lib": "/var/packages/ContainerManager/target/webapi/migrate/SYNO.Docker.Migrate.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "import_status",
                    "status",
                    "import"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Docker.Network": {
            "lib": "/var/packages/ContainerManager/target/webapi/network/SYNO.Docker.Network.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "list_container",
                    "create",
                    "remove",
                    "connect",
                    "disconnect",
                    "set",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Docker.Project": {
            "lib": "/var/packages/ContainerManager/target/webapi/project/SYNO.Docker.Project.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "log",
                    "get_share_info",
                    "build_stream",
                    "start_stream",
                    "stop_stream",
                    "restart_stream",
                    "clean_stream",
                    "delete_stream",
                    "clean",
                    "stop",
                    "delete",
                    "build",
                    "start",
                    "restart",
                    "get",
                    "update",
                    "list",
                    "create"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Docker.Registry": {
            "lib": "/var/packages/ContainerManager/target/webapi/registry/SYNO.Docker.Registry.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "search",
                    "tags",
                    "get",
                    "create",
                    "set",
                    "using",
                    "delete"
                ],
                "2": [
                    "tags"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Docker.Utils": {
            "lib": "/var/packages/ContainerManager/target/webapi/utils/SYNO.Docker.Utils.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "getAllShare"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        }
    },
    "SYNO.DownloadStation": {
        "SYNO.DownloadStation.BTSearch": {
            "maxVersion": 1,
            "methods": {
                "1": [
                    "start",
                    "list",
                    "getCategory",
                    "clean",
                    "getModule"
                ]
            },
            "minVersion": 1,
            "path": "DownloadStation/btsearch.cgi"
        },
        "SYNO.DownloadStation.Info": {
            "maxVersion": 2,
            "methods": {
                "1": [
                    "getinfo",
                    "getconfig",
                    "setserverconfig"
                ],
                "2": [
                    "getinfo",
                    "getconfig",
                    "setserverconfig"
                ]
            },
            "minVersion": 1,
            "path": "DownloadStation/info.cgi"
        },
        "SYNO.DownloadStation.RSS.Feed": {
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "DownloadStation/RSSfeed.cgi"
        },
        "SYNO.DownloadStation.RSS.Site": {
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "refresh"
                ]
            },
            "minVersion": 1,
            "path": "DownloadStation/RSSsite.cgi"
        },
        "SYNO.DownloadStation.Schedule": {
            "maxVersion": 1,
            "methods": {
                "1": [
                    "getconfig",
                    "setconfig"
                ]
            },
            "minVersion": 1,
            "path": "DownloadStation/schedule.cgi"
        },
        "SYNO.DownloadStation.Statistic": {
            "maxVersion": 1,
            "methods": {
                "1": [
                    "getinfo"
                ]
            },
            "minVersion": 1,
            "path": "DownloadStation/statistic.cgi"
        },
        "SYNO.DownloadStation.Task": {
            "maxVersion": 3,
            "methods": {
                "1": [
                    "list",
                    "getinfo",
                    "create",
                    "delete",
                    "resume",
                    "pause"
                ],
                "2": [
                    "list",
                    "getinfo",
                    "create",
                    "delete",
                    "resume",
                    "pause",
                    "edit"
                ],
                "3": [
                    "list",
                    "getinfo",
                    "create",
                    "delete",
                    "resume",
                    "pause",
                    "edit"
                ]
            },
            "minVersion": 1,
            "path": "DownloadStation/task.cgi"
        }
    },
    "SYNO.DownloadStation2": {
        "SYNO.DownloadStation2.BTSearch": {
            "lib": "/var/packages/DownloadStation/target/webapi/SYNO.DownloadStation2.BTSearch.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list_category",
                    "list",
                    "stop",
                    "start",
                    "list_plugin_status"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.DownloadStation2.Captcha": {
            "lib": "/var/packages/DownloadStation/target/webapi/SYNO.DownloadStation2.Captcha.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "download",
                    "set",
                    "list"
                ],
                "2": [
                    "download",
                    "set",
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.DownloadStation2.Package.Info": {
            "lib": "/var/packages/DownloadStation/target/webapi/SYNO.DownloadStation2.Package.so",
            "maxVersion": 2,
            "methods": {
                "2": [
                    "get"
                ]
            },
            "minVersion": 2,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.DownloadStation2.Package.Module": {
            "lib": "/var/packages/DownloadStation/target/webapi/SYNO.DownloadStation2.Package.so",
            "maxVersion": 2,
            "methods": {
                "2": [
                    "get",
                    "list"
                ]
            },
            "minVersion": 2,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.DownloadStation2.Package.Service": {
            "lib": "/var/packages/DownloadStation/target/webapi/SYNO.DownloadStation2.Package.so",
            "maxVersion": 2,
            "methods": {
                "2": [
                    "get"
                ]
            },
            "minVersion": 2,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.DownloadStation2.RSS.Feed": {
            "lib": "/var/packages/DownloadStation/target/webapi/SYNO.DownloadStation2.RSS.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "add",
                    "updateall",
                    "update",
                    "delete",
                    "set",
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.DownloadStation2.RSS.Filter": {
            "lib": "/var/packages/DownloadStation/target/webapi/SYNO.DownloadStation2.RSS.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "test",
                    "delete",
                    "list",
                    "set",
                    "add"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.DownloadStation2.RSS.Item": {
            "lib": "/var/packages/DownloadStation/target/webapi/SYNO.DownloadStation2.RSS.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "clear",
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.DownloadStation2.Settings.FileHosting": {
            "lib": "/var/packages/DownloadStation/target/webapi/SYNO.DownloadStation2.Settings.FileHosting.so",
            "maxVersion": 2,
            "methods": {
                "2": [
                    "verify",
                    "get",
                    "set",
                    "list",
                    "update",
                    "delete",
                    "create"
                ]
            },
            "minVersion": 2,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.DownloadStation2.Settings.AutoExtraction": {
            "lib": "/var/packages/DownloadStation/target/webapi/SYNO.DownloadStation2.Settings.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "set",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.DownloadStation2.Settings.BT": {
            "lib": "/var/packages/DownloadStation/target/webapi/SYNO.DownloadStation2.Settings.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.DownloadStation2.Settings.BTSearch": {
            "lib": "/var/packages/DownloadStation/target/webapi/SYNO.DownloadStation2.Settings.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "get",
                    "set",
                    "verify",
                    "create",
                    "delete",
                    "update_check",
                    "update",
                    "toggle_plugins",
                    "test_connection"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.DownloadStation2.Settings.Emule": {
            "lib": "/var/packages/DownloadStation/target/webapi/SYNO.DownloadStation2.Settings.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.DownloadStation2.Settings.Emule.Location": {
            "lib": "/var/packages/DownloadStation/target/webapi/SYNO.DownloadStation2.Settings.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "set",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.DownloadStation2.Settings.FtpHttp": {
            "lib": "/var/packages/DownloadStation/target/webapi/SYNO.DownloadStation2.Settings.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.DownloadStation2.Settings.Global": {
            "lib": "/var/packages/DownloadStation/target/webapi/SYNO.DownloadStation2.Settings.so",
            "maxVersion": 2,
            "methods": {
                "2": [
                    "get",
                    "set",
                    "read_progress"
                ]
            },
            "minVersion": 2,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.DownloadStation2.Settings.Location": {
            "lib": "/var/packages/DownloadStation/target/webapi/SYNO.DownloadStation2.Settings.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.DownloadStation2.Settings.Nzb": {
            "lib": "/var/packages/DownloadStation/target/webapi/SYNO.DownloadStation2.Settings.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.DownloadStation2.Settings.Rss": {
            "lib": "/var/packages/DownloadStation/target/webapi/SYNO.DownloadStation2.Settings.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.DownloadStation2.Settings.Scheduler": {
            "lib": "/var/packages/DownloadStation/target/webapi/SYNO.DownloadStation2.Settings.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.DownloadStation2.Task.BT": {
            "lib": "/var/packages/DownloadStation/target/webapi/SYNO.DownloadStation2.Task.BT.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "get",
                    "set"
                ],
                "2": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.DownloadStation2.Task.BT.File": {
            "lib": "/var/packages/DownloadStation/target/webapi/SYNO.DownloadStation2.Task.BT.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "set",
                    "list",
                    "copy"
                ],
                "2": [
                    "set",
                    "list",
                    "copy"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.DownloadStation2.Task.BT.Peer": {
            "lib": "/var/packages/DownloadStation/target/webapi/SYNO.DownloadStation2.Task.BT.so",
            "maxVersion": 2,
            "methods": {
                "2": [
                    "list"
                ]
            },
            "minVersion": 2,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.DownloadStation2.Task.BT.Tracker": {
            "lib": "/var/packages/DownloadStation/target/webapi/SYNO.DownloadStation2.Task.BT.so",
            "maxVersion": 2,
            "methods": {
                "2": [
                    "list",
                    "add",
                    "delete"
                ]
            },
            "minVersion": 2,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.DownloadStation2.Task.NZB.File": {
            "lib": "/var/packages/DownloadStation/target/webapi/SYNO.DownloadStation2.Task.NZB.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.DownloadStation2.Task.NZB.Log": {
            "lib": "/var/packages/DownloadStation/target/webapi/SYNO.DownloadStation2.Task.NZB.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.DownloadStation2.Task.eMule": {
            "lib": "/var/packages/DownloadStation/target/webapi/SYNO.DownloadStation2.Task.eMule.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list_upload"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.DownloadStation2.Task": {
            "lib": "/var/packages/DownloadStation/target/webapi/SYNO.DownloadStation2.Task.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "create",
                    "list",
                    "get",
                    "delete",
                    "pause",
                    "resume",
                    "edit"
                ],
                "2": [
                    "resume_condition",
                    "pause_condition",
                    "delete_condition",
                    "create",
                    "list",
                    "get",
                    "delete",
                    "pause",
                    "resume",
                    "edit"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.DownloadStation2.Task.Complete": {
            "lib": "/var/packages/DownloadStation/target/webapi/SYNO.DownloadStation2.Task.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "start",
                    "status",
                    "stop"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.DownloadStation2.Task.List": {
            "lib": "/var/packages/DownloadStation/target/webapi/SYNO.DownloadStation2.Task.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "get",
                    "download",
                    "delete"
                ],
                "2": [
                    "get",
                    "download",
                    "delete"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.DownloadStation2.Task.List.Polling": {
            "lib": "/var/packages/DownloadStation/target/webapi/SYNO.DownloadStation2.Task.so",
            "maxVersion": 2,
            "methods": {
                "2": [
                    "download_stop",
                    "download_status",
                    "download"
                ]
            },
            "minVersion": 2,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.DownloadStation2.Task.Source": {
            "lib": "/var/packages/DownloadStation/target/webapi/SYNO.DownloadStation2.Task.so",
            "maxVersion": 2,
            "methods": {
                "2": [
                    "download"
                ]
            },
            "minVersion": 2,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.DownloadStation2.Task.Statistic": {
            "lib": "/var/packages/DownloadStation/target/webapi/SYNO.DownloadStation2.Task.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.DownloadStation2.Thumbnail": {
            "lib": "/var/packages/DownloadStation/target/webapi/SYNO.DownloadStation2.Thumbnail.so",
            "maxVersion": 2,
            "methods": {
                "2": [
                    "get",
                    "download"
                ]
            },
            "minVersion": 2,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.DownloadStation2.eMule.Search": {
            "lib": "/var/packages/DownloadStation/target/webapi/SYNO.DownloadStation2.eMule.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "download",
                    "list",
                    "stop",
                    "start"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.DownloadStation2.eMule.Server": {
            "lib": "/var/packages/DownloadStation/target/webapi/SYNO.DownloadStation2.eMule.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get_status",
                    "connect_kad",
                    "disconnect",
                    "connect",
                    "delete",
                    "add",
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        }
    },
    "SYNO.Entry": {
        "SYNO.Entry.Request.Polling": {
            "lib": "lib/webapi_entry_polling.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "status",
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Entry.Request": {
            "lib": "lib/NotExist.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "request"
                ],
                "2": [
                    "request"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Entry.SocketIo": {
            "lib": "/usr/syno/synoman/webapi/lib/webapi_entry_socket.io.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "listeners_count",
                    "emit"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        }
    },
    "SYNO.FileStation": {
        "SYNO.FileStation.BackgroundTask": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.BackgroundTask.so",
            "maxVersion": 3,
            "methods": {
                "1": [
                    "list",
                    "clear_finished"
                ],
                "2": [
                    "list",
                    "clear_finished"
                ],
                "3": [
                    "list",
                    "clear_finished"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.CheckExist": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.Directory.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "check"
                ],
                "2": [
                    "check"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.CheckPermission": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.CheckPermission.so",
            "maxVersion": 3,
            "methods": {
                "1": [
                    "write"
                ],
                "2": [
                    "write"
                ],
                "3": [
                    "write"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.Compress": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.Compress.so",
            "maxVersion": 3,
            "methods": {
                "1": [
                    "start",
                    "status",
                    "stop"
                ],
                "2": [
                    "start",
                    "status",
                    "stop"
                ],
                "3": [
                    "start",
                    "status",
                    "stop"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.CopyMove": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.CopyMove.so",
            "maxVersion": 3,
            "methods": {
                "1": [
                    "start",
                    "status",
                    "stop"
                ],
                "2": [
                    "start",
                    "status",
                    "stop"
                ],
                "3": [
                    "start",
                    "status",
                    "stop"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.CreateFolder": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.Directory.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "create"
                ],
                "2": [
                    "create"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.Delete": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.Delete.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "start",
                    "stop",
                    "status",
                    "delete"
                ],
                "2": [
                    "start",
                    "stop",
                    "status",
                    "delete"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.DirSize": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.Directory.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "start",
                    "status",
                    "stop"
                ],
                "2": [
                    "start",
                    "status",
                    "stop"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.Download": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.Download.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "download"
                ],
                "2": [
                    "download"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.External.GoogleDrive": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.External.GoogleDrive.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "open"
                ],
                "2": [
                    "open"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.Extract": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.Extract.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list",
                    "start",
                    "status",
                    "stop"
                ],
                "2": [
                    "list",
                    "start",
                    "status",
                    "stop"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.Favorite": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.Favorite.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list",
                    "edit",
                    "delete",
                    "add",
                    "clear_broken",
                    "replace_all"
                ],
                "2": [
                    "list",
                    "edit",
                    "delete",
                    "add",
                    "clear_broken",
                    "replace_all"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.FormUpload": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.Upload.so",
            "maxVersion": 2,
            "methods": {
                "2": [
                    "start",
                    "status",
                    "cancel"
                ]
            },
            "minVersion": 2,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.Info": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.Info.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "get"
                ],
                "2": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.List": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.List.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list",
                    "list_share",
                    "getinfo"
                ],
                "2": [
                    "list",
                    "list_share",
                    "getinfo"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.MD5": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.MD5.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "start",
                    "status",
                    "stop"
                ],
                "2": [
                    "start",
                    "status",
                    "stop"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.Mount": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.Mount.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "mount_iso",
                    "mount_remote",
                    "unmount"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.Mount.List": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.Mount.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "unmount",
                    "reconnect",
                    "remount"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.Notify": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.Notify.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "all",
                    "one"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.PhotoUpload": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.Upload.so",
            "maxVersion": 3,
            "methods": {
                "2": [
                    "upload"
                ],
                "3": [
                    "upload"
                ]
            },
            "minVersion": 2,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.Property": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.Property.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "set",
                    "status",
                    "stop"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.Property.ACLOwner": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.Property.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.Property.CompressSize": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.Property.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.Property.Mtime": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.Property.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.Rename": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.Rename.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "rename"
                ],
                "2": [
                    "rename"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.Search": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.Search.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list",
                    "start",
                    "stop",
                    "clean"
                ],
                "2": [
                    "list",
                    "start",
                    "stop",
                    "clean"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.Search.History": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.Search.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set",
                    "delete"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.Settings": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.Settings.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.Sharing": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.Sharing.so",
            "maxVersion": 3,
            "methods": {
                "1": [
                    "create",
                    "list",
                    "edit",
                    "delete",
                    "clear_invalid",
                    "getinfo"
                ],
                "2": [
                    "create",
                    "list",
                    "list_share_me",
                    "edit",
                    "delete",
                    "clear_invalid",
                    "getinfo"
                ],
                "3": [
                    "create",
                    "list",
                    "list_share_me",
                    "edit",
                    "delete",
                    "clear_invalid",
                    "getinfo"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.Sharing.Download": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.Sharing.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "download"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.Snapshot": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.Snapshot.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list",
                    "history",
                    "desc"
                ],
                "2": [
                    "list",
                    "history",
                    "desc"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.Thumb": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.Thumb.so",
            "maxVersion": 3,
            "methods": {
                "1": [
                    "get"
                ],
                "2": [
                    "get"
                ],
                "3": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.Timeout": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.Misc.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "avoid"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.UIString": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.Misc.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "getjs"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.Upload": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.Upload.so",
            "maxVersion": 3,
            "methods": {
                "2": [
                    "upload"
                ],
                "3": [
                    "upload"
                ]
            },
            "minVersion": 2,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.UserGrp": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.UserGrp.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list_user",
                    "list_group",
                    "list_all"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.VFS.Connection": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.VFS.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "create",
                    "set",
                    "delete",
                    "list",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.VFS.File": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.VFS.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.VFS.GDrive": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.VFS.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "download"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.VFS.Profile": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.VFS.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "create",
                    "set",
                    "delete",
                    "get",
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.VFS.Protocol": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.VFS.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.VFS.User": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.VFS.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.VirtualFolder": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.VirtualFolder.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list"
                ],
                "2": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.Worm": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.Worm.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "get",
                    "get_share_info"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FileStation.Worm.Lock": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FileStation.Worm.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "start",
                    "stop",
                    "status"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        }
    },
    "SYNO.Finder": {
        "SYNO.Finder.AppIndexing.Search": {
            "lib": "/var/packages/SynoFinder/target/webapi/SYNO.Finder.AppIndexing.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "search"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Finder.Bookmark": {
            "lib": "/var/packages/SynoFinder/target/webapi/SYNO.Finder.Bookmark.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "del",
                    "get",
                    "add"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Finder.Elastic.SearchHistory": {
            "lib": "/var/packages/SynoFinder/target/webapi/SYNO.Finder.Elastic.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "delete",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Finder.Elastic.Spotlight": {
            "lib": "/var/packages/SynoFinder/target/webapi/SYNO.Finder.Elastic.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "boost"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Finder.Elastic.Term": {
            "lib": "/var/packages/SynoFinder/target/webapi/SYNO.Finder.Elastic.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list_avail_db",
                    "suggest"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Finder.File": {
            "lib": "/var/packages/SynoFinder/target/webapi/SYNO.Finder.File.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Finder.File.Cover": {
            "lib": "/var/packages/SynoFinder/target/webapi/SYNO.Finder.File.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Finder.File.Thumbnail": {
            "lib": "/var/packages/SynoFinder/target/webapi/SYNO.Finder.File.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Finder.FileIndexing.Folder": {
            "lib": "/var/packages/SynoFinder/target/webapi/SYNO.Finder.FileIndexing.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "reindex",
                    "delete",
                    "check",
                    "stop_check",
                    "list",
                    "list_group",
                    "summary",
                    "set",
                    "add",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Finder.FileIndexing.Highlight": {
            "lib": "/var/packages/SynoFinder/target/webapi/SYNO.Finder.FileIndexing.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "highlight"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Finder.FileIndexing.Indicate": {
            "lib": "/var/packages/SynoFinder/target/webapi/SYNO.Finder.FileIndexing.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "indicate"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Finder.FileIndexing.Search": {
            "lib": "/var/packages/SynoFinder/target/webapi/SYNO.Finder.FileIndexing.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "search"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Finder.FileIndexing.Status": {
            "lib": "/var/packages/SynoFinder/target/webapi/SYNO.Finder.FileIndexing.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "resume",
                    "pause",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Finder.FileIndexing.Term": {
            "lib": "/var/packages/SynoFinder/target/webapi/SYNO.Finder.FileIndexing.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "update"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Finder.Preference": {
            "lib": "/var/packages/SynoFinder/target/webapi/SYNO.Finder.Preference.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "set",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Finder.Settings": {
            "lib": "/var/packages/SynoFinder/target/webapi/SYNO.Finder.Settings.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "set",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Finder.UserGrp": {
            "lib": "/var/packages/SynoFinder/target/webapi/SYNO.Finder.UserGrp.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list_group",
                    "list_user"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        }
    },
    "SYNO.FolderSharing": {
        "SYNO.FolderSharing.Download": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FolderSharing.Download.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "download"
                ],
                "2": [
                    "download"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FolderSharing.List": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FolderSharing.List.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list"
                ],
                "2": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FolderSharing.Thumb": {
            "lib": "/var/packages/FileStation/target/webapi/SYNO.FolderSharing.Thumb.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "get"
                ],
                "2": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        }
    },
    "SYNO.Foto": {
        "SYNO.Foto.BackgroundTask.File": {
            "lib": "/var/packages/SynologyPhotos/target/usr/webapi/SYNO.Foto.BackgroundTask.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "copy",
                    "delete",
                    "move"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Foto.BackgroundTask.Info": {
            "lib": "/var/packages/SynologyPhotos/target/usr/webapi/SYNO.Foto.BackgroundTask.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "abort_task",
                    "clear_completed_task",
                    "get_error_detail",
                    "get_status",
                    "list_user_task"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Foto.Browse.Album": {
            "lib": "/var/packages/SynologyPhotos/target/usr/webapi/SYNO.Foto.Browse.so",
            "maxVersion": 5,
            "methods": {
                "1": [
                    "count",
                    "delete",
                    "download",
                    "get",
                    "list",
                    "set_cover",
                    "set_name",
                    "set_order"
                ],
                "2": [
                    "count",
                    "delete",
                    "download",
                    "get",
                    "get_album_list_order",
                    "list",
                    "set_album_list_order",
                    "set_cover",
                    "set_name",
                    "set_order"
                ],
                "3": [
                    "count",
                    "delete",
                    "download",
                    "get",
                    "get_album_list_display",
                    "get_album_list_order",
                    "list",
                    "set_album_list_display",
                    "set_album_list_order",
                    "set_cover",
                    "set_name",
                    "set_order"
                ],
                "4": [
                    "count",
                    "delete",
                    "download",
                    "get_album_list_display",
                    "get_album_list_order",
                    "get",
                    "list",
                    "set_album_list_display",
                    "set_album_list_order",
                    "set_cover",
                    "set_name",
                    "set_order"
                ],
                "5": [
                    "count",
                    "delete",
                    "download",
                    "get_album_list_display",
                    "get_album_list_order",
                    "get",
                    "list",
                    "set_album_list_display",
                    "set_album_list_order",
                    "set_cover",
                    "set_name",
                    "set_order"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Foto.Browse.Category": {
            "lib": "/var/packages/SynologyPhotos/target/usr/webapi/SYNO.Foto.Browse.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "get"
                ],
                "2": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Foto.Browse.Concept": {
            "lib": "/var/packages/SynologyPhotos/target/usr/webapi/SYNO.Foto.Browse.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "count",
                    "get",
                    "hide_item",
                    "list",
                    "set_cover"
                ],
                "2": [
                    "count",
                    "get",
                    "hide_item",
                    "list",
                    "set_cover",
                    "set_visibility"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Foto.Browse.ConditionAlbum": {
            "lib": "/var/packages/SynologyPhotos/target/usr/webapi/SYNO.Foto.Browse.so",
            "maxVersion": 3,
            "methods": {
                "1": [
                    "count",
                    "create",
                    "get",
                    "list",
                    "peek_item_count",
                    "set_condition",
                    "suggest"
                ],
                "2": [
                    "count",
                    "create",
                    "get",
                    "list",
                    "peek_item_count",
                    "set_condition",
                    "suggest"
                ],
                "3": [
                    "count",
                    "create",
                    "get",
                    "list",
                    "peek_item_count",
                    "set_condition",
                    "suggest"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Foto.Browse.Diff": {
            "lib": "/var/packages/SynologyPhotos/target/usr/webapi/SYNO.Foto.Browse.so",
            "maxVersion": 5,
            "methods": {
                "1": [
                    "get",
                    "get_version"
                ],
                "2": [
                    "get",
                    "get_version"
                ],
                "3": [
                    "get",
                    "get_version",
                    "list_item"
                ],
                "4": [
                    "get",
                    "get_version",
                    "list_item"
                ],
                "5": [
                    "get",
                    "get_version",
                    "list_item"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Foto.Browse.Folder": {
            "lib": "/var/packages/SynologyPhotos/target/usr/webapi/SYNO.Foto.Browse.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "copy",
                    "count",
                    "create",
                    "delete",
                    "get",
                    "list",
                    "list_parents",
                    "move",
                    "rename",
                    "set_order"
                ],
                "2": [
                    "copy",
                    "count",
                    "create",
                    "delete",
                    "get",
                    "list_parents",
                    "list",
                    "move",
                    "rename",
                    "set_cover",
                    "set_order"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Foto.Browse.GeneralTag": {
            "lib": "/var/packages/SynologyPhotos/target/usr/webapi/SYNO.Foto.Browse.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "count",
                    "create",
                    "get",
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Foto.Browse.Geocoding": {
            "lib": "/var/packages/SynologyPhotos/target/usr/webapi/SYNO.Foto.Browse.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "count",
                    "get",
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Foto.Browse.Item": {
            "lib": "/var/packages/SynologyPhotos/target/usr/webapi/SYNO.Foto.Browse.so",
            "maxVersion": 6,
            "methods": {
                "1": [
                    "add_tag",
                    "copy",
                    "count",
                    "count_with_filter",
                    "delete",
                    "get",
                    "get_exif",
                    "get_tag",
                    "list",
                    "list_basic_timeline_info",
                    "list_basic_timeline_info_with_filter",
                    "list_with_filter",
                    "move",
                    "remove_tag",
                    "rename",
                    "set"
                ],
                "2": {
                    "0": "add_tag",
                    "1": "copy",
                    "2": "count",
                    "3": "count_with_filter",
                    "4": "delete",
                    "5": "get_exif",
                    "6": "get_tag",
                    "7": "get",
                    "8": "list",
                    "9": "list_basic_timeline_info",
                    "10": "list_basic_timeline_info_with_filter",
                    "12": "list_with_filter",
                    "13": "move",
                    "14": "remove_tag",
                    "15": "rename",
                    "16": "set"
                },
                "3": [
                    "add_tag",
                    "copy",
                    "count",
                    "count_with_filter",
                    "delete",
                    "get_exif",
                    "get_tag",
                    "get",
                    "list_basic_timeline_info",
                    "list_basic_timeline_info_with_filter",
                    "list",
                    "list_with_filter",
                    "move",
                    "remove_tag",
                    "rename",
                    "set"
                ],
                "4": [
                    "add_tag",
                    "copy",
                    "count",
                    "count_with_filter",
                    "delete",
                    "get_exif",
                    "get_tag",
                    "get",
                    "list_basic_timeline_info",
                    "list_basic_timeline_info_with_filter",
                    "list",
                    "list_with_filter",
                    "move",
                    "remove_tag",
                    "rename",
                    "set"
                ],
                "5": [
                    "add_tag",
                    "copy",
                    "count",
                    "count_with_filter",
                    "delete",
                    "get_exif",
                    "get_tag",
                    "get",
                    "list_basic_timeline_info",
                    "list_basic_timeline_info_with_filter",
                    "list",
                    "list_with_filter",
                    "move",
                    "remove_tag",
                    "rename",
                    "set"
                ],
                "6": [
                    "add_tag",
                    "copy",
                    "count",
                    "count_with_filter",
                    "delete",
                    "get_exif",
                    "get_tag",
                    "get",
                    "list_all",
                    "list_basic_timeline_info",
                    "list_basic_timeline_info_with_filter",
                    "list",
                    "list_with_filter",
                    "move",
                    "remove_tag",
                    "rename",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Foto.Browse.NormalAlbum": {
            "lib": "/var/packages/SynologyPhotos/target/usr/webapi/SYNO.Foto.Browse.so",
            "maxVersion": 3,
            "methods": {
                "1": [
                    "add_item",
                    "copy",
                    "count",
                    "create",
                    "delete_item",
                    "get",
                    "list",
                    "set_unfreeze"
                ],
                "2": [
                    "add_item",
                    "copy",
                    "count",
                    "create",
                    "delete_item",
                    "get",
                    "list",
                    "set_unfreeze"
                ],
                "3": [
                    "add_item",
                    "copy",
                    "count",
                    "create",
                    "delete_item",
                    "get",
                    "list",
                    "set_unfreeze"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Foto.Browse.Person": {
            "lib": "/var/packages/SynologyPhotos/target/usr/webapi/SYNO.Foto.Browse.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "count",
                    "delete_face",
                    "get",
                    "get_migration_status",
                    "list",
                    "list_face",
                    "merge",
                    "separate",
                    "set",
                    "set_cover",
                    "show",
                    "suggest"
                ],
                "2": [
                    "count",
                    "delete_face",
                    "get",
                    "get_migration_status",
                    "list",
                    "list_face",
                    "merge",
                    "separate",
                    "set",
                    "set_cover",
                    "show",
                    "suggest"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Foto.Browse.RecentlyAdded": {
            "lib": "/var/packages/SynologyPhotos/target/usr/webapi/SYNO.Foto.Browse.so",
            "maxVersion": 5,
            "methods": {
                "1": [
                    "count",
                    "get_timeline",
                    "list",
                    "list_basic_timeline_info"
                ],
                "2": [
                    "count",
                    "get_timeline",
                    "list",
                    "list_basic_timeline_info"
                ],
                "3": [
                    "count",
                    "get_timeline",
                    "list_basic_timeline_info",
                    "list"
                ],
                "4": [
                    "count",
                    "get_timeline",
                    "list_basic_timeline_info",
                    "list"
                ],
                "5": [
                    "count",
                    "get_timeline",
                    "list_basic_timeline_info",
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Foto.Browse.Timeline": {
            "lib": "/var/packages/SynologyPhotos/target/usr/webapi/SYNO.Foto.Browse.so",
            "maxVersion": 5,
            "methods": {
                "1": [
                    "get",
                    "get_geocoding",
                    "get_geocoding_with_filter",
                    "get_with_filter"
                ],
                "2": [
                    "get_geocoding",
                    "get_geocoding_with_filter",
                    "get",
                    "get_with_filter"
                ],
                "3": {
                    "0": "get_geocoding",
                    "1": "get_geocoding_with_filter",
                    "3": "get",
                    "4": "get_with_filter"
                },
                "4": [
                    "get_geocoding",
                    "get_geocoding_with_filter",
                    "get",
                    "get_with_filter"
                ],
                "5": [
                    "get_geocoding",
                    "get_geocoding_with_filter",
                    "get",
                    "get_with_filter"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Foto.Browse.Unit": {
            "lib": "/var/packages/SynologyPhotos/target/usr/webapi/SYNO.Foto.Browse.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "count",
                    "get",
                    "get_thumbnail_status"
                ],
                "2": [
                    "count",
                    "get_thumbnail_status",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Foto.Development.Admin": {
            "lib": "/var/packages/SynologyPhotos/target/usr/webapi/SYNO.Foto.Development.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "refetch_geocoding",
                    "regenerate_concept_album",
                    "update_concept_threshold"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Foto.Download": {
            "lib": "/var/packages/SynologyPhotos/target/usr/webapi/SYNO.Foto.Download.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "download"
                ],
                "2": [
                    "calculate_cache_size",
                    "clear_cache",
                    "convert",
                    "download",
                    "get_cache_status"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Foto.Favorite": {
            "lib": "/var/packages/SynologyPhotos/target/usr/webapi/SYNO.Foto.Favorite.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Foto.Index": {
            "lib": "/var/packages/SynologyPhotos/target/usr/webapi/SYNO.Foto.Index.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "index_add",
                    "reindex",
                    "reindex_all_user"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Foto.Migration": {
            "lib": "/var/packages/SynologyPhotos/target/usr/webapi/SYNO.Foto.Migration.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get_status"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Foto.Notification": {
            "lib": "/var/packages/SynologyPhotos/target/usr/webapi/SYNO.Foto.Notification.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "subscribe",
                    "unsubscribe"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Foto.PhotoRequest": {
            "lib": "/var/packages/SynologyPhotos/target/usr/webapi/SYNO.Foto.PhotoRequest.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "create",
                    "delete",
                    "get",
                    "list",
                    "update"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Foto.PublicSharing": {
            "lib": "/var/packages/SynologyPhotos/target/usr/webapi/SYNO.Foto.PublicSharing.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "get_album_cover",
                    "get_ui_string"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Foto.Search.Filter": {
            "lib": "/var/packages/SynologyPhotos/target/usr/webapi/SYNO.Foto.Search.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list"
                ],
                "2": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Foto.Search.Search": {
            "lib": "/var/packages/SynologyPhotos/target/usr/webapi/SYNO.Foto.Search.so",
            "maxVersion": 6,
            "methods": {
                "1": [
                    "count_album",
                    "count_item",
                    "get_geocoding",
                    "get_search_timeline",
                    "list_album",
                    "list_basic_timeline_info",
                    "list_item",
                    "suggest"
                ],
                "2": [
                    "count_album",
                    "count_item",
                    "get_geocoding",
                    "get_search_timeline",
                    "list_album",
                    "list_basic_timeline_info",
                    "list_item",
                    "suggest"
                ],
                "3": [
                    "count_album",
                    "count_item",
                    "get_geocoding",
                    "get_search_timeline",
                    "list_album",
                    "list_basic_timeline_info",
                    "list_item",
                    "suggest"
                ],
                "4": [
                    "count_album",
                    "count_item",
                    "get_geocoding",
                    "get_search_timeline",
                    "list_album",
                    "list_basic_timeline_info",
                    "list_item",
                    "suggest"
                ],
                "5": [
                    "count_album",
                    "count_item",
                    "get_geocoding",
                    "get_search_timeline",
                    "list_album",
                    "list_basic_timeline_info",
                    "list_item",
                    "suggest"
                ],
                "6": [
                    "count_album",
                    "count_item",
                    "get_geocoding",
                    "get_search_timeline",
                    "list_album",
                    "list_basic_timeline_info",
                    "list_item",
                    "suggest"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Foto.Setting.Admin": {
            "lib": "/var/packages/SynologyPhotos/target/usr/webapi/SYNO.Foto.Setting.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Foto.Setting.Guest": {
            "lib": "/var/packages/SynologyPhotos/target/usr/webapi/SYNO.Foto.Setting.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Foto.Setting.MobileCompatibility": {
            "lib": "/var/packages/SynologyPhotos/target/usr/webapi/SYNO.Foto.Setting.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "system_info"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Foto.Setting.TeamSpace": {
            "lib": "/var/packages/SynologyPhotos/target/usr/webapi/SYNO.Foto.Setting.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "list_permission",
                    "set",
                    "set_enable",
                    "update_permission"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Foto.Setting.User": {
            "lib": "/var/packages/SynologyPhotos/target/usr/webapi/SYNO.Foto.Setting.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Foto.Setting.Wizard": {
            "lib": "/var/packages/SynologyPhotos/target/usr/webapi/SYNO.Foto.Setting.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Foto.Sharing.Misc": {
            "lib": "/var/packages/SynologyPhotos/target/usr/webapi/SYNO.Foto.Sharing.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list_shared_with_me_album",
                    "list_user_group"
                ],
                "2": [
                    "list_shared_with_me_album",
                    "list_user_group"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Foto.Sharing.Passphrase": {
            "lib": "/var/packages/SynologyPhotos/target/usr/webapi/SYNO.Foto.Sharing.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "get_permission",
                    "get_photo_request_info",
                    "set_shared",
                    "update"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Foto.Streaming": {
            "lib": "/var/packages/SynologyPhotos/target/usr/webapi/SYNO.Foto.Streaming.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "streaming"
                ],
                "2": [
                    "streaming"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Foto.Thumbnail": {
            "lib": "/var/packages/SynologyPhotos/target/usr/webapi/SYNO.Foto.Thumbnail.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "get"
                ],
                "2": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Foto.Udc": {
            "lib": "/var/packages/SynologyPhotos/target/usr/webapi/SYNO.Foto.Udc.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "send_event"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Foto.Upload.ConvertedFile": {
            "lib": "/var/packages/SynologyPhotos/target/usr/webapi/SYNO.Foto.Upload.so",
            "maxVersion": 3,
            "methods": {
                "1": [
                    "upload"
                ],
                "2": [
                    "list_convert_needed",
                    "set_broken",
                    "upload"
                ],
                "3": [
                    "list_convert_needed",
                    "set_broken",
                    "upload"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Foto.Upload.Item": {
            "lib": "/var/packages/SynologyPhotos/target/usr/webapi/SYNO.Foto.Upload.so",
            "maxVersion": 6,
            "methods": {
                "1": [
                    "backup_check",
                    "backup_to_path",
                    "upload",
                    "upload_to_folder"
                ],
                "2": [
                    "backup_check",
                    "backup_to_path",
                    "upload_to_folder",
                    "upload"
                ],
                "3": [
                    "backup_check",
                    "backup_to_path",
                    "upload_to_folder",
                    "upload"
                ],
                "4": [
                    "backup_check",
                    "backup_to_path",
                    "upload_to_folder",
                    "upload"
                ],
                "5": [
                    "backup_check",
                    "backup_to_path",
                    "upload_to_folder",
                    "upload"
                ],
                "6": [
                    "backup_check",
                    "backup_to_path",
                    "upload_to_folder",
                    "upload"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Foto.Upload.PhotoRequestItem": {
            "lib": "/var/packages/SynologyPhotos/target/usr/webapi/SYNO.Foto.Upload.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "upload"
                ],
                "2": [
                    "upload"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Foto.UserInfo": {
            "lib": "/var/packages/SynologyPhotos/target/usr/webapi/SYNO.Foto.UserInfo.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "me"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        }
    },
    "SYNO.FotoTeam": {
        "SYNO.FotoTeam.BackgroundTask.File": {
            "lib": "/var/packages/SynologyPhotos/target/usr/webapi/SYNO.FotoTeam.BackgroundTask.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "copy",
                    "delete",
                    "move"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FotoTeam.Browse.Concept": {
            "lib": "/var/packages/SynologyPhotos/target/usr/webapi/SYNO.FotoTeam.Browse.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "count",
                    "get",
                    "hide_item",
                    "list",
                    "set_cover"
                ],
                "2": [
                    "count",
                    "get",
                    "hide_item",
                    "list",
                    "set_cover",
                    "set_visibility"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FotoTeam.Browse.Diff": {
            "lib": "/var/packages/SynologyPhotos/target/usr/webapi/SYNO.FotoTeam.Browse.so",
            "maxVersion": 5,
            "methods": {
                "1": [
                    "get",
                    "get_version"
                ],
                "2": [
                    "get",
                    "get_version"
                ],
                "3": [
                    "get",
                    "get_version",
                    "list_item"
                ],
                "4": [
                    "get",
                    "get_version",
                    "list_item"
                ],
                "5": [
                    "get",
                    "get_version",
                    "list_item"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FotoTeam.Browse.Folder": {
            "lib": "/var/packages/SynologyPhotos/target/usr/webapi/SYNO.FotoTeam.Browse.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "copy",
                    "count",
                    "create",
                    "delete",
                    "get",
                    "list",
                    "list_parents",
                    "move",
                    "rename",
                    "set_order"
                ],
                "2": [
                    "copy",
                    "count",
                    "create",
                    "delete",
                    "get",
                    "list_parents",
                    "list",
                    "move",
                    "rename",
                    "set_cover",
                    "set_order"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FotoTeam.Browse.GeneralTag": {
            "lib": "/var/packages/SynologyPhotos/target/usr/webapi/SYNO.FotoTeam.Browse.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "count",
                    "create",
                    "get",
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FotoTeam.Browse.Geocoding": {
            "lib": "/var/packages/SynologyPhotos/target/usr/webapi/SYNO.FotoTeam.Browse.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "count",
                    "get",
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FotoTeam.Browse.Item": {
            "lib": "/var/packages/SynologyPhotos/target/usr/webapi/SYNO.FotoTeam.Browse.so",
            "maxVersion": 6,
            "methods": {
                "1": [
                    "add_tag",
                    "copy",
                    "count",
                    "count_with_filter",
                    "delete",
                    "get",
                    "get_exif",
                    "get_tag",
                    "list",
                    "list_basic_timeline_info",
                    "list_basic_timeline_info_with_filter",
                    "list_with_filter",
                    "move",
                    "remove_tag",
                    "rename",
                    "set"
                ],
                "2": {
                    "0": "add_tag",
                    "1": "copy",
                    "2": "count",
                    "3": "count_with_filter",
                    "4": "delete",
                    "5": "get_exif",
                    "6": "get_tag",
                    "7": "get",
                    "8": "list",
                    "9": "list_basic_timeline_info",
                    "10": "list_basic_timeline_info_with_filter",
                    "12": "list_with_filter",
                    "13": "move",
                    "14": "remove_tag",
                    "15": "rename",
                    "16": "set"
                },
                "3": [
                    "add_tag",
                    "copy",
                    "count",
                    "count_with_filter",
                    "delete",
                    "get_exif",
                    "get_tag",
                    "get",
                    "list_basic_timeline_info",
                    "list_basic_timeline_info_with_filter",
                    "list",
                    "list_with_filter",
                    "move",
                    "remove_tag",
                    "rename",
                    "set"
                ],
                "4": [
                    "add_tag",
                    "copy",
                    "count",
                    "count_with_filter",
                    "delete",
                    "get_exif",
                    "get_tag",
                    "get",
                    "list_basic_timeline_info",
                    "list_basic_timeline_info_with_filter",
                    "list",
                    "list_with_filter",
                    "move",
                    "remove_tag",
                    "rename",
                    "set"
                ],
                "5": [
                    "add_tag",
                    "copy",
                    "count",
                    "count_with_filter",
                    "delete",
                    "get_exif",
                    "get_tag",
                    "get",
                    "list_basic_timeline_info",
                    "list_basic_timeline_info_with_filter",
                    "list",
                    "list_with_filter",
                    "move",
                    "remove_tag",
                    "rename",
                    "set"
                ],
                "6": [
                    "add_tag",
                    "copy",
                    "count",
                    "count_with_filter",
                    "delete",
                    "get_exif",
                    "get_tag",
                    "get",
                    "list_all",
                    "list_basic_timeline_info",
                    "list_basic_timeline_info_with_filter",
                    "list",
                    "list_with_filter",
                    "move",
                    "remove_tag",
                    "rename",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FotoTeam.Browse.Person": {
            "lib": "/var/packages/SynologyPhotos/target/usr/webapi/SYNO.FotoTeam.Browse.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "count",
                    "delete_face",
                    "get",
                    "get_migration_status",
                    "list",
                    "list_face",
                    "merge",
                    "separate",
                    "set",
                    "set_cover",
                    "show",
                    "suggest"
                ],
                "2": [
                    "count",
                    "delete_face",
                    "get",
                    "get_migration_status",
                    "list",
                    "list_face",
                    "merge",
                    "separate",
                    "set",
                    "set_cover",
                    "show",
                    "suggest"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FotoTeam.Browse.RecentlyAdded": {
            "lib": "/var/packages/SynologyPhotos/target/usr/webapi/SYNO.FotoTeam.Browse.so",
            "maxVersion": 5,
            "methods": {
                "1": [
                    "count",
                    "get_timeline",
                    "list",
                    "list_basic_timeline_info"
                ],
                "2": [
                    "count",
                    "get_timeline",
                    "list",
                    "list_basic_timeline_info"
                ],
                "3": [
                    "count",
                    "get_timeline",
                    "list_basic_timeline_info",
                    "list"
                ],
                "4": [
                    "count",
                    "get_timeline",
                    "list_basic_timeline_info",
                    "list"
                ],
                "5": [
                    "count",
                    "get_timeline",
                    "list_basic_timeline_info",
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FotoTeam.Browse.Timeline": {
            "lib": "/var/packages/SynologyPhotos/target/usr/webapi/SYNO.FotoTeam.Browse.so",
            "maxVersion": 5,
            "methods": {
                "1": [
                    "get",
                    "get_geocoding",
                    "get_geocoding_with_filter",
                    "get_with_filter"
                ],
                "2": [
                    "get_geocoding",
                    "get_geocoding_with_filter",
                    "get",
                    "get_with_filter"
                ],
                "3": {
                    "0": "get_geocoding",
                    "1": "get_geocoding_with_filter",
                    "3": "get",
                    "4": "get_with_filter"
                },
                "4": [
                    "get_geocoding",
                    "get_geocoding_with_filter",
                    "get",
                    "get_with_filter"
                ],
                "5": [
                    "get_geocoding",
                    "get_geocoding_with_filter",
                    "get",
                    "get_with_filter"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FotoTeam.Browse.Unit": {
            "lib": "/var/packages/SynologyPhotos/target/usr/webapi/SYNO.FotoTeam.Browse.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "count",
                    "get",
                    "get_thumbnail_status"
                ],
                "2": [
                    "count",
                    "get_thumbnail_status",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FotoTeam.Download": {
            "lib": "/var/packages/SynologyPhotos/target/usr/webapi/SYNO.FotoTeam.Download.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "download"
                ],
                "2": [
                    "calculate_cache_size",
                    "clear_cache",
                    "convert",
                    "download",
                    "get_cache_status"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FotoTeam.Index": {
            "lib": "/var/packages/SynologyPhotos/target/usr/webapi/SYNO.FotoTeam.Index.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "index_add",
                    "reindex"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FotoTeam.Search.Filter": {
            "lib": "/var/packages/SynologyPhotos/target/usr/webapi/SYNO.FotoTeam.Search.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list"
                ],
                "2": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FotoTeam.Search.Search": {
            "lib": "/var/packages/SynologyPhotos/target/usr/webapi/SYNO.FotoTeam.Search.so",
            "maxVersion": 6,
            "methods": {
                "1": [
                    "count_item",
                    "get_geocoding",
                    "get_search_timeline",
                    "list_basic_timeline_info",
                    "list_item",
                    "suggest"
                ],
                "2": [
                    "count_album",
                    "count_item",
                    "get_geocoding",
                    "get_search_timeline",
                    "list_album",
                    "list_basic_timeline_info",
                    "list_item",
                    "suggest"
                ],
                "3": [
                    "count_album",
                    "count_item",
                    "get_geocoding",
                    "get_search_timeline",
                    "list_album",
                    "list_basic_timeline_info",
                    "list_item",
                    "suggest"
                ],
                "4": [
                    "count_album",
                    "count_item",
                    "get_geocoding",
                    "get_search_timeline",
                    "list_album",
                    "list_basic_timeline_info",
                    "list_item",
                    "suggest"
                ],
                "5": [
                    "count_album",
                    "count_item",
                    "get_geocoding",
                    "get_search_timeline",
                    "list_album",
                    "list_basic_timeline_info",
                    "list_item",
                    "suggest"
                ],
                "6": [
                    "count_album",
                    "count_item",
                    "get_geocoding",
                    "get_search_timeline",
                    "list_album",
                    "list_basic_timeline_info",
                    "list_item",
                    "suggest"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FotoTeam.Sharing.FolderBatchPermission": {
            "lib": "/var/packages/SynologyPhotos/target/usr/webapi/SYNO.FotoTeam.Sharing.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "update_all_by_member",
                    "update_by_member"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FotoTeam.Sharing.FolderPermission": {
            "lib": "/var/packages/SynologyPhotos/target/usr/webapi/SYNO.FotoTeam.Sharing.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get_config",
                    "get_folder_link",
                    "set_config",
                    "update"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FotoTeam.Sharing.Passphrase": {
            "lib": "/var/packages/SynologyPhotos/target/usr/webapi/SYNO.FotoTeam.Sharing.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "get_permission",
                    "get_photo_request_info",
                    "set_shared",
                    "update"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FotoTeam.Streaming": {
            "lib": "/var/packages/SynologyPhotos/target/usr/webapi/SYNO.FotoTeam.Streaming.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "streaming"
                ],
                "2": [
                    "streaming"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FotoTeam.Thumbnail": {
            "lib": "/var/packages/SynologyPhotos/target/usr/webapi/SYNO.FotoTeam.Thumbnail.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "get"
                ],
                "2": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FotoTeam.Upload.ConvertedFile": {
            "lib": "/var/packages/SynologyPhotos/target/usr/webapi/SYNO.FotoTeam.Upload.so",
            "maxVersion": 3,
            "methods": {
                "1": [
                    "upload"
                ],
                "2": [
                    "list_convert_needed",
                    "set_broken",
                    "upload"
                ],
                "3": [
                    "list_convert_needed",
                    "set_broken",
                    "upload"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.FotoTeam.Upload.Item": {
            "lib": "/var/packages/SynologyPhotos/target/usr/webapi/SYNO.FotoTeam.Upload.so",
            "maxVersion": 6,
            "methods": {
                "1": [
                    "backup_check",
                    "backup_to_path",
                    "upload",
                    "upload_to_folder"
                ],
                "2": [
                    "backup_check",
                    "backup_to_path",
                    "upload_to_folder",
                    "upload"
                ],
                "3": [
                    "backup_check",
                    "backup_to_path",
                    "upload_to_folder",
                    "upload"
                ],
                "4": [
                    "backup_check",
                    "backup_to_path",
                    "upload_to_folder",
                    "upload"
                ],
                "5": [
                    "backup_check",
                    "backup_to_path",
                    "upload_to_folder",
                    "upload"
                ],
                "6": [
                    "backup_check",
                    "backup_to_path",
                    "upload_to_folder",
                    "upload"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        }
    },
    "SYNO.License": {
        "SYNO.License.HA": {
            "lib": "lib/SYNO.License.HA.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get_uuid",
                    "save_vault",
                    "ha_remote_login"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        }
    },
    "SYNO.Lunbackup": {
        "SYNO.Lunbackup": {
            "lib": "/var/packages/ScsiTarget/target/lib/liblunbkp.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "rtor_name_get",
                    "space_check",
                    "dir_check",
                    "task_owner_check",
                    "task_folder_enum",
                    "file_config_get",
                    "file_config_set",
                    "cksum_do",
                    "cksum_gen",
                    "cksum_status_get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        }
    },
    "SYNO.MariaDB10": {
        "SYNO.MariaDB10.lib": {
            "lib": "/var/packages/MariaDB10/target/webapi/SYNO.MariaDB10.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get_info",
                    "apply",
                    "get_user",
                    "reset_root_password",
                    "change_password",
                    "rebuild",
                    "validate_password"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        }
    },
    "SYNO.MediaServer": {
        "SYNO.MediaServer.ClientList": {
            "lib": "/var/packages/MediaServer/target/webapi/client_list/SYNO.MediaServer.ClientList.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "clear_client",
                    "save_client",
                    "list_client",
                    "list_profile"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.MediaServer.IndexedFolder": {
            "lib": "/var/packages/MediaServer/target/webapi/indexed_folder/SYNO.MediaServer.IndexedFolder.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.MediaServer.Log": {
            "lib": "/var/packages/MediaServer/target/webapi/log/SYNO.MediaServer.Log.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "clear",
                    "download",
                    "set",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.MediaServer.Menu": {
            "lib": "/var/packages/MediaServer/target/webapi/menu/SYNO.MediaServer.Menu.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get_lang_text",
                    "set",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.MediaServer.Setting": {
            "lib": "/var/packages/MediaServer/target/webapi/setting/SYNO.MediaServer.Setting.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "set",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.MediaServer.VideoCollection": {
            "lib": "/var/packages/MediaServer/target/webapi/video_collection/SYNO.MediaServer.VideoCollection.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "set",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        }
    },
    "SYNO.Network": {
        "SYNO.Network.DHCPServer": {
            "lib": "/var/packages/DhcpServer/target/webapi/dhcpserver/SYNO.Network.DHCPServer.so",
            "maxVersion": 4,
            "methods": {
                "1": [
                    "get",
                    "set"
                ],
                "2": [
                    "get",
                    "set"
                ],
                "3": [
                    "get",
                    "set"
                ],
                "4": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Network.DHCPServer.ClientList": {
            "lib": "/var/packages/DhcpServer/target/webapi/dhcpserver/SYNO.Network.DHCPServer.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list",
                    "delete_devices"
                ],
                "2": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Network.DHCPServer.PXE": {
            "lib": "/var/packages/DhcpServer/target/webapi/dhcpserver/SYNO.Network.DHCPServer.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Network.DHCPServer.Reservation": {
            "lib": "/var/packages/DhcpServer/target/webapi/dhcpserver/SYNO.Network.DHCPServer.so",
            "maxVersion": 3,
            "methods": {
                "1": [
                    "get",
                    "set"
                ],
                "2": [
                    "get",
                    "set"
                ],
                "3": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Network.DHCPServer.Vendor": {
            "lib": "/var/packages/DhcpServer/target/webapi/dhcpserver/SYNO.Network.DHCPServer.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Network.DHCPServer.WPAD": {
            "lib": "/var/packages/DhcpServer/target/webapi/dhcpserver/SYNO.Network.DHCPServer.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        }
    },
    "SYNO.NoteStation": {
        "SYNO.NoteStation.Export.Note": {
            "lib": "/var/packages/NoteStation/target/webapi/export/SYNO.NoteStation.Export.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "start",
                    "status",
                    "stop",
                    "download"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.NoteStation.Export.Notebook": {
            "lib": "/var/packages/NoteStation/target/webapi/export/SYNO.NoteStation.Export.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "start",
                    "status",
                    "stop"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.NoteStation.Export.Word": {
            "lib": "/var/packages/NoteStation/target/webapi/export/SYNO.NoteStation.Export.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "start",
                    "status",
                    "stop",
                    "download"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.NoteStation.FTS": {
            "lib": "/var/packages/NoteStation/target/webapi/fts/SYNO.NoteStation.FTS.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "search"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.NoteStation.Import.Enex": {
            "lib": "/var/packages/NoteStation/target/webapi/import/SYNO.NoteStation.Import.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "start",
                    "status",
                    "stop"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.NoteStation.Import.Evernote": {
            "lib": "/var/packages/NoteStation/target/webapi/import/SYNO.NoteStation.Import.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "init",
                    "get_status",
                    "get_polling_task",
                    "prepare_notebooks",
                    "prepare_notebooks_status",
                    "list_notebooks",
                    "add_import_task",
                    "import",
                    "import_status",
                    "import_stop",
                    "import_lock",
                    "get_oauth_url",
                    "get_oauth_token",
                    "check_oauth_token"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.NoteStation.Import.Notebook": {
            "lib": "/var/packages/NoteStation/target/webapi/import/SYNO.NoteStation.Import.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "start",
                    "status",
                    "stop"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.NoteStation.Info": {
            "lib": "/var/packages/NoteStation/target/webapi/info/SYNO.NoteStation.Info.so",
            "maxVersion": 3,
            "methods": {
                "1": [
                    "get",
                    "searchplace"
                ],
                "2": [
                    "get",
                    "searchplace"
                ],
                "3": [
                    "get",
                    "searchplace"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.NoteStation.Note": {
            "lib": "/var/packages/NoteStation/target/webapi/note/SYNO.NoteStation.Note.so",
            "maxVersion": 4,
            "methods": {
                "1": [
                    "list",
                    "get",
                    "download",
                    "set",
                    "idle",
                    "create",
                    "delete",
                    "restore",
                    "copy"
                ],
                "2": [
                    "list",
                    "get",
                    "download",
                    "set",
                    "idle",
                    "create",
                    "delete",
                    "restore",
                    "copy"
                ],
                "3": [
                    "list",
                    "get",
                    "download",
                    "set",
                    "idle",
                    "create",
                    "delete",
                    "restore",
                    "copy"
                ],
                "4": [
                    "get_attachment_text",
                    "list",
                    "get",
                    "download",
                    "set",
                    "idle",
                    "create",
                    "delete",
                    "restore",
                    "copy"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.NoteStation.Note.AppLink": {
            "lib": "/var/packages/NoteStation/target/webapi/note/SYNO.NoteStation.Note.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "get"
                ],
                "2": [
                    "resolve",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.NoteStation.Note.AppTask": {
            "lib": "/var/packages/NoteStation/target/webapi/note/SYNO.NoteStation.Note.so",
            "maxVersion": 2,
            "methods": {
                "2": [
                    "get"
                ]
            },
            "minVersion": 2,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.NoteStation.Note.Encrypt": {
            "lib": "/var/packages/NoteStation/target/webapi/note/SYNO.NoteStation.Note.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "create",
                    "check",
                    "delete"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.NoteStation.Note.Ghost": {
            "lib": "/var/packages/NoteStation/target/webapi/note/SYNO.NoteStation.Note.so",
            "maxVersion": 3,
            "methods": {
                "2": [
                    "create"
                ],
                "3": [
                    "create"
                ]
            },
            "minVersion": 2,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.NoteStation.Note.Polling": {
            "lib": "/var/packages/NoteStation/target/webapi/note/SYNO.NoteStation.Note.so",
            "maxVersion": 3,
            "methods": {
                "1": [
                    "set",
                    "set_status",
                    "set_stop",
                    "copy",
                    "copy_status",
                    "copy_stop",
                    "create",
                    "create_status",
                    "create_stop"
                ],
                "2": [
                    "set",
                    "set_status",
                    "set_stop",
                    "copy",
                    "copy_status",
                    "copy_stop",
                    "create",
                    "create_status",
                    "create_stop"
                ],
                "3": [
                    "set",
                    "set_status",
                    "set_stop",
                    "copy",
                    "copy_status",
                    "copy_stop",
                    "create",
                    "create_status",
                    "create_stop"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.NoteStation.Note.Version": {
            "lib": "/var/packages/NoteStation/target/webapi/note/SYNO.NoteStation.Note.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "get",
                    "list",
                    "restore"
                ],
                "2": [
                    "get",
                    "list",
                    "restore"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.NoteStation.Notebook": {
            "lib": "/var/packages/NoteStation/target/webapi/notebook/SYNO.NoteStation.Notebook.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list",
                    "get",
                    "create",
                    "set",
                    "delete"
                ],
                "2": [
                    "list",
                    "get",
                    "create",
                    "set",
                    "delete"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.NoteStation.Notebook.Polling": {
            "lib": "/var/packages/NoteStation/target/webapi/notebook/SYNO.NoteStation.Notebook.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "archive",
                    "archive_status",
                    "archive_stop"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.NoteStation.Notebook.Preset": {
            "lib": "/var/packages/NoteStation/target/webapi/notebook/SYNO.NoteStation.Notebook.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.NoteStation.Permission": {
            "lib": "/var/packages/NoteStation/target/webapi/permission/SYNO.NoteStation.Permission.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "set",
                    "delete"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.NoteStation.Permission.Group": {
            "lib": "/var/packages/NoteStation/target/webapi/permission/SYNO.NoteStation.Permission.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "delete",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.NoteStation.Permission.Public": {
            "lib": "/var/packages/NoteStation/target/webapi/permission/SYNO.NoteStation.Permission.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "set",
                    "delete"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.NoteStation.Permission.User": {
            "lib": "/var/packages/NoteStation/target/webapi/permission/SYNO.NoteStation.Permission.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "set",
                    "delete"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.NoteStation.Setting": {
            "lib": "/var/packages/NoteStation/target/webapi/setting/SYNO.NoteStation.Setting.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "init",
                    "get",
                    "set"
                ],
                "2": [
                    "init",
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.NoteStation.Setting.DSM": {
            "lib": "/var/packages/NoteStation/target/webapi/setting/SYNO.NoteStation.Setting.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.NoteStation.Setting.Global": {
            "lib": "/var/packages/NoteStation/target/webapi/setting/SYNO.NoteStation.Setting.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.NoteStation.Setting.Volume": {
            "lib": "/var/packages/NoteStation/target/webapi/setting/SYNO.NoteStation.Setting.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "set",
                    "get_status"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.NoteStation.Shard": {
            "lib": "/var/packages/NoteStation/target/webapi/shard/SYNO.NoteStation.Shard.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "getjs",
                    "get",
                    "init"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.NoteStation.Shard.Link": {
            "lib": "/var/packages/NoteStation/target/webapi/shard/SYNO.NoteStation.Shard.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.NoteStation.Share.Priv": {
            "lib": "/var/packages/NoteStation/target/webapi/share/SYNO.NoteStation.Share.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list"
                ],
                "2": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.NoteStation.Shortcut": {
            "lib": "/var/packages/NoteStation/target/webapi/shortcut/SYNO.NoteStation.Shortcut.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "set",
                    "delete"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.NoteStation.Smart": {
            "lib": "/var/packages/NoteStation/target/webapi/smart/SYNO.NoteStation.Smart.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "delete",
                    "create",
                    "list",
                    "set",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.NoteStation.Stack": {
            "lib": "/var/packages/NoteStation/target/webapi/stack/SYNO.NoteStation.Stack.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "set",
                    "delete"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.NoteStation.Tag": {
            "lib": "/var/packages/NoteStation/target/webapi/tag/SYNO.NoteStation.Tag.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list",
                    "set",
                    "delete"
                ],
                "2": [
                    "list",
                    "set",
                    "delete"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.NoteStation.Todo": {
            "lib": "/var/packages/NoteStation/target/webapi/todo/SYNO.NoteStation.Todo.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list",
                    "list_timeout",
                    "get",
                    "set",
                    "create",
                    "delete"
                ],
                "2": [
                    "list",
                    "list_timeout",
                    "get",
                    "set",
                    "create",
                    "delete"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        }
    },
    "SYNO.OAUTH": {
        "SYNO.OAUTH.Client": {
            "lib": "/var/packages/OAuthService/target/webapi/SYNO.OAUTH.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "get",
                    "add",
                    "enable",
                    "disable",
                    "del"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.OAUTH.Common": {
            "lib": "/var/packages/OAuthService/target/webapi/SYNO.OAUTH.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.OAUTH.Log": {
            "lib": "/var/packages/OAuthService/target/webapi/SYNO.OAUTH.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "del",
                    "add",
                    "export"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.OAUTH.Token": {
            "lib": "/var/packages/OAuthService/target/webapi/SYNO.OAUTH.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "revoke",
                    "verify"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        }
    },
    "SYNO.Office": {
        "SYNO.Office.Dictionary": {
            "lib": "/var/packages/Spreadsheet/target/webapi/mgr/dictionary/SYNO.Office.Dictionary.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "set",
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Office.Doc.Snapshot": {
            "lib": "/var/packages/Spreadsheet/target/webapi/doc/snapshot/SYNO.Office.Doc.Snapshot.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "update",
                    "update_html"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Office.Export": {
            "lib": "/var/packages/Spreadsheet/target/webapi/mgr/export/SYNO.Office.Export.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "download",
                    "save"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Office.Import": {
            "lib": "/var/packages/Spreadsheet/target/webapi/mgr/import/SYNO.Office.Import.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "start",
                    "status",
                    "stop",
                    "convert",
                    "info",
                    "check"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Office.Info": {
            "lib": "/var/packages/Spreadsheet/target/webapi/mgr/info/SYNO.Office.Info.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Office.Info.Constants": {
            "lib": "/var/packages/Spreadsheet/target/webapi/mgr/info/SYNO.Office.Info.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Office.Locale": {
            "lib": "/var/packages/Spreadsheet/target/webapi/mgr/locale/SYNO.Office.Locale.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "list_datetime",
                    "list_currency",
                    "get_default",
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Office.Log": {
            "lib": "/var/packages/Spreadsheet/target/webapi/mgr/log/SYNO.Office.Log.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "create"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Office.Metrics": {
            "lib": "/var/packages/Spreadsheet/target/webapi/mgr/metrics/SYNO.Office.Metrics.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Office.Node": {
            "lib": "/var/packages/Spreadsheet/target/webapi/mgr/node/SYNO.Office.Node.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "get",
                    "set",
                    "create",
                    "delete",
                    "copy"
                ],
                "2": [
                    "touch",
                    "copy"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Office.Node.Attachment": {
            "lib": "/var/packages/Spreadsheet/target/webapi/mgr/node_attachment/SYNO.Office.Node.Attachment.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "create",
                    "get",
                    "delete",
                    "list"
                ],
                "2": [
                    "list",
                    "delete",
                    "get",
                    "create"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Office.Node.Delete": {
            "lib": "/var/packages/Spreadsheet/target/webapi/mgr/node/SYNO.Office.Node.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "start",
                    "status",
                    "stop"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Office.Node.Encrypt": {
            "lib": "/var/packages/Spreadsheet/target/webapi/mgr/node/SYNO.Office.Node.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "check"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Office.Node.Owner": {
            "lib": "/var/packages/Spreadsheet/target/webapi/mgr/node/SYNO.Office.Node.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Office.Node.Version": {
            "lib": "/var/packages/Spreadsheet/target/webapi/mgr/version/SYNO.Office.Node.Version.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "list",
                    "restore",
                    "rename"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Office.Notification": {
            "lib": "/var/packages/Spreadsheet/target/webapi/mgr/notification/SYNO.Office.Notification.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "send"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Office.OFile": {
            "lib": "/var/packages/Spreadsheet/target/webapi/mgr/ofile/SYNO.Office.OFile.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "update"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Office.Permission": {
            "lib": "/var/packages/Spreadsheet/target/webapi/mgr/permission/SYNO.Office.Permission.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "check"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Office.Permission.User": {
            "lib": "/var/packages/Spreadsheet/target/webapi/mgr/permission/SYNO.Office.Permission.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "check"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Office.Presentation.Snapshot": {
            "lib": "/var/packages/Spreadsheet/target/webapi/presentation/snapshot/SYNO.Office.Presentation.Snapshot.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "update"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Office.Resource": {
            "lib": "/var/packages/Spreadsheet/target/webapi/mgr/resource/SYNO.Office.Resource.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "get"
                ],
                "2": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Office.SCIM.Photo": {
            "lib": "/var/packages/Spreadsheet/target/webapi/mgr/scim/SYNO.Office.SCIM.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Office.SCIM.User": {
            "lib": "/var/packages/Spreadsheet/target/webapi/mgr/scim/SYNO.Office.SCIM.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Office.SCIM.UserGroup": {
            "lib": "/var/packages/Spreadsheet/target/webapi/mgr/scim/SYNO.Office.SCIM.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Office.Setting": {
            "lib": "/var/packages/Spreadsheet/target/webapi/mgr/setting/SYNO.Office.Setting.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Office.Setting.Font": {
            "lib": "/var/packages/Spreadsheet/target/webapi/mgr/setting/SYNO.Office.Setting.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "add",
                    "enable",
                    "disable",
                    "delete"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Office.Setting.Person": {
            "lib": "/var/packages/Spreadsheet/target/webapi/mgr/setting/SYNO.Office.Setting.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Office.Setting.System": {
            "lib": "/var/packages/Spreadsheet/target/webapi/mgr/setting/SYNO.Office.Setting.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Office.Setting.UI": {
            "lib": "/var/packages/Spreadsheet/target/webapi/mgr/setting/SYNO.Office.Setting.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Office.Shard": {
            "lib": "/var/packages/Spreadsheet/target/webapi/mgr/shard/SYNO.Office.Shard.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Office.Shard.Def": {
            "lib": "/var/packages/Spreadsheet/target/webapi/mgr/shard/SYNO.Office.Shard.Def.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Office.Shard.Framework": {
            "lib": "/var/packages/Spreadsheet/target/webapi/mgr/shard/SYNO.Office.Shard.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "init"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Office.Shard.Info": {
            "lib": "/var/packages/Spreadsheet/target/webapi/mgr/shard/SYNO.Office.Shard.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Office.Shard.JSConfig": {
            "lib": "/var/packages/Spreadsheet/target/webapi/mgr/shard/SYNO.Office.Shard.JSConfig.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Office.Shard.Session": {
            "lib": "/var/packages/Spreadsheet/target/webapi/mgr/shard/SYNO.Office.Shard.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Office.Shard.Token": {
            "lib": "/var/packages/Spreadsheet/target/webapi/mgr/shard/SYNO.Office.Shard.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Office.Shard.Type": {
            "lib": "/var/packages/Spreadsheet/target/webapi/mgr/shard/SYNO.Office.Shard.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Office.Sheet.MruFc": {
            "lib": "/var/packages/Spreadsheet/target/webapi/sheet/mru_fc/SYNO.Office.Sheet.MruFc.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "create"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Office.Sheet.Snapshot": {
            "lib": "/var/packages/Spreadsheet/target/webapi/sheet/snapshot/SYNO.Office.Sheet.Snapshot.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "copy_images",
                    "get",
                    "gc",
                    "init"
                ],
                "2": [
                    "create"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Office.Sheet.Snapshot.History": {
            "lib": "/var/packages/Spreadsheet/target/webapi/sheet/snapshot/SYNO.Office.Sheet.Snapshot.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Office.Snapshot": {
            "lib": "/var/packages/Spreadsheet/target/webapi/mgr/snapshot/SYNO.Office.Snapshot.so",
            "maxVersion": 4,
            "methods": {
                "1": [
                    "create",
                    "get"
                ],
                "2": [
                    "create",
                    "get"
                ],
                "3": [
                    "get"
                ],
                "4": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Office.Template": {
            "lib": "/var/packages/Spreadsheet/target/webapi/mgr/template/SYNO.Office.Template.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "publish",
                    "save",
                    "make",
                    "list",
                    "get",
                    "set",
                    "delete",
                    "request"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Office.Template.Permission": {
            "lib": "/var/packages/Spreadsheet/target/webapi/mgr/template_permission/SYNO.Office.Template.Permission.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Office.Template.Sharing.Group": {
            "lib": "/var/packages/Spreadsheet/target/webapi/mgr/template/SYNO.Office.Template.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Office.Template.Thumb": {
            "lib": "/var/packages/Spreadsheet/target/webapi/mgr/template_thumb/SYNO.Office.Template.Thumb.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Office.Theme": {
            "lib": "/var/packages/Spreadsheet/target/webapi/mgr/theme/SYNO.Office.Theme.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "apply",
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Office.Theme.Thumb": {
            "lib": "/var/packages/Spreadsheet/target/webapi/mgr/theme/SYNO.Office.Theme.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Office.UserStatistics.Event": {
            "lib": "/var/packages/Spreadsheet/target/webapi/mgr/user_statistics/SYNO.Office.UserStatistics.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "create"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Office.Video": {
            "lib": "/var/packages/Spreadsheet/target/webapi/mgr/video/SYNO.Office.Video.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "download"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Office.Video.Thumb": {
            "lib": "/var/packages/Spreadsheet/target/webapi/mgr/video/SYNO.Office.Video.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        }
    },
    "SYNO.Package": {
        "SYNO.Package": {
            "lib": "lib/SYNO.Package.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        }
    },
    "SYNO.PersonMailAccount": {
        "SYNO.PersonMailAccount": {
            "lib": "lib/webapi_emailaccount.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "set",
                    "delete",
                    "get",
                    "update",
                    "test"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.PersonMailAccount.Contacts": {
            "lib": "lib/webapi_emailaccount.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.PersonMailAccount.Mail": {
            "lib": "lib/webapi_emailaccount.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "send",
                    "status",
                    "stop",
                    "clean"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.PersonMailAccount.Mail.Oauth": {
            "lib": "lib/webapi_emailaccount.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "outlook",
                    "gmail"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        }
    },
    "SYNO.Personal": {
        "SYNO.Personal.Application.Info": {
            "lib": "/var/packages/SynologyApplicationService/target/webapi/application/SYNO.Personal.Application.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "setorder",
                    "get_autotest_log"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Personal.Application.Info.Local": {
            "lib": "/var/packages/SynologyApplicationService/target/webapi/application/SYNO.Personal.Application.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Personal.MailAccount": {
            "lib": "/var/packages/SynologyApplicationService/target/webapi/mail/SYNO.Personal.MailAccount.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "set",
                    "delete",
                    "get",
                    "update",
                    "test"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Personal.MailAccount.Contacts": {
            "lib": "/var/packages/SynologyApplicationService/target/webapi/mail/SYNO.Personal.MailAccount.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Personal.MailAccount.Mail": {
            "lib": "/var/packages/SynologyApplicationService/target/webapi/mail/SYNO.Personal.MailAccount.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "send",
                    "status",
                    "stop",
                    "clean"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Personal.Notification.Conf": {
            "lib": "/var/packages/SynologyApplicationService/target/webapi/notification/SYNO.Personal.Notification.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "get",
                    "set"
                ],
                "2": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Personal.Notification.Device": {
            "lib": "/var/packages/SynologyApplicationService/target/webapi/notification/SYNO.Personal.Notification.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "unpair",
                    "list"
                ],
                "2": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Personal.Notification.Event": {
            "lib": "/var/packages/SynologyApplicationService/target/webapi/notification/SYNO.Personal.Notification.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "get",
                    "delete",
                    "list",
                    "send"
                ],
                "2": [
                    "list",
                    "delete"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Personal.Notification.Filter": {
            "lib": "/var/packages/SynologyApplicationService/target/webapi/notification/SYNO.Personal.Notification.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "set",
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Personal.Notification.GDPR": {
            "lib": "/var/packages/SynologyApplicationService/target/webapi/notification/SYNO.Personal.Notification.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "set",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Personal.Notification.Identifier": {
            "lib": "/var/packages/SynologyApplicationService/target/webapi/notification/SYNO.Personal.Notification.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Personal.Notification.Mobile": {
            "lib": "/var/packages/SynologyApplicationService/target/webapi/notification/SYNO.Personal.Notification.so",
            "maxVersion": 3,
            "methods": {
                "1": [
                    "stat",
                    "pair",
                    "unpair"
                ],
                "2": [
                    "stat",
                    "pair",
                    "unpair"
                ],
                "3": [
                    "stat",
                    "pair",
                    "unpair"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Personal.Notification.Settings": {
            "lib": "/var/packages/SynologyApplicationService/target/webapi/notification/SYNO.Personal.Notification.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "setup",
                    "set",
                    "get"
                ],
                "2": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Personal.Notification.Token": {
            "lib": "/var/packages/SynologyApplicationService/target/webapi/notification/SYNO.Personal.Notification.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Personal.Notification.VapidPublicKey": {
            "lib": "/var/packages/SynologyApplicationService/target/webapi/notification/SYNO.Personal.Notification.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Personal.Profile": {
            "lib": "/var/packages/SynologyApplicationService/target/webapi/profile/SYNO.Personal.Profile.so",
            "maxVersion": 3,
            "methods": {
                "1": [
                    "list",
                    "search",
                    "set",
                    "get"
                ],
                "2": [
                    "list",
                    "get"
                ],
                "3": [
                    "get",
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Personal.Profile.Photo": {
            "lib": "/var/packages/SynologyApplicationService/target/webapi/profile/SYNO.Personal.Profile.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "get",
                    "delete",
                    "upload"
                ],
                "2": [
                    "get",
                    "get_encoded"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        }
    },
    "SYNO.Remote": {
        "SYNO.Remote.Credential": {
            "lib": "lib/SYNO.Remote.Credential.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Remote.Credential.Challenge": {
            "lib": "lib/SYNO.Remote.Credential.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Remote.Credential.Info": {
            "lib": "lib/SYNO.Remote.Credential.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Remote.Credential.Verifier": {
            "lib": "lib/SYNO.Remote.Credential.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        }
    },
    "SYNO.ResourceMonitor": {
        "SYNO.ResourceMonitor.EventRule": {
            "lib": "lib/SYNO.ResourceMonitor.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "get",
                    "set",
                    "delete",
                    "onoff"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.ResourceMonitor.Log": {
            "lib": "lib/SYNO.ResourceMonitor.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "clear",
                    "export"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.ResourceMonitor.Setting": {
            "lib": "lib/SYNO.ResourceMonitor.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        }
    },
    "SYNO.S2S": {
        "SYNO.S2S.Server": {
            "lib": "lib/libS2SServer.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.S2S.Server.Pair": {
            "lib": "lib/libS2SServerPair.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "get",
                    "delete"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.S2S.Client": {
            "lib": "lib/libS2SClient.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list_server"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.S2S.Client.Job": {
            "lib": "lib/libS2SClientJob.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "get",
                    "set",
                    "create",
                    "delete",
                    "start",
                    "stop",
                    "test_connection",
                    "export_log"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        }
    },
    "SYNO.SAS": {
        "SYNO.SAS.APIRunner": {
            "lib": "/var/packages/SynologyApplicationService/target/webapi/apirunner/SYNO.SAS.APIRunner.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "upload",
                    "adapter",
                    "exec"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SAS.APIRunner.Chatbot": {
            "lib": "/var/packages/SynologyApplicationService/target/webapi/apirunner/SYNO.SAS.APIRunner.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "receive"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SAS.Encryption": {
            "lib": "/var/packages/SynologyApplicationService/target/webapi/encryption/SYNO.SAS.Encryption.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "status",
                    "exchange"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SAS.Group": {
            "lib": "/var/packages/SynologyApplicationService/target/webapi/group/SYNO.SAS.Group.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SAS.Group.Members": {
            "lib": "/var/packages/SynologyApplicationService/target/webapi/group/SYNO.SAS.Group.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "add",
                    "remove",
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SAS.Guest": {
            "lib": "/var/packages/SynologyApplicationService/target/webapi/guest/SYNO.SAS.Guest.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "notify",
                    "authorize",
                    "cancel",
                    "stat",
                    "invite",
                    "set",
                    "get",
                    "get_email",
                    "get_package_url"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        }
    },
    "SYNO.SDS": {
        "SYNO.SDS.Backup.Client.Common.Log": {
            "lib": "/var/packages/HyperBackup/target/webapi/SYNO.SDS.Backup.Client.Common.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "export"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SDS.Backup.Client.Common.Statistic": {
            "lib": "/var/packages/HyperBackup/target/webapi/SYNO.SDS.Backup.Client.Common.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "config_set",
                    "config_get",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SDS.Backup.Client.Common.Target": {
            "lib": "/var/packages/HyperBackup/target/webapi/SYNO.SDS.Backup.Client.Common.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "password_verify",
                    "private_key_verify"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SDS.Backup.Client.Common.Version": {
            "lib": "/var/packages/HyperBackup/target/webapi/SYNO.SDS.Backup.Client.Common.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "check_file_log",
                    "download_file_log"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SDS.Backup.Client.Explore.File": {
            "lib": "/var/packages/HyperBackup/target/webapi/SYNO.SDS.Backup.Client.Explore.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list",
                    "copy",
                    "restore",
                    "download"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SDS.Backup.Client.Explore.Folder": {
            "lib": "/var/packages/HyperBackup/target/webapi/SYNO.SDS.Backup.Client.Explore.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SDS.Backup.Client.Explore.Job": {
            "lib": "/var/packages/HyperBackup/target/webapi/SYNO.SDS.Backup.Client.Explore.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list",
                    "cancel"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SDS.Backup.Client.Explore.Target": {
            "lib": "/var/packages/HyperBackup/target/webapi/SYNO.SDS.Backup.Client.Explore.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SDS.Backup.Client.Explore.Version": {
            "lib": "/var/packages/HyperBackup/target/webapi/SYNO.SDS.Backup.Client.Explore.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list",
                    "summary"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SDS.Backup.Client.Fuse.Target": {
            "lib": "/var/packages/HyperBackup/target/webapi/SYNO.SDS.Backup.Client.Fuse.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get_avail_mountpoint",
                    "mount_by_password",
                    "mount_by_private",
                    "umount"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        }
    },
    "SYNO.SVSEXT": {
        "SYNO.SVSEXT.CMSActivation": {
            "lib": "/var/packages/SurveillanceVideoExtension/target/usr/webapi/SYNO.SVSEXT.CMSActivation.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "validate",
                    "activate"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        }
    },
    "SYNO.SecureSignIn": {
        "SYNO.SecureSignIn.AMFA.Mail.Ex": {
            "lib": "/var/packages/SecureSignIn/target/webapi/amfa/SYNO.SecureSignIn.AMFA.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "verify",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SecureSignIn.AMFA.Policy": {
            "lib": "/var/packages/SecureSignIn/target/webapi/amfa/SYNO.SecureSignIn.AMFA.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "set",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SecureSignIn.AMFA.SuggestConn": {
            "lib": "/var/packages/SecureSignIn/target/webapi/amfa/SYNO.SecureSignIn.AMFA.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SecureSignIn.Authenticator": {
            "lib": "/var/packages/SecureSignIn/target/webapi/authenticator/SYNO.SecureSignIn.Authenticator.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "revoke",
                    "revokeAll",
                    "update"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SecureSignIn.Authenticator.Ex": {
            "lib": "/var/packages/SecureSignIn/target/webapi/authenticator/SYNO.SecureSignIn.Authenticator.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "revoke",
                    "revokeAll"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SecureSignIn.Authenticator.Info": {
            "lib": "/var/packages/SecureSignIn/target/webapi/authenticator/SYNO.SecureSignIn.Authenticator.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "get"
                ],
                "2": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SecureSignIn.Authenticator.Registration": {
            "lib": "/var/packages/SecureSignIn/target/webapi/authenticator/SYNO.SecureSignIn.Authenticator.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "register",
                    "available"
                ],
                "2": [
                    "register",
                    "invite"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SecureSignIn.Authenticator.Registration.Ex": {
            "lib": "/var/packages/SecureSignIn/target/webapi/authenticator/SYNO.SecureSignIn.Authenticator.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "available"
                ],
                "2": [
                    "invite"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SecureSignIn.Authenticator.Request": {
            "lib": "/var/packages/SecureSignIn/target/webapi/authenticator/SYNO.SecureSignIn.Authenticator.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "revoke",
                    "status"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SecureSignIn.Authenticator.Verdict": {
            "lib": "/var/packages/SecureSignIn/target/webapi/authenticator/SYNO.SecureSignIn.Authenticator.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "get",
                    "approve",
                    "deny"
                ],
                "2": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SecureSignIn.Fido.Manage": {
            "lib": "/var/packages/SecureSignIn/target/webapi/fido/SYNO.SecureSignIn.Fido.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "update",
                    "delete",
                    "deleteAll"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SecureSignIn.Fido.Manage.Ex": {
            "lib": "/var/packages/SecureSignIn/target/webapi/fido/SYNO.SecureSignIn.Fido.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "update",
                    "delete",
                    "deleteAll"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SecureSignIn.Fido.Register": {
            "lib": "/var/packages/SecureSignIn/target/webapi/fido/SYNO.SecureSignIn.Fido.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get_attest",
                    "register"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SecureSignIn.Fido.Register.Ex": {
            "lib": "/var/packages/SecureSignIn/target/webapi/fido/SYNO.SecureSignIn.Fido.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get_attest",
                    "register"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SecureSignIn.Method": {
            "lib": "/var/packages/SecureSignIn/target/webapi/method/SYNO.SecureSignIn.Method.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SecureSignIn.Method.Admin": {
            "lib": "/var/packages/SecureSignIn/target/webapi/method/SYNO.SecureSignIn.Method.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "reset"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SecureSignIn.Method.Ex": {
            "lib": "/var/packages/SecureSignIn/target/webapi/method/SYNO.SecureSignIn.Method.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "get_user",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SecureSignIn.Package": {
            "lib": "/var/packages/SecureSignIn/target/webapi/package/SYNO.SecureSignIn.Package.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SecureSignIn.Package.Ex": {
            "lib": "/var/packages/SecureSignIn/target/webapi/package/SYNO.SecureSignIn.Package.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SecureSignIn.Package.Request": {
            "lib": "/var/packages/SecureSignIn/target/webapi/package/SYNO.SecureSignIn.Package.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "available"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        }
    },
    "SYNO.SecurityAdvisor": {
        "SYNO.SecurityAdvisor.Conf": {
            "lib": "lib/SYNO.SecurityAdvisor.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "set",
                    "get",
                    "init"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SecurityAdvisor.Conf.Checklist": {
            "lib": "lib/SYNO.SecurityAdvisor.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SecurityAdvisor.Conf.Checklist.Alert": {
            "lib": "lib/SYNO.SecurityAdvisor.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SecurityAdvisor.Conf.Location": {
            "lib": "lib/SYNO.SecurityAdvisor.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SecurityAdvisor.LoginActivity": {
            "lib": "lib/SYNO.SecurityAdvisor.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SecurityAdvisor.LoginActivity.User": {
            "lib": "lib/SYNO.SecurityAdvisor.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SecurityAdvisor.Report": {
            "lib": "lib/SYNO.SecurityAdvisor.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "create"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SecurityAdvisor.Report.HTML": {
            "lib": "lib/SYNO.SecurityAdvisor.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "open"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        }
    },
    "SYNO.ShareLink": {
        "SYNO.ShareLink.Action": {
            "lib": "/var/packages/Calendar/target/webapi/SYNO.ShareLink.Action.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "convert",
                    "upload",
                    "copy",
                    "remove",
                    "link_by_appid",
                    "list"
                ],
                "2": [
                    "upload",
                    "remove",
                    "link_by_appid",
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.ShareLink.Download": {
            "lib": "/var/packages/Calendar/target/webapi/SYNO.ShareLink.Download.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "download"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.ShareLink.Manage": {
            "lib": "/var/packages/Calendar/target/webapi/SYNO.ShareLink.Manage.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get_config",
                    "set_config",
                    "get_quota"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        }
    },
    "SYNO.Snap": {
        "SYNO.Snap.Usage.Share": {
            "lib": "lib/SYNO.Snap.Usage.Share.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "start",
                    "status",
                    "get_report",
                    "cancel",
                    "clean",
                    "get_conf",
                    "set_conf"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        }
    },
    "SYNO.Storage": {
        "SYNO.Storage.CGI.BtrfsDedupe": {
            "lib": "StorageManager/libStorage.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get_status",
                    "manual_dedupe",
                    "dry_run",
                    "get_volume_info",
                    "set_volume_schedule_config",
                    "set_schedule_plan",
                    "get_schedule_plan",
                    "check_quota",
                    "rescan_quota_v2",
                    "set_reclaim_type",
                    "stop"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Storage.CGI.Cache.Protection": {
            "lib": "StorageManager/libStorage.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get_config",
                    "update_config",
                    "enable_passive",
                    "disable_passive",
                    "get_status",
                    "get_status_all"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Storage.CGI.Check": {
            "lib": "StorageManager/libStorage.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "do_disk_scan",
                    "remove_ask_for_remap_scan",
                    "remove_ask_for_wcache_lost_data_scrubbing",
                    "remove_ask_for_fsck_scan",
                    "remove_ask_for_fsck",
                    "is_data_scrubbing",
                    "do_data_scrubbing",
                    "ignore_data_scrubbing",
                    "is_building",
                    "reboot_after_rebuild",
                    "should_ask_for_fsck_scan"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Storage.CGI.DetectedPool": {
            "lib": "StorageManager/libStorage.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "assemble",
                    "remove"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Storage.CGI.DualEnclosure": {
            "lib": "StorageManager/libStorage.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "load"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Storage.CGI.Enclosure": {
            "lib": "StorageManager/libStorage.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "load",
                    "exp_fw_update",
                    "exp_fw_fail_get",
                    "exp_fw_update_list_get",
                    "exp_fw_update_status_get",
                    "exp_fw_update_cancel_notify",
                    "is_exp_connected",
                    "sha_exp_fw_update",
                    "sha_exp_fw_fail_get",
                    "sha_exp_fw_update_list_get",
                    "sha_exp_fw_update_status_get",
                    "sha_exp_fw_update_cancel_notify",
                    "sha_is_exp_connected"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Storage.CGI.EncryptionKeyVault": {
            "lib": "StorageManager/libStorage.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "enable",
                    "disable",
                    "verify_passwd",
                    "reset",
                    "repair",
                    "set_autounlock_key",
                    "get_info",
                    "pack_for_ma",
                    "set_for_ma",
                    "sync_to_passive"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Storage.CGI.EncryptionKeyVault.UnlockMode": {
            "lib": "StorageManager/libStorage.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get_passwd_wrong_record",
                    "enter_passwd",
                    "skip_passwd"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Storage.CGI.Flashcache": {
            "lib": "StorageManager/libStorage.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "check_system_raid",
                    "configure",
                    "shared_cache_config_get",
                    "shared_cache_config_set",
                    "check_can_create",
                    "is_redundancy_degraded",
                    "estimate_raid_size",
                    "estimate_mem_size",
                    "check_volume_abnormal_cant_create_cache",
                    "remove",
                    "remove_cancel",
                    "repair",
                    "add_drive",
                    "create_feasibility_hard_check",
                    "enable",
                    "check_can_lock_space",
                    "advisor_poll",
                    "check_pin_metadata_and_rec_size",
                    "advisor_history_get",
                    "advisor_start",
                    "advisor_stop",
                    "replace"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Storage.CGI.HddMan": {
            "lib": "StorageManager/libStorage.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set",
                    "send_health_report",
                    "set_all_nodes"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Storage.CGI.KMIP": {
            "lib": "StorageManager/libStorage.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set",
                    "erase_all_data",
                    "transfer_data",
                    "get_key_list",
                    "delete_key",
                    "test_conn",
                    "get_server_hostname",
                    "check_loop",
                    "get_version_info",
                    "import_cert",
                    "list_cert",
                    "set_cert",
                    "remove_cert",
                    "renew_cert",
                    "import_server_ca"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Storage.CGI.Pool": {
            "lib": "StorageManager/libStorage.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "pre_delete_check",
                    "cancel_data_scrubbing",
                    "pause_data_scrubbing",
                    "create",
                    "data_scrubbing",
                    "data_scrubbing_plain",
                    "delete",
                    "deactivate",
                    "edit_desc",
                    "get_setting",
                    "set_setting",
                    "enum_resource",
                    "estimate_size",
                    "expand_by_add_disk",
                    "expand_unallocated",
                    "expand_unfinished_shr",
                    "migrate",
                    "repair",
                    "replace",
                    "check_fast_repair",
                    "is_disk_detected_old_info",
                    "reassemble",
                    "remove_missing_pool",
                    "update_raid_sb_cache",
                    "remove_raid_sb_cache"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Storage.CGI.Scrubbing": {
            "lib": "StorageManager/libStorage.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get_state"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Storage.CGI.Smart": {
            "lib": "StorageManager/libStorage.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get_health_info",
                    "get_smart_info",
                    "secure_erase",
                    "list",
                    "get_latest_online_drive_db_info",
                    "update_smartctl_db",
                    "smart_warning_set",
                    "smart_warning_get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Storage.CGI.Smart.Scheduler": {
            "lib": "StorageManager/libStorage.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set",
                    "list",
                    "delete",
                    "run",
                    "change_state"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Storage.CGI.Spare": {
            "lib": "StorageManager/libStorage.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "add",
                    "edit",
                    "delete",
                    "potential_spares_dump",
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Storage.CGI.Spare.Conf": {
            "lib": "StorageManager/libStorage.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Storage.CGI.Storage": {
            "lib": "StorageManager/libStorage.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "load_info",
                    "load_bad_disks",
                    "login_check",
                    "repair_sys_partition",
                    "repair_system_partition",
                    "repair_system_partition_list",
                    "repair_rootbackup",
                    "set_schedule_plan",
                    "get_schedule_plan",
                    "set_resync_speed",
                    "get_resync_speed",
                    "set_data_scrubbing_schedule",
                    "set_data_scrubbing_schedule_status",
                    "set_fast_repair_config",
                    "get_fast_repair_config",
                    "set_auto_repair_config",
                    "get_auto_repair_config",
                    "get_sche_task_list",
                    "reload_raid_config",
                    "get_space_reclaim_status",
                    "get_space_reclaim_schedule",
                    "set_space_reclaim_schedule",
                    "delay_space_reclaim",
                    "delete_space_reclaim_background_task",
                    "get_mib_collector_result"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Storage.CGI.TaipeiEnclosure": {
            "lib": "StorageManager/libStorage.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "load"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Storage.CGI.Volume": {
            "lib": "StorageManager/libStorage.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "pre_delete_check",
                    "cancel_data_scrubbing",
                    "pause_data_scrubbing",
                    "cancel_defrag",
                    "cancel_fs_scrubbing",
                    "create_on_existing_pool",
                    "create",
                    "data_scrubbing",
                    "defrag",
                    "delete",
                    "deploy_unused",
                    "enum_resource",
                    "estimate_size",
                    "expand_by_add_disk",
                    "expand_pool_child",
                    "expand_unallocated",
                    "expand_unfinished_shr",
                    "convert_shr_to_pool",
                    "convert_shr_without_drive",
                    "fs_scrubbing",
                    "migrate",
                    "next_trim_time_get",
                    "repair",
                    "ssd_trim_get",
                    "ssd_trim_save",
                    "vol_extent_size_get",
                    "vol_extent_size_set",
                    "transfer_to_rw",
                    "get_space_usage",
                    "enable_space_usage",
                    "disable_space_usage",
                    "set_setting",
                    "failover_keep_rw",
                    "get_dump_volumes",
                    "unlock_by_vault",
                    "get_recovery_key",
                    "export_recovery_key",
                    "fs_info_on_pool_meta_set",
                    "fs_info_on_pool_meta_update",
                    "change_recovery_key",
                    "set_dek",
                    "clean_dek",
                    "unlock_by_recovery_key",
                    "get_recovery_key_info"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Storage.CGI.Volume.Installer": {
            "lib": "StorageManager/libStorage.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "quick_create_precheck",
                    "quick_create"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.Storage.CGI.Volume.OfflineOp": {
            "lib": "StorageManager/libStorage.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "pre_estimate",
                    "execute",
                    "stop"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        }
    },
    "SYNO.SupportService": {
        "SYNO.SupportService.Setting": {
            "lib": "/var/packages/SupportService/target/webapi/SYNO.SupportService.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        }
    },
    "SYNO.SurveillanceStation": {
        "SYNO.SurveillanceStation.ActionRule": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/ActionRule/src/SYNO.SurveillanceStation.ActionRule.so",
            "maxVersion": 3,
            "methods": {
                "1": [
                    "List",
                    "Save",
                    "Delete",
                    "Enable",
                    "Disable",
                    "ListHistory",
                    "DeleteHistory",
                    "SendSsdCmd",
                    "SendActruledCmd",
                    "DownloadHistory",
                    "SendData2Player",
                    "SendData2VS"
                ],
                "2": [
                    "List",
                    "Save"
                ],
                "3": [
                    "Save",
                    "List",
                    "Enable",
                    "Disable",
                    "ListHistory",
                    "DeleteHistory",
                    "SendSsdCmd",
                    "SendActruledCmd",
                    "DownloadHistory",
                    "LoadAdvanced",
                    "SaveAdvanced",
                    "SendData2Player",
                    "SendData2VS",
                    "GetDeviceDIStatus",
                    "ListViewerTriggerRule",
                    "TriggerViewerRule",
                    "GetSampleIngredient"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.AddOns": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/AddOns/src/SYNO.SurveillanceStation.AddOns.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "List",
                    "Update",
                    "Enable",
                    "Disable",
                    "BatchEnable",
                    "Restart",
                    "GetInfo",
                    "GetPkgInfo",
                    "GetAppsStatus",
                    "SetAutoUpdate",
                    "GetUpdateInfo",
                    "CheckUpdateInfo",
                    "CheckEnableDone",
                    "Upload",
                    "Restore",
                    "DownloadStart",
                    "DownloadProgress",
                    "DownloadCancel"
                ],
                "2": [
                    "GetUpdateInfo",
                    "GetPkgInfo"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.Alert": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/Alert/src/SYNO.SurveillanceStation.Alert.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "Enum",
                    "RecServerEnum",
                    "Lock",
                    "Unlock",
                    "Clear",
                    "ClearSelected",
                    "RecServerClear",
                    "Trigger",
                    "EventFlushHeader",
                    "EventCount",
                    "RecServerEventCount",
                    "MarkAsViewed",
                    "AllDeviceAlert"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.Alert.Setting": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/Alert/src/SYNO.SurveillanceStation.Alert.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "SaveCamSetting",
                    "GetCamSetting",
                    "GetAdvSetting",
                    "SetAdvSetting",
                    "GetCamExtSetting"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.Analytics.Setting": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/Analytics/src/SYNO.SurveillanceStation.Analytics.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "Save"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.AppCenter": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/AppCenter/src/SYNO.SurveillanceStation.AppCenter.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "List",
                    "GetInfo",
                    "Operation"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.Archiving.Pull": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/Archiving/src/SYNO.SurveillanceStation.Archiving.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "SendTask",
                    "SaveTask",
                    "BatchEditTask",
                    "GetBatchEditProgress",
                    "BatchEditProgressDone",
                    "DeleteTask",
                    "ListTask",
                    "EnableTask",
                    "DisableTask",
                    "LoginSourceDS",
                    "SaveTieringConfig",
                    "LoadTieringConfig",
                    "ListUsingTask",
                    "CheckSrcRecording",
                    "LocalRecRangeValid",
                    "CheckConnectFile",
                    "GetRecordSize",
                    "VerifyRecordEncrypt"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.Archiving.Push": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/Archiving/src/SYNO.SurveillanceStation.Archiving.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "SyncFiles",
                    "CreateDirs",
                    "MoveDir"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.AudioOut": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/AudioOut/src/SYNO.SurveillanceStation.AudioOut.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "SendData",
                    "LiveStart",
                    "Stop",
                    "FileStart",
                    "SetupChannel",
                    "AddCam",
                    "RemoveCam",
                    "EnumSetting",
                    "SaveSetting",
                    "CheckOccupied"
                ],
                "2": [
                    "LiveStart",
                    "Stop",
                    "FileStart",
                    "SetupChannel",
                    "CheckOccupied",
                    "SendFileData",
                    "StopSendFileData"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.AudioPattern": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/AudioPattern/src/SYNO.SurveillanceStation.AudioPattern.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "List",
                    "Set",
                    "Delete",
                    "Upload",
                    "Cancel",
                    "LoadFile",
                    "SetupRecChannel",
                    "PlayPattern"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.AxisAcsCtrler": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/AxisAcsCtrler/src/SYNO.SurveillanceStation.AxisAcsCtrler.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "BlockCardHolder",
                    "SyncAllCtrlerCardHolder",
                    "ImportCardHolder",
                    "GetActProgress",
                    "ActProgressDone",
                    "CountByCategory",
                    "CountByCategoryCardHolder",
                    "CountByCategoryAcsRule",
                    "CountByCategoryLog",
                    "Delete",
                    "DoorControl",
                    "EnableCtrler",
                    "Enum",
                    "EnumCardHolder",
                    "EnumLogConfig",
                    "GetDoorData",
                    "GetUpdateInfo",
                    "ListDoor",
                    "ListLog",
                    "ListPrivilege",
                    "Retrieve",
                    "RetrieveHardware",
                    "Monitor",
                    "Save",
                    "SaveCardHolder",
                    "BatEditCardHolder",
                    "AddCardHolder",
                    "DelCardHolder",
                    "SavePrivilege",
                    "SaveLogConfig",
                    "TestConnect",
                    "GetStandAloneMode",
                    "RetrieveLastCard",
                    "ClearLog",
                    "DownloadLog",
                    "AckAlarm",
                    "GetCardholderPhoto",
                    "EnumAccessRule",
                    "AddAccessRule",
                    "SaveAccessRule",
                    "DelAccessRule",
                    "UploadCardHolder",
                    "RelayFromSlave"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.AxisAcsCtrler.Search": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/AxisAcsCtrler/src/SYNO.SurveillanceStation.AxisAcsCtrler.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "Start",
                    "InfoGet"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.C2": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/C2/src/SYNO.SurveillanceStation.C2.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "GetInfo",
                    "GetLoginInfo",
                    "GetAccessToken",
                    "PollingLoginResult",
                    "Logout",
                    "GetSubscriptions",
                    "GetPlanInfos",
                    "GetCameraList",
                    "GetEUC2CameraList",
                    "GetUSC2CameraList",
                    "BindCamera",
                    "UnbindCamera",
                    "ChangePlan",
                    "UpdateCam",
                    "SelectSite",
                    "GetFileSize",
                    "GetNeedUploadEvtNumByCam",
                    "TriggerUpdate",
                    "GetUploadInfo"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.C2.Encryption": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/C2/src/SYNO.SurveillanceStation.C2.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "PreRegister",
                    "Register",
                    "PreRecover",
                    "Recover",
                    "PreVerify",
                    "Verify",
                    "PreDiscard",
                    "Discard",
                    "ForceDiscard",
                    "CheckDiscarded",
                    "PreChange",
                    "Change",
                    "CheckRemoteEncRegistered"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.CMS": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/CMS/src/SYNO.SurveillanceStation.CMS.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "GetInfo",
                    "ApplyOption",
                    "LockSelf",
                    "GetMDSnapshot",
                    "ModifySharePriv",
                    "NotifyCMSBreak",
                    "BatCheckSambaService",
                    "CheckSambaEnabled",
                    "EnableSamba",
                    "Redirect",
                    "RedirectUpload",
                    "GetCMSStatus",
                    "VolumeRemove",
                    "NTPSync",
                    "PushHostInfo",
                    "RelayServerUdc",
                    "RelayServerUdcDone",
                    "OnlineUpgrade",
                    "UploadUpgradeFile",
                    "UpgradeByFile",
                    "GetUpgradeStatus",
                    "SetUpgradeStatus",
                    "GetSnapshotFile",
                    "GetDepPkgs",
                    "GetInstalledPkgs"
                ],
                "2": [
                    "GetMDSnapshot"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.CMS.DsSearch": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/CMS/src/SYNO.SurveillanceStation.CMS.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "Start",
                    "GetInfo"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.CMS.Failover": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/CMS/src/SYNO.SurveillanceStation.CMS.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "LoadSetting",
                    "SaveSetting",
                    "ApplyServSetting",
                    "ResetServSetting",
                    "ManualFailover",
                    "ManualRestore",
                    "Hibernate",
                    "StopRecovering",
                    "ReplaceServer",
                    "UpdateCentralInfo",
                    "CancelFailover",
                    "NotifyPushServSetting",
                    "RedirectTestConnect",
                    "GetRestoreParam"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.CMS.GetDsStatus": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/CMS/src/SYNO.SurveillanceStation.CMS.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "Login",
                    "Logout",
                    "Lock",
                    "Pair",
                    "UnPair",
                    "Test",
                    "TestHostDs",
                    "EnableCMS",
                    "GetFreeSpace",
                    "MultipartStatusConn",
                    "RecEncryptVerify",
                    "WriteHostRelayApiResp"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.CMS.SlavedsList": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/CMS/src/SYNO.SurveillanceStation.CMS.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "Load",
                    "Auth",
                    "Delete",
                    "Enable",
                    "Disable",
                    "Lock",
                    "Unlock",
                    "LockAll",
                    "UnlockAll",
                    "CheckCMS"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.CMS.SlavedsWizard": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/CMS/src/SYNO.SurveillanceStation.CMS.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "Save",
                    "Test",
                    "Enable",
                    "Load",
                    "BatchSave",
                    "BatchVerify",
                    "GetRelayInfo",
                    "GetRelaySystemInfo",
                    "RecEncryptVerify"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.Camera": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/Camera/src/SYNO.SurveillanceStation.Camera.so",
            "maxVersion": 9,
            "methods": {
                "1": [
                    "List",
                    "GetSnapshot",
                    "ListGroup",
                    "Listgroup",
                    "GetInfo",
                    "GetCapability",
                    "StartLive",
                    "GetRetrivingEdgeRecordingInfo",
                    "MigrateGetSynocamDataSize"
                ],
                "2": [
                    "List",
                    "GetSnapshot",
                    "ListGroup",
                    "Listgroup",
                    "GetInfo",
                    "GetCapability",
                    "StartLive",
                    "GetRetrivingEdgeRecordingInfo",
                    "MigrateGetSynocamDataSize"
                ],
                "3": [
                    "List",
                    "GetSnapshot",
                    "Enable",
                    "Disable",
                    "ListGroup",
                    "Listgroup",
                    "GetInfo",
                    "GetCapability",
                    "StartLive",
                    "GetRetrivingEdgeRecordingInfo",
                    "MigrateGetSynocamDataSize"
                ],
                "4": [
                    "List",
                    "GetSnapshot",
                    "Enable",
                    "Disable",
                    "ListGroup",
                    "Listgroup",
                    "GetCapability",
                    "GetCapabilityByCamId",
                    "GetInfo",
                    "StartLive",
                    "GetRetrivingEdgeRecordingInfo",
                    "MigrateGetSynocamDataSize"
                ],
                "5": [
                    "List",
                    "GetSnapshot",
                    "Enable",
                    "Disable",
                    "ListGroup",
                    "Listgroup",
                    "GetCapability",
                    "GetCapabilityByCamId",
                    "GetInfo",
                    "StartLive",
                    "GetRetrivingEdgeRecordingInfo",
                    "MigrateGetSynocamDataSize"
                ],
                "6": [
                    "List",
                    "GetSnapshot",
                    "Enable",
                    "Disable",
                    "ListGroup",
                    "Listgroup",
                    "GetCapability",
                    "GetCapabilityByCamId",
                    "GetInfo",
                    "StartLive",
                    "GetRetrivingEdgeRecordingInfo",
                    "MigrateGetSynocamDataSize"
                ],
                "7": [
                    "List",
                    "GetSnapshot",
                    "Enable",
                    "Disable",
                    "ListGroup",
                    "GetCapability",
                    "GetCapabilityByCamId",
                    "GetInfo",
                    "StartLive",
                    "GetRetrivingEdgeRecordingInfo",
                    "CountByCategory",
                    "GetOccupiedSize",
                    "Delete",
                    "Migrate",
                    "MigrationGetData",
                    "MigrationSrc",
                    "MigrationDst",
                    "MigrationCamRelTable",
                    "MigrationEnum",
                    "MigrationCancel",
                    "SaveOptimizeParam",
                    "RecountEventSize",
                    "CheckCamValid",
                    "MigrateGetSynocamDataSize"
                ],
                "8": [
                    "List",
                    "GetStmKey",
                    "GetStmUrlPath",
                    "GetSnapshot",
                    "Enable",
                    "Disable",
                    "ListGroup",
                    "GetCapability",
                    "GetCapabilityByCamId",
                    "GetInfo",
                    "StartLive",
                    "GetRetrivingEdgeRecordingInfo",
                    "CountByCategory",
                    "GetOccupiedSize",
                    "Delete",
                    "Migrate",
                    "MigrationGetData",
                    "MigrationGetStatus",
                    "MigrationSrc",
                    "MigrationDst",
                    "MigrationCamRelTable",
                    "MigrationEnum",
                    "MigrationCancel",
                    "SaveOptimizeParam",
                    "SaveLiveviewParam",
                    "RecountEventSize",
                    "CheckCamValid",
                    "ForceRestartCam",
                    "ForceSyncTime",
                    "DetectValue",
                    "SetParameter",
                    "SetPtzParameter",
                    "EnumFilterData",
                    "MigrateGetSynocamDataSize"
                ],
                "9": [
                    "Save",
                    "List",
                    "Enable",
                    "Disable",
                    "Delete",
                    "GetSnapshot",
                    "GetLiveViewPath",
                    "SaveOptimizeParam",
                    "SyncChange"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.Camera.BatAddByText": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/Camera/src/SYNO.SurveillanceStation.Camera.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "UploadXlsx",
                    "StartBatchAdd",
                    "GetBatchAddProgress",
                    "CancelBatchAdd",
                    "GetImportTemplate",
                    "GetImportFailCam",
                    "ExportXlsx"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.Camera.Event": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/Camera/src/SYNO.SurveillanceStation.Camera.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "DIEnum",
                    "DIStsPolling",
                    "DIParamSave",
                    "MotionEnum",
                    "MDParamLoad",
                    "MDParamSave",
                    "AppParamSave",
                    "AppLiveViewParamSave",
                    "AudioEnum",
                    "ADParamSave",
                    "TamperingEnum",
                    "TDParamSave",
                    "QRParamGet",
                    "QRParamSave",
                    "DioParamGet",
                    "DioParamSave",
                    "PirEnum",
                    "PDParamSave",
                    "RoiListPoll",
                    "RoiListSave",
                    "RoiAdd",
                    "RoiDel",
                    "GetApplicationInfo",
                    "AppEnum",
                    "AppSyncData"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.Camera.Export": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/Camera/src/SYNO.SurveillanceStation.Camera.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "Save",
                    "CheckName",
                    "GetCamRelatedData"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.Camera.Group": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/Camera/src/SYNO.SurveillanceStation.Camera.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "Enum",
                    "Delete",
                    "Save"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.Camera.Import": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/Camera/src/SYNO.SurveillanceStation.Camera.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "Save",
                    "LoadData",
                    "ArchiveEnum",
                    "ArchiveCamEnum"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.Camera.Integration": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/Camera/src/SYNO.SurveillanceStation.Camera.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "GetStatus",
                    "AddTask",
                    "Delete",
                    "ManualVerify",
                    "GetManualPreview",
                    "DownloadCap",
                    "Report",
                    "UploadConf",
                    "ImportConf",
                    "LoadConf",
                    "GetCapTable",
                    "GetImportList"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.Camera.Intercom": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/Camera/src/SYNO.SurveillanceStation.Camera.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "EnumLog",
                    "CountByCategory",
                    "ClearLog",
                    "DownloadLog",
                    "GetArchSetting",
                    "SetArchSetting",
                    "DoorControl",
                    "GetDoorSts"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.Camera.Schedule.CustomDetection": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/Camera/src/SYNO.SurveillanceStation.Camera.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "ExtDeviceEnum",
                    "ExtDeviceSave"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.Camera.Search": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/Camera/src/SYNO.SurveillanceStation.Camera.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "Start",
                    "GetInfo",
                    "IPRange",
                    "GetIPRangeInfo",
                    "UpdateByUPNPInfo"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.Camera.Status": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/Camera/src/SYNO.SurveillanceStation.Camera.so",
            "maxVersion": 3,
            "methods": {
                "1": [
                    "OneTime",
                    "Cycle"
                ],
                "2": [
                    "Cycle"
                ],
                "3": [
                    "Cycle"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.Camera.Synocam": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/Camera/src/SYNO.SurveillanceStation.Camera.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "GetCurrentSetting",
                    "SetMiscSetting",
                    "Reset",
                    "UploadUpgradeFile",
                    "UpgradeByFile",
                    "ActivateBatchStart",
                    "ActivateBatchGetInfo",
                    "CheckOnlineUpgrade",
                    "OnlineUpgrade",
                    "Activate",
                    "CheckIPConflict",
                    "NetworkBatchSettingStart",
                    "NetworkBatchSettingGetInfo",
                    "GetLog",
                    "GetLogCount",
                    "DeleteLog",
                    "DownloadLog",
                    "GetInfoFromCam",
                    "UploadCertFile",
                    "DeleteCertFile",
                    "GetSystemReport"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.Camera.VolEval": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/Camera/src/SYNO.SurveillanceStation.Camera.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "CamVolEval"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.Camera.Wizard": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/Camera/src/SYNO.SurveillanceStation.Camera.so",
            "maxVersion": 3,
            "methods": {
                "1": [
                    "CamSaveAll",
                    "CamBatAddSaveAll",
                    "CompareChecksumByModel",
                    "CamBatAddCheck",
                    "CamBatAddCheckRemote",
                    "CheckQuota",
                    "CheckSDCardSize",
                    "FormatSDCard",
                    "MountSDCard",
                    "QuickCreate",
                    "GetBatSaveProgress",
                    "BatAddProgressDone",
                    "EnumVendorModel",
                    "CamBatEditCamList",
                    "CamBatEditCheckCamConf",
                    "CamBatEditCopyApply",
                    "CamBatAddSaveEasy",
                    "CamBatSave"
                ],
                "2": [
                    "CamSaveAll",
                    "CamBatAddSaveAll",
                    "CamBatAddCheck",
                    "CamBatEditCopyApply"
                ],
                "3": [
                    "CamBatAddCheck"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.CameraCap": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/CameraCap/src/SYNO.SurveillanceStation.CameraCap.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "CameraModelEnum",
                    "CamCap",
                    "CamCapList",
                    "CameraTest",
                    "GetSnapshot",
                    "CamCapRemote",
                    "CamCapUserDefineReso",
                    "CamBatAddVerify",
                    "CamBatAddVerifyStart",
                    "CamBatAddVerifyGetInfo",
                    "EnumExistedCamCap",
                    "RenewCap",
                    "ChangeCap",
                    "BatLoadCapStart",
                    "BatLoadCapGetInfo",
                    "GetSnapshotFromFile"
                ],
                "2": [
                    "CameraTest",
                    "GetSnapshot",
                    "RenewCap"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.DetectionEvent": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/DetectionEvent/src/SYNO.SurveillanceStation.DetectionEvent.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "List",
                    "CountByCategory",
                    "GetCrowdTimes",
                    "Update",
                    "Clear",
                    "GetThumbnail",
                    "GetLPThumbnail",
                    "GetSetting",
                    "SetSetting",
                    "MigratingStatus",
                    "RetrospectImgSave",
                    "LoadThumbnailByConfig"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.DigitalOutput": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/DigitalOutput/src/SYNO.SurveillanceStation.DigitalOutput.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "Enum",
                    "PollState",
                    "Save",
                    "SaveMulti",
                    "CtrlWiper",
                    "CtrlLED"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.DualAuth": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/DualAuth/src/SYNO.SurveillanceStation.DualAuth.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "List",
                    "Save",
                    "Enable",
                    "Disable",
                    "Delete",
                    "SetProfile",
                    "CheckProfile"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.Emap": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/Emap/src/SYNO.SurveillanceStation.Emap.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "List",
                    "Load",
                    "Delete",
                    "CheckEmapValid"
                ],
                "2": [
                    "List",
                    "Load",
                    "Save",
                    "Delete",
                    "CheckEmapValid",
                    "UpdateEmapAdjList",
                    "GetCommonSetting",
                    "SetCommonSetting"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.Emap.FavorView": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/Emap/src/SYNO.SurveillanceStation.Emap.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "Save",
                    "Delete"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.Emap.GeoMap": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/Emap/src/SYNO.SurveillanceStation.Emap.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "Save",
                    "Load",
                    "GetSetting",
                    "SetSetting"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.Emap.Group": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/Emap/src/SYNO.SurveillanceStation.Emap.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "Enum",
                    "Delete",
                    "Save",
                    "ChangeGroup",
                    "RemoveItem"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.Emap.Image": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/Emap/src/SYNO.SurveillanceStation.Emap.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "Upload",
                    "Load",
                    "Download"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.Encryption": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/Encryption/src/SYNO.SurveillanceStation.Encryption.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "KeyExchange"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.Event": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/Event/src/SYNO.SurveillanceStation.Event.so",
            "maxVersion": 5,
            "methods": {
                "1": [
                    "Query"
                ],
                "2": [
                    "Query"
                ],
                "3": [
                    "Query",
                    "DeleteMulti",
                    "DeleteFilter",
                    "DeleteAll"
                ],
                "4": [
                    "Query",
                    "DeleteMulti",
                    "DeleteFilter",
                    "DeleteAll",
                    "List",
                    "CountByCategory",
                    "Lock",
                    "UnLock",
                    "Trunc",
                    "Keepalive",
                    "Download",
                    "SaveMigrateEvent",
                    "DelMigratedEvent",
                    "CheckEventValid",
                    "LoadAdvanced",
                    "ApplyAdvanced",
                    "UpdateIndex"
                ],
                "5": [
                    "Query",
                    "DeleteMulti",
                    "DeleteFilter",
                    "DeleteAll",
                    "List",
                    "CountByCategory",
                    "Lock",
                    "UnLock",
                    "LockFilter",
                    "UnLockFilter",
                    "Trunc",
                    "Keepalive",
                    "Download",
                    "SaveMigrateEvent",
                    "DelMigratedEvent",
                    "CheckEventValid",
                    "LoadAdvanced",
                    "ApplyAdvanced",
                    "UpdateIndex"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.Event.Export": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/Event/src/SYNO.SurveillanceStation.Event.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "Save",
                    "Load",
                    "CamEnum",
                    "CheckAvailableExport",
                    "GetEvtExpInfo",
                    "CamEvtRotCtrl",
                    "DumpEvtExpDB",
                    "CheckName",
                    "Delete"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.Event.Mount": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/Event/src/SYNO.SurveillanceStation.Event.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "Load",
                    "Delete",
                    "Enable",
                    "Disable"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.Event.Mount.Wizard": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/Event/src/SYNO.SurveillanceStation.Event.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "Save",
                    "BackupEnum"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.ExternalDevice.IFTTT": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/ExternalDevice/src/SYNO.SurveillanceStation.ExternalDevice.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "TestSendReq"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.ExternalDevice.Storage.USB": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/ExternalDevice/src/SYNO.SurveillanceStation.ExternalDevice.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "List",
                    "Eject"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.ExternalDevice.Webhook": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/ExternalDevice/src/SYNO.SurveillanceStation.ExternalDevice.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "TestSendReq"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.ExternalEvent": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/ExternalEvent/src/SYNO.SurveillanceStation.ExternalEvent.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "Trigger"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.ExternalRecording": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/ExternalRecording/src/SYNO.SurveillanceStation.ExternalRecording.so",
            "maxVersion": 3,
            "methods": {
                "1": [
                    "Record"
                ],
                "2": [
                    "Record"
                ],
                "3": [
                    "Record"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.Face": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/Face/src/SYNO.SurveillanceStation.Face.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "EnableTask",
                    "DisableTask",
                    "SaveTask",
                    "DeleteTask",
                    "ListTask",
                    "ListPlayableTask",
                    "ListTaskEventCount",
                    "CreateRegisteredFace",
                    "DeleteRegisteredFace",
                    "EditRegisteredFace",
                    "ListRegisteredFace",
                    "ListRegisteredFaceWithUuid",
                    "CountRegisteredFace",
                    "SearchRegisteredFace",
                    "LoadRegisteredFaceImage",
                    "CreateFaceGroup",
                    "DeleteFaceGroup",
                    "EditFaceGroup",
                    "ListFaceGroup",
                    "CountFaceGroup",
                    "DetectImageFace",
                    "DownloadImportFaceXlsx",
                    "QuickCreateRegisteredFace",
                    "ConvertImportXlsxToJson",
                    "LoadDeepLearningModel",
                    "UpdateIdPatcher"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.Face.Archive": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/Face/src/SYNO.SurveillanceStation.Face.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "GetSettings",
                    "SaveSettings",
                    "MigratingStatus"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.Face.CMS": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/Face/src/SYNO.SurveillanceStation.Face.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "CheckIsProxyDva",
                    "DumpMapping"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.Face.Result": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/Face/src/SYNO.SurveillanceStation.Face.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "List",
                    "Delete",
                    "EventFlushHeader",
                    "Lock",
                    "Unlock",
                    "GetAnalyticsResult",
                    "GetEventInfo",
                    "Correct",
                    "MarkAsStranger",
                    "DownloadReport",
                    "LoadCapturedFaceImage"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.Face.Simulator": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/Face/src/SYNO.SurveillanceStation.Face.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "Acquire",
                    "Add",
                    "Remove",
                    "KeepAlive"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.Fisheye": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/Fisheye/src/SYNO.SurveillanceStation.Fisheye.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "Load",
                    "Save",
                    "Delete"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.GlobalSearch": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/GlobalSearch/src/SYNO.SurveillanceStation.GlobalSearch.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "Search"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.Help": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/Help/src/SYNO.SurveillanceStation.Help.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "GetTreeList",
                    "GetSearchResult"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.HomeMode": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/HomeMode/src/SYNO.SurveillanceStation.HomeMode.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "GetInfo",
                    "Switch",
                    "SwitchSetting",
                    "SaveSysSetting",
                    "SaveGeofence",
                    "SaveAdvanced",
                    "SaveProfileGeneral",
                    "SaveSchedule",
                    "SaveNotifyFilter",
                    "SaveOneTimeSwitch"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.HomeMode.Mobile": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/HomeMode/src/SYNO.SurveillanceStation.HomeMode.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "List",
                    "Bind",
                    "Unbind",
                    "EnterHome"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.IOModule": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/IOModule/src/SYNO.SurveillanceStation.IOModule.so",
            "maxVersion": 3,
            "methods": {
                "1": [
                    "Enum",
                    "EnumPort",
                    "EnumVendorModel",
                    "Save",
                    "Delete",
                    "Enable",
                    "Disable",
                    "TestConn",
                    "GetCap",
                    "PortSetting",
                    "PollingDI",
                    "PollingDO",
                    "GetDevNumOfDs",
                    "CountByCategory",
                    "GetCamPairing",
                    "EnumLog",
                    "LogCountByCategory",
                    "ClearLog",
                    "DownloadLog",
                    "SetArchiveSetting",
                    "GetArchiveSetting"
                ],
                "2": [
                    "EnumPort"
                ],
                "3": [
                    "EnumPort"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.IOModule.Search": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/IOModule/src/SYNO.SurveillanceStation.IOModule.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "Start",
                    "InfoGet"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.IPSpeaker": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/IPSpeaker/src/SYNO.SurveillanceStation.IPSpeaker.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "Save",
                    "Enable",
                    "Disable",
                    "Delete",
                    "SetGrouped",
                    "Enum",
                    "CountByCategory",
                    "EnumVendorModel",
                    "GetCap",
                    "TestConn"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.IPSpeaker.Broadcast": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/IPSpeaker/src/SYNO.SurveillanceStation.IPSpeaker.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "Enum",
                    "Delete",
                    "Save",
                    "UpdateStatus"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.IPSpeaker.Group": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/IPSpeaker/src/SYNO.SurveillanceStation.IPSpeaker.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "Enum",
                    "Delete",
                    "Save"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.IPSpeaker.Search": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/IPSpeaker/src/SYNO.SurveillanceStation.IPSpeaker.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "Start",
                    "InfoGet"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.IVA": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/IVA/src/SYNO.SurveillanceStation.IVA.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "EnableTask",
                    "DisableTask",
                    "SaveTask",
                    "DeleteTask",
                    "ListTask",
                    "SetTmpFpsUpperBound",
                    "ResetPplCntCounter",
                    "GetPplCnt",
                    "ListCountingSetting",
                    "SaveCountingSetting",
                    "ListCountingStatus",
                    "ResetCounting"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.IVA.Analytics": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/IVA/src/SYNO.SurveillanceStation.IVA.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "DownloadAnalyticsReport"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.IVA.Archive": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/IVA/src/SYNO.SurveillanceStation.IVA.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "GetSettings",
                    "SaveSettings",
                    "MigratingStatus"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.IVA.CountingTaskGroup": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/IVA/src/SYNO.SurveillanceStation.IVA.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "List",
                    "Save",
                    "Delete"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.IVA.License": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/IVA/src/SYNO.SurveillanceStation.IVA.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "List"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.IVA.LicensePlate": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/IVA/src/SYNO.SurveillanceStation.IVA.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "List",
                    "Create",
                    "Edit",
                    "Delete"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.IVA.LicensePlate.Result": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/IVA/src/SYNO.SurveillanceStation.IVA.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "List",
                    "Create",
                    "Edit",
                    "Delete",
                    "GetReport",
                    "DownloadReport",
                    "LoadPlateNumberImage",
                    "LoadVehicleImage",
                    "DownloadDetectionEventReport"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.IVA.Recording": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/IVA/src/SYNO.SurveillanceStation.IVA.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "List",
                    "CountByCategory",
                    "Delete",
                    "EventFlushHeader",
                    "Lock",
                    "Unlock",
                    "LockFilter",
                    "UnLockFilter",
                    "GetAnalyticsResult",
                    "DownloadReport",
                    "SaveMigratingEvent"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.IVA.Report": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/IVA/src/SYNO.SurveillanceStation.IVA.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "GetReport",
                    "GetCount",
                    "Download",
                    "UploadReportImgData",
                    "GetNoRecordDate",
                    "GetCountingReport"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.IVA.Simulator": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/IVA/src/SYNO.SurveillanceStation.IVA.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "Acquire",
                    "Add",
                    "Remove",
                    "KeepAlive"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.IVA.TaskGroup": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/IVA/src/SYNO.SurveillanceStation.IVA.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "List",
                    "Create",
                    "GetByTaskId",
                    "Edit",
                    "Delete",
                    "Enable",
                    "Disable",
                    "GetPeopleCount",
                    "ResetPeopleCount"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.Info": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/Info/src/SYNO.SurveillanceStation.Info.so",
            "maxVersion": 8,
            "methods": {
                "1": [
                    "GetInfo",
                    "getInfo",
                    "GetUid",
                    "GetLoginInfo",
                    "SetLoginInfo",
                    "KillSession",
                    "KillDualAuthExpireSession",
                    "DownloadClient",
                    "DownloadUtility",
                    "ClientEdit",
                    "SetRestrictConnection",
                    "LoadRestrictConnection",
                    "SessionLogout",
                    "GetGPUTaskLimit"
                ],
                "2": [
                    "GetInfo",
                    "getInfo",
                    "GetUid"
                ],
                "3": [
                    "GetInfo",
                    "getInfo",
                    "GetUid"
                ],
                "4": [
                    "GetInfo",
                    "getInfo",
                    "GetUid"
                ],
                "5": [
                    "GetInfo",
                    "GetUid"
                ],
                "6": [
                    "GetInfo",
                    "GetUid"
                ],
                "7": [
                    "GetInfo"
                ],
                "8": [
                    "GetInfo"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.Info.InstallVs": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/Info/src/SYNO.SurveillanceStation.Info.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "Start",
                    "Cancel",
                    "Finish",
                    "GetProgress",
                    "Upload"
                ],
                "2": [
                    "Start",
                    "Finish",
                    "GetProgress",
                    "Upload"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.JoystickSetting": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/JoystickSetting/src/SYNO.SurveillanceStation.JoystickSetting.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "Save",
                    "Get",
                    "Export",
                    "Import",
                    "ArchiveEnum"
                ],
                "2": [
                    "Save",
                    "Get",
                    "Export",
                    "Import",
                    "ArchiveEnum"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.Layout": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/Layout/src/SYNO.SurveillanceStation.Layout.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "List",
                    "CamLoad",
                    "LayoutSave",
                    "LayoutDelete",
                    "IOModuleLoad",
                    "LayoutGroupList",
                    "LayoutGroupSave",
                    "LayoutGroupDelete",
                    "LayoutChangeGroup"
                ],
                "2": [
                    "List",
                    "CamLoad",
                    "LayoutSave",
                    "CheckLayoutValid",
                    "FisheyeRegionLoad",
                    "CamEnumAll",
                    "ItemEnum",
                    "LayoutLoad",
                    "LayoutLoadDefault",
                    "LayoutDelete",
                    "IOModuleLoad"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.Layout.Item": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/Layout/src/SYNO.SurveillanceStation.Layout.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "Save",
                    "Load"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.License": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/License/src/SYNO.SurveillanceStation.License.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "Load",
                    "CheckQuota",
                    "BatCheckQuota",
                    "AddKey",
                    "VerifyKey",
                    "DeleteKey",
                    "VerifyPassword",
                    "TestActivation",
                    "Migrate",
                    "Update"
                ],
                "2": [
                    "VerifyKey"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.LocalDisplay": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/LocalDisplay/src/SYNO.SurveillanceStation.LocalDisplay.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "GetUid",
                    "GetAutoLogin",
                    "SetAutoLogin",
                    "CheckLogin",
                    "GetSettings",
                    "SetSettings",
                    "SetDvaFpsLimit"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.Log": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/Log/src/SYNO.SurveillanceStation.Log.so",
            "maxVersion": 3,
            "methods": {
                "1": [
                    "List",
                    "CountByCategory",
                    "Clear",
                    "AddSlaveDSLog",
                    "AddLogFromPlugin",
                    "Download",
                    "GetSetting",
                    "SetSetting",
                    "BatSetSetting",
                    "BatSetDone",
                    "GetBatProgress",
                    "VsLog",
                    "GetArchiveSetting",
                    "SetArchiveSetting",
                    "GetSendLogSetting",
                    "SetSendLogSetting",
                    "SendTestLog",
                    "UploadCrt",
                    "CheckLogValid",
                    "ListEvent",
                    "ClearEvent",
                    "DownloadEvent",
                    "EventCountByCategory",
                    "CheckDownLoadLogAlive",
                    "CheckDownLoadEventlogAlive"
                ],
                "2": [
                    "List",
                    "CountByCategory",
                    "Clear",
                    "AddSlaveDSLog",
                    "AddLogFromPlugin",
                    "Download",
                    "GetSetting",
                    "SetSetting",
                    "BatSetSetting",
                    "BatSetDone",
                    "GetBatProgress",
                    "VsLog",
                    "GetArchiveSetting",
                    "SetArchiveSetting",
                    "GetSendLogSetting",
                    "SetSendLogSetting",
                    "SendTestLog",
                    "UploadCrt",
                    "CheckLogValid",
                    "GetLogDetail"
                ],
                "3": [
                    "List",
                    "CountByCategory",
                    "Clear",
                    "AddSlaveDSLog",
                    "AddLogFromPlugin",
                    "Download",
                    "GetSetting",
                    "SetSetting",
                    "BatSetSetting",
                    "BatSetDone",
                    "GetBatProgress",
                    "VsLog",
                    "GetArchiveSetting",
                    "SetArchiveSetting",
                    "GetSendLogSetting",
                    "SetSendLogSetting",
                    "SendTestLog",
                    "UploadCrt",
                    "CheckLogValid",
                    "GetLogDetail"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.MobileCam": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/MobileCam/src/SYNO.SurveillanceStation.MobileCam.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "UploadEdge"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.Notification": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/Notification/src/SYNO.SurveillanceStation.Notification.so",
            "maxVersion": 8,
            "methods": {
                "1": [
                    "GetRegisterToken",
                    "GetVariables",
                    "SetVariables"
                ],
                "2": [
                    "GetRegisterToken",
                    "GetCustomizedMessage",
                    "SetCustomizedMessage"
                ],
                "3": [
                    "GetRegisterToken",
                    "GetCustomizedMessage",
                    "SetCustomizedMessage",
                    "SetAdvSetting",
                    "GetAdvSetting"
                ],
                "4": [
                    "GetRegisterToken",
                    "GetCustomizedMessage",
                    "SetCustomizedMessage",
                    "SetAdvSetting",
                    "GetAdvSetting"
                ],
                "5": [
                    "GetRegisterToken",
                    "GetCustomizedMessage",
                    "SetCustomizedMessage",
                    "SetAdvSetting",
                    "GetAdvSetting",
                    "SetMute"
                ],
                "6": [
                    "GetCustomizedMessage",
                    "SetCustomizedMessage",
                    "SetAdvSetting",
                    "GetAdvSetting"
                ],
                "7": [
                    "SetAdvSetting",
                    "GetAdvSetting"
                ],
                "8": [
                    "GetNotiServiceStatus",
                    "GetMessageParameter"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.Notification.Email": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/Notification/src/SYNO.SurveillanceStation.Notification.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "GetSetting",
                    "SetSetting",
                    "SendTestMail"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.Notification.Filter": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/Notification/src/SYNO.SurveillanceStation.Notification.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "Get",
                    "Set"
                ],
                "2": [
                    "Get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.Notification.MobileSetting": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/Notification/src/SYNO.SurveillanceStation.Notification.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "SetTargetId",
                    "UnpairTargetId",
                    "GetSchedule",
                    "SetSchedule",
                    "GetSetting",
                    "SetSetting"
                ],
                "2": [
                    "GetSetting"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.Notification.PushService": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/Notification/src/SYNO.SurveillanceStation.Notification.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "GetSetting",
                    "SetSetting",
                    "SendTestMessage",
                    "SendVerificationMail",
                    "ListMobileDevice",
                    "UnpairMobileDevice"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.Notification.SMS": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/Notification/src/SYNO.SurveillanceStation.Notification.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "GetSetting",
                    "SetSetting",
                    "SendTestMessage",
                    "UpdateShmConf"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.Notification.SMS.ServiceProvider": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/Notification/src/SYNO.SurveillanceStation.Notification.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "List",
                    "Delete",
                    "Create",
                    "Set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.Notification.Schedule": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/Notification/src/SYNO.SurveillanceStation.Notification.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "GetSystemDependentSchedule",
                    "GetCameraSchedule",
                    "GetCameraDISchedule",
                    "GetCameraNotifyScheduleByIdx",
                    "GetAccessControlDoorSchedule",
                    "GetAccessControlControllerSchedule",
                    "GetIOModuleSchedule",
                    "GetIOModuleDISchedule",
                    "GetTransDevSchedule",
                    "GetIPSpeakerSchedule",
                    "GetActionRuleSchedule",
                    "SetSystemDependentSchedule",
                    "SetCameraSchedule",
                    "SetIOModuleSchedule",
                    "SetIPSpeakerSchedule",
                    "SetActionRuleSchedule",
                    "SetAccessControlSchedule",
                    "SetTransDevSchedule",
                    "SetBatchSchedule"
                ],
                "2": [
                    "GetSystemDependentSchedule",
                    "GetCameraSchedule",
                    "GetCameraDISchedule",
                    "GetCameraNotifyScheduleByIdx",
                    "GetAccessControlDoorSchedule",
                    "GetAccessControlControllerSchedule",
                    "GetIOModuleSchedule",
                    "GetIOModuleDISchedule",
                    "GetTransDevSchedule",
                    "GetIPSpeakerSchedule",
                    "GetActionRuleSchedule",
                    "SetSystemDependentSchedule",
                    "SetCameraSchedule",
                    "SetIOModuleSchedule",
                    "SetIPSpeakerSchedule",
                    "SetActionRuleSchedule",
                    "SetAccessControlSchedule",
                    "SetTransDevSchedule",
                    "SetBatchSchedule"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.Notification.Snapshot": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/Notification/src/SYNO.SurveillanceStation.Notification.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "GetSnapshot"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.Notification.Webhook": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/Notification/src/SYNO.SurveillanceStation.Notification.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "List",
                    "Create",
                    "Edit",
                    "Delete",
                    "Enable",
                    "SendTestReq",
                    "Preview"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.PTZ": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/PTZ/src/SYNO.SurveillanceStation.PTZ.so",
            "maxVersion": 6,
            "methods": {
                "1": [
                    "Move",
                    "Zoom",
                    "ListPreset",
                    "GoPreset",
                    "ListPatrol"
                ],
                "2": [
                    "Move",
                    "Zoom",
                    "ListPreset",
                    "GoPreset",
                    "RunPatrol",
                    "ListPatrol"
                ],
                "3": [
                    "Move",
                    "Zoom",
                    "Focus",
                    "Iris",
                    "AutoFocus",
                    "AbsPtz",
                    "ListPreset",
                    "GoPreset",
                    "ListPatrol",
                    "RunPatrol"
                ],
                "4": [
                    "Move",
                    "Zoom",
                    "Focus",
                    "Iris",
                    "AutoFocus",
                    "AbsPtz",
                    "ListPreset",
                    "GoPreset",
                    "ListPatrol",
                    "RunPatrol"
                ],
                "5": [
                    "Move",
                    "Zoom",
                    "Focus",
                    "Iris",
                    "AutoFocus",
                    "AbsPtz",
                    "ListPreset",
                    "GoPreset",
                    "ListPatrol",
                    "RunPatrol",
                    "Home",
                    "AutoPan",
                    "ObjTracking",
                    "SpeedDry"
                ],
                "6": [
                    "Move",
                    "Zoom",
                    "Focus",
                    "Iris",
                    "AutoFocus",
                    "AbsPtz",
                    "ListPreset",
                    "GoPreset",
                    "ListPatrol",
                    "RunPatrol",
                    "Home",
                    "AutoPan",
                    "ObjTracking",
                    "SpeedDry"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.PTZ.Patrol": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/PTZ/src/SYNO.SurveillanceStation.PTZ.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "Enum",
                    "EnumPartial",
                    "Load",
                    "Save",
                    "Delete",
                    "Execute",
                    "Stop"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.PTZ.Preset": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/PTZ/src/SYNO.SurveillanceStation.PTZ.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "Enum",
                    "GetInfo",
                    "SetPreset",
                    "DelPreset",
                    "Execute",
                    "SetHome",
                    "GetDelProgress",
                    "DelProgressDone"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.PersonalSettings.Image": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/PersonalSettings/src/SYNO.SurveillanceStation.PersonalSettings.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "List",
                    "Get",
                    "Upload",
                    "GetWallpaper",
                    "Load",
                    "Save",
                    "Reset",
                    "ClearAll",
                    "UploadWatermark",
                    "GetWatermark"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.PersonalSettings.Layout": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/PersonalSettings/src/SYNO.SurveillanceStation.PersonalSettings.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "SaveSetting",
                    "LoadSetting"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.PersonalSettings.Photo": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/PersonalSettings/src/SYNO.SurveillanceStation.PersonalSettings.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "Load",
                    "LoadBase64",
                    "Upload"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.Player": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/Player/src/SYNO.SurveillanceStation.Player.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "EnumEvent",
                    "SearchAvailDate",
                    "LoadCamera"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.Player.LiveviewSrc": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/Player/src/SYNO.SurveillanceStation.Player.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "Play"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.Preload": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/Preload/src/SYNO.SurveillanceStation.Preload.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "CamModelCapPreload",
                    "Preload",
                    "GblStorePreload",
                    "InitData",
                    "CamExtraSettingsLoad",
                    "GetSession"
                ],
                "2": [
                    "GetSession"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.Recording": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/Recording/src/SYNO.SurveillanceStation.Recording.so",
            "maxVersion": 6,
            "methods": {
                "1": [
                    "Query"
                ],
                "2": [
                    "Query"
                ],
                "3": [
                    "Query",
                    "DeleteMulti",
                    "DeleteFilter",
                    "DeleteAll"
                ],
                "4": [
                    "Query",
                    "DeleteMulti",
                    "DeleteFilter",
                    "DeleteAll",
                    "List",
                    "CountByCategory",
                    "Lock",
                    "UnLock",
                    "Trunc",
                    "Keepalive",
                    "Download",
                    "SaveMigrateEvent",
                    "DelMigratedEvent",
                    "CheckEventValid",
                    "LoadAdvanced",
                    "ApplyAdvanced",
                    "UpdateIndex"
                ],
                "5": [
                    "Query",
                    "DeleteMulti",
                    "DeleteFilter",
                    "DeleteAll",
                    "List",
                    "CountByCategory",
                    "Lock",
                    "UnLock",
                    "LockFilter",
                    "UnLockFilter",
                    "Trunc",
                    "Keepalive",
                    "Download",
                    "SaveMigrateEvent",
                    "DelMigratedEvent",
                    "CheckEventValid",
                    "LoadAdvanced",
                    "ApplyAdvanced",
                    "UpdateIndex",
                    "EventFlushHeader",
                    "PlayerGetProgress",
                    "EventSourceEnum",
                    "EventEnumCam",
                    "PlayerSetRate",
                    "GetEventTime",
                    "SaveMetaData",
                    "GetCamId",
                    "GetLabelSetting",
                    "SetLabelSetting",
                    "SaveTag",
                    "GetThumbnail",
                    "DeleteLabel"
                ],
                "6": [
                    "List",
                    "Delete",
                    "Lock",
                    "UnLock",
                    "Download",
                    "Stream",
                    "BrowserStream",
                    "RangeExport",
                    "GetRangeExportProgress",
                    "OnRangeExportDone",
                    "RetrospectImgSave"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.Recording.Bookmark": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/Recording/src/SYNO.SurveillanceStation.Recording.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "SaveBookmark",
                    "ListBookmark",
                    "DeleteBookmark",
                    "CountByCategory",
                    "Lock",
                    "Unlock",
                    "GetThumbnail",
                    "RetrospectImgSave"
                ],
                "2": [
                    "ListBookmark"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.Recording.Export": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/Recording/src/SYNO.SurveillanceStation.Recording.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "Save",
                    "Load",
                    "CamEnum",
                    "CheckAvailableExport",
                    "GetEvtExpInfo",
                    "CamEvtRotCtrl",
                    "DumpEvtExpDB",
                    "CheckName",
                    "Delete"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.Recording.Mount": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/Recording/src/SYNO.SurveillanceStation.Recording.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "Load",
                    "Delete",
                    "Enable",
                    "Disable"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.Recording.Mount.Wizard": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/Recording/src/SYNO.SurveillanceStation.Recording.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "Save",
                    "BackupEnum"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.Recording.Reindex": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/Recording/src/SYNO.SurveillanceStation.Recording.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "Start",
                    "Stop"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.Recording.ShareRecording": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/Recording/src/SYNO.SurveillanceStation.Recording.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "EnableShare",
                    "Download",
                    "Play",
                    "PlayHtmlEmbedded"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.RecordingPicker": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/RecordingPicker/src/SYNO.SurveillanceStation.RecordingPicker.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "EnumInterval",
                    "RecordPartialInfo",
                    "SearchAvaiDate",
                    "SearchLatestDate",
                    "InstantSearch"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.ReportCenter": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/ReportCenter/src/SYNO.SurveillanceStation.ReportCenter.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "CameraReport",
                    "CameraStorage"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.Share": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/Share/src/SYNO.SurveillanceStation.Share.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "List",
                    "ListRecShare",
                    "CreateRecShare",
                    "DelRecShare",
                    "EditRecShare",
                    "ListUsingCam",
                    "CheckStorageMigrating",
                    "ListMountedFolder",
                    "CreateRemoteRecShare",
                    "ReconnetRemoteMount",
                    "DecryptByFile",
                    "ListShareUsage",
                    "CheckSharePriv",
                    "SetSharePriv"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.SnapShot": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/SnapShot/src/SYNO.SurveillanceStation.SnapShot.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "List",
                    "CountByCategory",
                    "ChkFileExist",
                    "Download",
                    "ChkContainLocked",
                    "GetSetting",
                    "SaveSetting",
                    "LoadSnapshot",
                    "ChkSnapshotValid",
                    "Save",
                    "Edit",
                    "Lock",
                    "Unlock",
                    "LockFiltered",
                    "UnlockFiltered",
                    "Delete",
                    "DeleteFiltered",
                    "TakeSnapshot",
                    "MigratingStatus",
                    "GetPushServSnapshot"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.Sort": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/Sort/src/SYNO.SurveillanceStation.Sort.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "Set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.Stream": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/Stream/src/SYNO.SurveillanceStation.Stream.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "EventStream",
                    "EventMultipartFetch"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.Stream.VideoStreaming": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/Stream/src/SYNO.SurveillanceStation.Stream.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "Stream",
                    "Open",
                    "Close",
                    "Query"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.System": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/System/src/SYNO.SurveillanceStation.System.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "Reboot",
                    "Shutdown",
                    "Network",
                    "Info",
                    "TimeGet",
                    "TimeSet",
                    "SyncNtp",
                    "GetFirmwareInfo",
                    "CheckUpgradeEnv",
                    "Upgrade",
                    "GetUpgradeProgress",
                    "AutoUpdateEnable",
                    "AutoUpdateDisable",
                    "SystemLanguage",
                    "GetTlsProfile",
                    "BeepPause",
                    "GetBeepStatus",
                    "SetWatermarkData",
                    "SetRecordEncryptKey",
                    "DisableRecordEncryptKey",
                    "ForceChangeRecordEncryptKey",
                    "VerifyRecordEncryptKey",
                    "ExportRecordEncryptKey"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.TaskQueue": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/TaskQueue/src/SYNO.SurveillanceStation.TaskQueue.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "List",
                    "Clear",
                    "GetSetting",
                    "SetSetting",
                    "LongPolling"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.ThirdParty.Bookmark": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/ThirdParty/src/SYNO.SurveillanceStation.ThirdParty.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "Create",
                    "List",
                    "DownloadRecording",
                    "Edit",
                    "Delete"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.ThirdParty.Camera": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/ThirdParty/src/SYNO.SurveillanceStation.ThirdParty.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "List",
                    "Edit",
                    "Get",
                    "PTZControl",
                    "PresetControl",
                    "DOControl",
                    "AudioOut"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.ThirdParty.Emap": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/ThirdParty/src/SYNO.SurveillanceStation.ThirdParty.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "ChangeLocation"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.ThirdParty.License": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/ThirdParty/src/SYNO.SurveillanceStation.ThirdParty.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "Add",
                    "Delete"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.ThirdParty.LicensePlate.Database": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/ThirdParty/src/SYNO.SurveillanceStation.ThirdParty.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "Create",
                    "List",
                    "Edit",
                    "Delete"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.ThirdParty.LicensePlate.Event": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/ThirdParty/src/SYNO.SurveillanceStation.ThirdParty.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "ListEvent",
                    "DownloadRecording",
                    "DownloadReport"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.ThirdParty.PeopleCounting": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/ThirdParty/src/SYNO.SurveillanceStation.ThirdParty.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "DownloadReport"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.ThirdParty.PeopleVehicle": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/ThirdParty/src/SYNO.SurveillanceStation.ThirdParty.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "List",
                    "DownloadRecording"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.ThirdParty.Recording": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/ThirdParty/src/SYNO.SurveillanceStation.ThirdParty.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "Download",
                    "DownloadSnapshot"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.ThirdParty.SnapShot": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/ThirdParty/src/SYNO.SurveillanceStation.ThirdParty.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "Download",
                    "Take"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.TimeLapse": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/TimeLapse/src/SYNO.SurveillanceStation.TimeLapse.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "SaveTask",
                    "ListTask",
                    "DeleteTask",
                    "EnableTask",
                    "DisableTask",
                    "TestRecordingExist"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.TimeLapse.Recording": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/TimeLapse/src/SYNO.SurveillanceStation.TimeLapse.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "List",
                    "CountByCategory",
                    "Lock",
                    "Unlock",
                    "Delete",
                    "LockFilter",
                    "UnlockFilter",
                    "DeleteFilter",
                    "DeleteAll",
                    "EventFlushHeader"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.Transactions.Device": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/Transactions/src/SYNO.SurveillanceStation.Transactions.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "Enum",
                    "CountByCategory",
                    "Save",
                    "Delete",
                    "Enable",
                    "Disable",
                    "GetEventConf",
                    "SetEventConf",
                    "ConnectAnonymousDevice",
                    "DisconnectAnonymousDevice",
                    "PauseAnonymousDevice",
                    "ResumeAnonymousDevice",
                    "GetAnonymousDeviceData",
                    "ClearAnonymousDeviceData",
                    "GetEncodingList"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.Transactions.Transaction": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/Transactions/src/SYNO.SurveillanceStation.Transactions.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "Enum",
                    "CountByCategory",
                    "Lock",
                    "Unlock",
                    "Delete",
                    "Begin",
                    "Complete",
                    "Cancel",
                    "AppendData",
                    "SetAdvancedConf",
                    "GetAdvancedConf",
                    "SetArchiveConf",
                    "GetArchiveConf",
                    "EventFlushHeader",
                    "DownloadLog"
                ],
                "2": [
                    "Enum",
                    "CountByCategory",
                    "Lock",
                    "Unlock",
                    "Delete",
                    "Begin",
                    "Complete",
                    "Cancel",
                    "AppendData",
                    "Insert",
                    "Test",
                    "SetArchiveConf",
                    "GetArchiveConf",
                    "MigratingStatus",
                    "EventFlushHeader",
                    "DownloadLog",
                    "Download"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.UserPrivilege": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/UserPrivilege/src/SYNO.SurveillanceStation.UserPrivilege.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "Enum",
                    "LoadProfile",
                    "LoadOptions",
                    "Detail",
                    "CheckUsername",
                    "CheckPwdrules",
                    "CheckUserExist",
                    "SaveOptions",
                    "Cancel",
                    "DeleteProfile",
                    "EditUser",
                    "EditPrivilege",
                    "Enable",
                    "Disable",
                    "DeleteUser",
                    "CreateUser",
                    "SaveViewMode",
                    "CheckHomeEnable",
                    "Download",
                    "SetRemindQuickConnectTunnel",
                    "UpdateDomain"
                ],
                "2": [
                    "Enum",
                    "LoadProfile",
                    "LoadOptions",
                    "Detail",
                    "CheckUsername",
                    "CheckPwdrules",
                    "CheckUserExist",
                    "SaveOptions",
                    "Cancel",
                    "DeleteProfile",
                    "EditUser",
                    "EditPrivilege",
                    "Enable",
                    "Disable",
                    "DeleteUser",
                    "CreateUser",
                    "SaveViewMode",
                    "CheckHomeEnable",
                    "Download",
                    "SetRemindQuickConnectTunnel",
                    "UpdateDomain",
                    "DeleteGroup",
                    "SaveGroup",
                    "CheckGroupExist",
                    "SetAdvSettings",
                    "GetAdvSettings"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.VideoStreaming": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/VideoStreaming/src/SYNO.SurveillanceStation.VideoStreaming.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "Stream",
                    "Query"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.Webhook": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/Webhook/src/SYNO.SurveillanceStation.Webhook.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "GenerateToken",
                    "CheckTokenExist",
                    "Incoming",
                    "GetThumbnail"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SurveillanceStation.YoutubeLive": {
            "lib": "/var/packages/SurveillanceStation/target/webapi/YoutubeLive/src/SYNO.SurveillanceStation.YoutubeLive.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "Load",
                    "Save",
                    "CloseLive",
                    "GetConnectStatus"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        }
    },
    "SYNO.SynologyDrive": {
        "SYNO.SynologyDrive": {
            "lib": "/var/packages/SynologyDrive/target/lib/SYNO.SynologyDrive.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get_status",
                    "get_directory_service_status",
                    "get_extension",
                    "get_client_link",
                    "check_user",
                    "delete_database",
                    "resume_freeze"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SynologyDrive.Activation": {
            "lib": "/var/packages/SynologyDrive/target/lib/SYNO.SynologyDrive.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SynologyDrive.AdvanceSharing": {
            "lib": "/var/packages/SynologyDrive/target/webapi/drive/advance-sharing/SYNO.SynologyDrive.AdvanceSharing.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "update",
                    "create",
                    "delete",
                    "verify"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SynologyDrive.AdvanceSharing.Public": {
            "lib": "/var/packages/SynologyDrive/target/webapi/drive/advance-sharing-public/SYNO.SynologyDrive.AdvanceSharing.Public.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "auth"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SynologyDrive.AppIntegration": {
            "lib": "/var/packages/SynologyDrive/target/webapi/drive/app-integration/SYNO.SynologyDrive.AppIntegration.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "get",
                    "update",
                    "create",
                    "delete"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SynologyDrive.Authentication": {
            "lib": "/var/packages/SynologyDrive/target/webapi/drive/authentication/SYNO.SynologyDrive.Authentication.so",
            "maxVersion": 3,
            "methods": {
                "1": [
                    "authenticate_by_dsm",
                    "revoke"
                ],
                "2": [
                    "authenticate_by_dsm",
                    "revoke",
                    "set_active"
                ],
                "3": [
                    "authenticate_by_dsm",
                    "revoke",
                    "set_active"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SynologyDrive.Config": {
            "lib": "/var/packages/SynologyDrive/target/lib/SYNO.SynologyDrive.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SynologyDrive.Connection": {
            "lib": "/var/packages/SynologyDrive/target/lib/SYNO.SynologyDrive.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list",
                    "delete"
                ],
                "2": [
                    "list",
                    "delete",
                    "summary"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SynologyDrive.DBUsage": {
            "lib": "/var/packages/SynologyDrive/target/lib/SYNO.SynologyDrive.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "status",
                    "start",
                    "stop",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SynologyDrive.DSM": {
            "lib": "/var/packages/SynologyDrive/target/webapi/drive/dsm/SYNO.SynologyDrive.DSM.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SynologyDrive.Dashboard": {
            "lib": "/var/packages/SynologyDrive/target/lib/SYNO.SynologyDrive.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "top_access_files"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SynologyDrive.Files": {
            "lib": "/var/packages/SynologyDrive/target/webapi/drive/file/SYNO.SynologyDrive.File.so",
            "maxVersion": 10,
            "methods": {
                "1": [
                    "convert_office",
                    "list",
                    "shared_with_me",
                    "shared_with_others",
                    "get",
                    "update",
                    "download",
                    "create",
                    "upload",
                    "upload_from_dsm",
                    "delete",
                    "copy",
                    "move",
                    "search",
                    "recent",
                    "label",
                    "star",
                    "list_labelled",
                    "list_starred",
                    "request_access",
                    "get_thumbnail",
                    "list_ancestor"
                ],
                "10": [
                    "convert_office",
                    "copy",
                    "create",
                    "delete",
                    "download",
                    "list",
                    "get",
                    "label",
                    "list_starred",
                    "recent",
                    "shared_with_me",
                    "list_labelled",
                    "list_ancestor",
                    "shared_with_others",
                    "move",
                    "request_access",
                    "search",
                    "star",
                    "get_thumbnail",
                    "update",
                    "upload",
                    "upload_from_dsm",
                    "list_backup_tasks"
                ],
                "2": [
                    "convert_office",
                    "list",
                    "shared_with_me",
                    "shared_with_others",
                    "get",
                    "update",
                    "download",
                    "create",
                    "upload",
                    "upload_from_dsm",
                    "delete",
                    "copy",
                    "move",
                    "search",
                    "recent",
                    "label",
                    "star",
                    "list_labelled",
                    "list_starred",
                    "request_access",
                    "get_thumbnail",
                    "list_ancestor"
                ],
                "3": [
                    "convert_office",
                    "list",
                    "shared_with_me",
                    "shared_with_others",
                    "get",
                    "update",
                    "download",
                    "create",
                    "upload",
                    "upload_from_dsm",
                    "delete",
                    "copy",
                    "move",
                    "search",
                    "recent",
                    "label",
                    "star",
                    "list_labelled",
                    "list_starred",
                    "request_access",
                    "get_thumbnail",
                    "list_ancestor",
                    "list_backup_tasks"
                ],
                "4": [
                    "convert_office",
                    "list",
                    "shared_with_me",
                    "shared_with_others",
                    "get",
                    "update",
                    "download",
                    "create",
                    "upload",
                    "upload_from_dsm",
                    "delete",
                    "copy",
                    "move",
                    "search",
                    "recent",
                    "label",
                    "star",
                    "list_labelled",
                    "list_starred",
                    "request_access",
                    "get_thumbnail",
                    "list_ancestor",
                    "list_backup_tasks"
                ],
                "5": [
                    "convert_office",
                    "list",
                    "shared_with_me",
                    "shared_with_others",
                    "get",
                    "update",
                    "download",
                    "create",
                    "upload",
                    "upload_from_dsm",
                    "delete",
                    "copy",
                    "move",
                    "search",
                    "recent",
                    "label",
                    "star",
                    "list_labelled",
                    "list_starred",
                    "request_access",
                    "get_thumbnail",
                    "list_ancestor",
                    "list_backup_tasks"
                ],
                "6": [
                    "convert_office",
                    "list",
                    "shared_with_me",
                    "shared_with_others",
                    "get",
                    "update",
                    "download",
                    "create",
                    "upload",
                    "upload_from_dsm",
                    "delete",
                    "copy",
                    "move",
                    "search",
                    "recent",
                    "label",
                    "star",
                    "list_labelled",
                    "list_starred",
                    "request_access",
                    "get_thumbnail",
                    "list_ancestor",
                    "list_backup_tasks"
                ],
                "7": [
                    "convert_office",
                    "list",
                    "shared_with_me",
                    "shared_with_others",
                    "get",
                    "update",
                    "download",
                    "create",
                    "upload",
                    "upload_from_dsm",
                    "delete",
                    "copy",
                    "move",
                    "search",
                    "recent",
                    "label",
                    "star",
                    "list_labelled",
                    "list_starred",
                    "request_access",
                    "get_thumbnail",
                    "list_ancestor",
                    "list_backup_tasks"
                ],
                "8": [
                    "convert_office",
                    "list",
                    "shared_with_me",
                    "shared_with_others",
                    "get",
                    "update",
                    "download",
                    "create",
                    "upload",
                    "upload_from_dsm",
                    "delete",
                    "copy",
                    "move",
                    "search",
                    "recent",
                    "label",
                    "star",
                    "list_labelled",
                    "list_starred",
                    "request_access",
                    "get_thumbnail",
                    "list_ancestor",
                    "list_backup_tasks"
                ],
                "9": [
                    "convert_office",
                    "list",
                    "shared_with_me",
                    "shared_with_others",
                    "get",
                    "update",
                    "download",
                    "create",
                    "upload",
                    "upload_from_dsm",
                    "delete",
                    "copy",
                    "move",
                    "search",
                    "recent",
                    "label",
                    "star",
                    "list_labelled",
                    "list_starred",
                    "request_access",
                    "get_thumbnail",
                    "list_ancestor",
                    "list_backup_tasks"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SynologyDrive.HybridShare.Privilege": {
            "lib": "/var/packages/SynologyDrive/target/lib/SYNO.SynologyDrive.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "update"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SynologyDrive.Index": {
            "lib": "/var/packages/SynologyDrive/target/lib/SYNO.SynologyDrive.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get_native_client_status",
                    "set_native_client_index_pause"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SynologyDrive.Info": {
            "lib": "/var/packages/SynologyDrive/target/webapi/drive/info/SYNO.SynologyDrive.Info.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "get",
                    "noop"
                ],
                "2": [
                    "get",
                    "noop",
                    "quota"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SynologyDrive.KeyManagement": {
            "lib": "/var/packages/SynologyDrive/target/lib/SYNO.SynologyDrive.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "get",
                    "set",
                    "delete",
                    "export",
                    "import"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SynologyDrive.Labels": {
            "lib": "/var/packages/SynologyDrive/target/webapi/drive/labels/SYNO.SynologyDrive.Labels.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list",
                    "create",
                    "update",
                    "delete"
                ],
                "2": [
                    "list",
                    "create",
                    "update",
                    "delete"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SynologyDrive.Log": {
            "lib": "/var/packages/SynologyDrive/target/lib/SYNO.SynologyDrive.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "delete",
                    "export"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SynologyDrive.Metrics": {
            "lib": "/var/packages/SynologyDrive/target/webapi/drive/metrics/SYNO.SynologyDrive.Metrics.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SynologyDrive.Metrics.Token": {
            "lib": "/var/packages/SynologyDrive/target/webapi/drive/metrics-token/SYNO.SynologyDrive.Metrics.Token.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "refresh"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SynologyDrive.Migration": {
            "lib": "/var/packages/SynologyDrive/target/webapi/drive/migration/SYNO.SynologyDrive.Migration.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "import_trash",
                    "import"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SynologyDrive.Migration.UserHome": {
            "lib": "/var/packages/SynologyDrive/target/webapi/drive/migration-userhome/SYNO.SynologyDrive.Migration.UserHome.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "start",
                    "status",
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SynologyDrive.Mobile.Notification": {
            "lib": "/var/packages/SynologyDrive/target/webapi/drive/mobile-notification/SYNO.SynologyDrive.Mobile.Notification.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "unsubscribe",
                    "subscribe",
                    "unpair",
                    "pair"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SynologyDrive.Node": {
            "lib": "/var/packages/SynologyDrive/target/lib/SYNO.SynologyDrive.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "list_parent",
                    "list_version",
                    "dry_run"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SynologyDrive.Node.Delete": {
            "lib": "/var/packages/SynologyDrive/target/lib/SYNO.SynologyDrive.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "start",
                    "status",
                    "set_schedule",
                    "get_schedule"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SynologyDrive.Node.Download": {
            "lib": "/var/packages/SynologyDrive/target/lib/SYNO.SynologyDrive.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "start",
                    "status",
                    "stop",
                    "finish"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SynologyDrive.Node.Restore": {
            "lib": "/var/packages/SynologyDrive/target/lib/SYNO.SynologyDrive.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "start",
                    "status",
                    "finish"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SynologyDrive.Notifications": {
            "lib": "/var/packages/SynologyDrive/target/webapi/drive/notifications/SYNO.SynologyDrive.Notifications.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "create",
                    "list",
                    "delete"
                ],
                "2": [
                    "create",
                    "list",
                    "delete"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SynologyDrive.Office": {
            "lib": "/var/packages/SynologyDrive/target/webapi/drive/office/SYNO.SynologyDrive.Office.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "status"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SynologyDrive.Photos": {
            "lib": "/var/packages/SynologyDrive/target/webapi/drive/photos/SYNO.SynologyDrive.Photos.so",
            "maxVersion": 3,
            "methods": {
                "1": [
                    "get_metadata"
                ],
                "2": [
                    "get_metadata",
                    "list",
                    "upload"
                ],
                "3": [
                    "get_metadata",
                    "list",
                    "upload"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SynologyDrive.Privilege": {
            "lib": "/var/packages/SynologyDrive/target/lib/SYNO.SynologyDrive.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "set",
                    "status"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SynologyDrive.Profiles": {
            "lib": "/var/packages/SynologyDrive/target/lib/SYNO.SynologyDrive.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list",
                    "set",
                    "delete",
                    "get_sync_profiles"
                ],
                "2": [
                    "list",
                    "set",
                    "delete",
                    "get_sync_profiles"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SynologyDrive.Revisions": {
            "lib": "/var/packages/SynologyDrive/target/webapi/drive/revision/SYNO.SynologyDrive.Revision.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list",
                    "download",
                    "restore"
                ],
                "2": [
                    "list",
                    "download",
                    "restore"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SynologyDrive.SCIM.Photo": {
            "lib": "/var/packages/SynologyDrive/target/webapi/drive/scim/SYNO.SynologyDrive.SCIM.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SynologyDrive.SCIM.User": {
            "lib": "/var/packages/SynologyDrive/target/webapi/drive/scim/SYNO.SynologyDrive.SCIM.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SynologyDrive.Services.DocumentViewer": {
            "lib": "/var/packages/SynologyDrive/target/webapi/drive/services/SYNO.SynologyDrive.Services.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "create"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SynologyDrive.Services.SynologyChat": {
            "lib": "/var/packages/SynologyDrive/target/webapi/drive/chat/SYNO.SynologyDrive.Chat.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "bind",
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SynologyDrive.Services.VideoStation": {
            "lib": "/var/packages/SynologyDrive/target/webapi/drive/services/SYNO.SynologyDrive.Services.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "create"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SynologyDrive.Settings": {
            "lib": "/var/packages/SynologyDrive/target/webapi/drive/settings/SYNO.SynologyDrive.Settings.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list",
                    "update"
                ],
                "2": [
                    "list",
                    "update",
                    "list_targets"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SynologyDrive.Shard": {
            "lib": "/var/packages/SynologyDrive/target/webapi/drive/shard/SYNO.SynologyDrive.Shard.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "getjs",
                    "init"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SynologyDrive.Share": {
            "lib": "/var/packages/SynologyDrive/target/lib/SYNO.SynologyDrive.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list_active",
                    "list",
                    "set",
                    "get_hybrid_share_rotate_span",
                    "migrate_index_home",
                    "get_migrate_index_home_config"
                ],
                "2": [
                    "list_active",
                    "set",
                    "list",
                    "get_hybrid_share_rotate_span",
                    "migrate_index_home",
                    "get_migrate_index_home_config"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SynologyDrive.Share.Priv": {
            "lib": "/var/packages/SynologyDrive/target/webapi/drive/share/SYNO.SynologyDrive.Share.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SynologyDrive.Sharing": {
            "lib": "/var/packages/SynologyDrive/target/webapi/drive/sharing/SYNO.SynologyDrive.Sharing.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list",
                    "update",
                    "create_link",
                    "use_link",
                    "sync_to_device"
                ],
                "2": [
                    "create_link",
                    "list",
                    "update",
                    "use_link",
                    "sync_to_device",
                    "get_base_url"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SynologyDrive.Sharing.Report": {
            "lib": "/var/packages/SynologyDrive/target/webapi/drive/sharing-report/SYNO.SynologyDrive.Sharing.Report.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list_target",
                    "start",
                    "status",
                    "stop"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SynologyDrive.Statistics": {
            "lib": "/var/packages/SynologyDrive/target/webapi/drive/statistics/SYNO.SynologyDrive.Statistics.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SynologyDrive.String": {
            "lib": "/var/packages/SynologyDrive/target/webapi/drive/string/SYNO.SynologyDrive.String.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SynologyDrive.Tasks": {
            "lib": "/var/packages/SynologyDrive/target/webapi/drive/tasks/SYNO.SynologyDrive.Tasks.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "delete",
                    "get",
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SynologyDrive.TeamFolders": {
            "lib": "/var/packages/SynologyDrive/target/webapi/drive/team-folder/SYNO.SynologyDrive.TeamFolder.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "list_members"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SynologyDrive.Trash": {
            "lib": "/var/packages/SynologyDrive/target/webapi/drive/trash/SYNO.SynologyDrive.Trash.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "list",
                    "list_ancestor",
                    "empty"
                ],
                "2": [
                    "list",
                    "list_ancestor",
                    "empty",
                    "get_size"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SynologyDrive.Users": {
            "lib": "/var/packages/SynologyDrive/target/webapi/drive/users/SYNO.SynologyDrive.Users.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "update",
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SynologyDrive.Webhooks": {
            "lib": "/var/packages/SynologyDrive/target/webapi/drive/webhooks/SYNO.SynologyDrive.Webhooks.so",
            "maxVersion": 2,
            "methods": {
                "1": [
                    "create",
                    "delete",
                    "get",
                    "list",
                    "update"
                ],
                "2": [
                    "create",
                    "get",
                    "update",
                    "delete",
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        }
    },
    "SYNO.SynologyDriveShareSync": {
        "SYNO.SynologyDriveShareSync.Config": {
            "lib": "/var/packages/SynologyDrive/target/sharesync/lib/SYNO.SynologyDriveShareSync.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SynologyDriveShareSync.Connection": {
            "lib": "/var/packages/SynologyDrive/target/sharesync/lib/SYNO.SynologyDriveShareSync.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "test",
                    "get",
                    "auth",
                    "create",
                    "set",
                    "delete",
                    "unlink",
                    "pause",
                    "resume"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SynologyDriveShareSync.Session": {
            "lib": "/var/packages/SynologyDrive/target/sharesync/lib/SYNO.SynologyDriveShareSync.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "list_subfolder",
                    "list_sync_history",
                    "list_syncfolder",
                    "get",
                    "test",
                    "set",
                    "create",
                    "enable",
                    "disable",
                    "delete",
                    "refresh"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.SynologyDriveShareSync.Session.Set": {
            "lib": "/var/packages/SynologyDrive/target/sharesync/lib/SYNO.SynologyDriveShareSync.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "start",
                    "status"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        }
    },
    "SYNO.TextEditor": {
        "SYNO.TextEditor": {
            "lib": "/var/packages/TextEditor/target/webapi/lib/SYNO.TextEditor.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "translate"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.TextEditor.Preference": {
            "lib": "/var/packages/TextEditor/target/webapi/lib/SYNO.TextEditor.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "set",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        }
    },
    "SYNO.USBCopy": {
        "SYNO.USBCopy": {
            "lib": "/var/packages/USBCopy/target/lib/SYNO.USBCopy.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "create",
                    "get",
                    "get_filter",
                    "set_setting",
                    "set_trigger_time",
                    "set_filter",
                    "delete",
                    "run",
                    "cancel",
                    "enable",
                    "disable",
                    "get_global_setting",
                    "set_global_setting",
                    "get_log_list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        }
    },
    "SYNO.Utils": {
        "SYNO.Utils": {
            "lib": "/usr/syno/synoman/webapi/lib/SYNO.Utils.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "QRCode"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        }
    },
    "SYNO.VideoPlayer": {
        "SYNO.VideoPlayer.Subtitle": {
            "lib": "lib/SYNO.VideoPlayer.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.VideoPlayer.SynologyDrive.Subtitle": {
            "lib": "lib/SYNO.VideoPlayer.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        }
    },
    "SYNO.WebRTC": {
        "SYNO.WebRTC.Proxy": {
            "lib": "/var/packages/QuickConnect/target/webapi/SYNO.WebRTC.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "create",
                    "signal"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.WebRTC.Proxy.Sharing": {
            "lib": "/var/packages/QuickConnect/target/webapi/SYNO.WebRTC.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "create",
                    "signal"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        }
    },
    "SYNO.WebStation": {
        "SYNO.WebStation.Backup": {
            "lib": "/var/packages/WebStation/target/webapi/SYNO.WebStation.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "remove",
                    "export",
                    "get",
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.WebStation.Default": {
            "lib": "/var/packages/WebStation/target/webapi/SYNO.WebStation.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.WebStation.Docker": {
            "lib": "/var/packages/WebStation/target/webapi/SYNO.WebStation.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "hash",
                    "tags"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.WebStation.ErrorPage": {
            "lib": "/var/packages/WebStation/target/webapi/SYNO.WebStation.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "import",
                    "export",
                    "remove",
                    "update",
                    "create",
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.WebStation.HTTP.VHost": {
            "lib": "/var/packages/WebStation/target/webapi/SYNO.WebStation.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "add",
                    "delete",
                    "update"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.WebStation.PHP": {
            "lib": "/var/packages/WebStation/target/webapi/SYNO.WebStation.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "set",
                    "set_advanced"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.WebStation.PHP.Profile": {
            "lib": "/var/packages/WebStation/target/webapi/SYNO.WebStation.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "list",
                    "add",
                    "update",
                    "delete"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.WebStation.Package": {
            "lib": "/var/packages/WebStation/target/webapi/SYNO.WebStation.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "restore",
                    "upgrade",
                    "rebuild",
                    "pause",
                    "start",
                    "remove",
                    "update",
                    "list",
                    "create"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.WebStation.Python": {
            "lib": "/var/packages/WebStation/target/webapi/SYNO.WebStation.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get_version",
                    "search",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.WebStation.Python.Profile": {
            "lib": "/var/packages/WebStation/target/webapi/SYNO.WebStation.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "delete",
                    "update",
                    "add",
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.WebStation.ScriptLanguage": {
            "lib": "/var/packages/WebStation/target/webapi/SYNO.WebStation.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "restore",
                    "upgrade",
                    "rebuild",
                    "pause",
                    "start",
                    "update",
                    "remove",
                    "create",
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.WebStation.ScriptLanguage.Utils": {
            "lib": "/var/packages/WebStation/target/webapi/SYNO.WebStation.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get_version",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.WebStation.Shortcut": {
            "lib": "/var/packages/WebStation/target/webapi/SYNO.WebStation.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "remove",
                    "list",
                    "update",
                    "create"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.WebStation.Status": {
            "lib": "/var/packages/WebStation/target/webapi/SYNO.WebStation.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.WebStation.Task": {
            "lib": "/var/packages/WebStation/target/webapi/SYNO.WebStation.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "get",
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.WebStation.WebService.Portal": {
            "lib": "/var/packages/WebStation/target/webapi/SYNO.WebStation.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "remove",
                    "create",
                    "update",
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.WebStation.WebService.Portal.Log": {
            "lib": "/var/packages/WebStation/target/webapi/SYNO.WebStation.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "export",
                    "remove",
                    "get"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        },
        "SYNO.WebStation.WebService.Service": {
            "lib": "/var/packages/WebStation/target/webapi/SYNO.WebStation.so",
            "maxVersion": 1,
            "methods": {
                "1": [
                    "check",
                    "remove",
                    "update",
                    "create",
                    "list"
                ]
            },
            "minVersion": 1,
            "path": "entry.cgi",
            "requestFormat": "JSON"
        }
    }
}