{
    "SYNO.Core.ACL": {
        "lib": "lib/SYNO.Core.ACL.so",
        "maxVersion": 2,
        "methods": {
            "1": [
                "get",
                "set",
                "status",
                "stop",
                "list_owners",
                "inspect",
                "check_admin",
                "check_self_denied",
                "get_ui_info",
                "get_bypass_traverse",
                "set_bypass_traverse",
                "validate_set_bypass_traverse"
            ],
            "2": [
                "list_owners"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.ActionPriv": {
        "lib": "lib/SYNO.Core.ActionPriv.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get",
                "set",
                "preview",
                "export"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.ActionPriv.Role": {
        "lib": "lib/SYNO.Core.ActionPriv.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "list"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.AppNotify": {
        "lib": "lib/SYNO.Core.AppNotify.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "view",
                "get"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.AppPortal": {
        "lib": "lib/SYNO.Core.AppPortal.so",
        "maxVersion": 2,
        "methods": {
            "1": [
                "get",
                "set",
                "list"
            ],
            "2": [
                "get",
                "set",
                "list"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.AppPortal.AccessControl": {
        "lib": "lib/SYNO.Core.AppPortal.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "create",
                "list",
                "update",
                "delete"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.AppPortal.Config": {
        "lib": "lib/SYNO.Core.AppPortal.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get",
                "set"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.AppPortal.ReverseProxy": {
        "lib": "lib/SYNO.Core.AppPortal.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "create",
                "list",
                "update",
                "delete"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.AppPriv": {
        "lib": "lib/SYNO.Core.AppPriv.so",
        "maxVersion": 2,
        "methods": {
            "1": [],
            "2": [
                "list"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.AppPriv.App": {
        "lib": "lib/SYNO.Core.AppPriv.so",
        "maxVersion": 3,
        "methods": {
            "1": [],
            "2": [
                "preview",
                "allowed",
                "list"
            ],
            "3": [
                "list"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.AppPriv.Rule": {
        "lib": "lib/SYNO.Core.AppPriv.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get",
                "set",
                "delete",
                "list"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.BackgroundTask": {
        "lib": "/usr/syno/synoman/webapi/lib/SYNO.Core.BackgroundTask.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Backup.ED": {
        "lib": "lib/SYNO.Core.Backup.ED.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "ensure_package_installed_and_started"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.BandwidthControl": {
        "lib": "lib/SYNO.Core.BandwidthControl.so",
        "maxVersion": 2,
        "methods": {
            "1": [
                "list",
                "get",
                "set"
            ],
            "2": [
                "get"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.BandwidthControl.Protocol": {
        "lib": "lib/SYNO.Core.BandwidthControl.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get",
                "set"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.BandwidthControl.Status": {
        "lib": "lib/SYNO.Core.BandwidthControl.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "list",
                "delete"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.CMS": {
        "lib": "lib/SYNO.Core.CMS.so",
        "maxVersion": 2,
        "methods": {
            "1": [
                "begin_join",
                "end_join",
                "disjoin"
            ],
            "2": [
                "begin_join",
                "end_join",
                "disjoin"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.CMS.Cache": {
        "lib": "lib/webapi_cache_client.so",
        "maxVersion": 2,
        "methods": {
            "1": [
                "push",
                "reset"
            ],
            "2": [
                "push"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.CMS.Identity": {
        "lib": "lib/SYNO.Core.CMS.Identity.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "check"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.CMS.Info": {
        "lib": "lib/SYNO.Core.CMS.Info.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.CMS.Policy": {
        "lib": "lib/webapi_gpo_client.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "fetch"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.CMS.ServerInfo": {
        "lib": "lib/SYNO.Core.CMS.so",
        "maxVersion": 2,
        "methods": {
            "1": [
                "update"
            ],
            "2": [
                "update"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.CMS.Task": {
        "lib": "lib/SYNO.Core.CMS.Task.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "create",
                "query"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.CMS.Token": {
        "lib": "lib/SYNO.Core.CMS.Token.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "update",
                "check",
                "get"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Certificate": {
        "lib": "lib/SYNO.Core.Certificate.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "export",
                "import",
                "reset"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Certificate.CRT": {
        "lib": "lib/SYNO.Core.Certificate.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "create",
                "recreate",
                "set",
                "delete",
                "list",
                "renew"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Certificate.CSR": {
        "lib": "lib/SYNO.Core.Certificate.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "create",
                "renew",
                "sign"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Certificate.LetsEncrypt": {
        "lib": "lib/SYNO.Core.Certificate.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "create",
                "renew"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Certificate.LetsEncrypt.Account": {
        "lib": "lib/SYNO.Core.Certificate.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "list"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Certificate.Service": {
        "lib": "lib/SYNO.Core.Certificate.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "set"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Certificate.Tencent": {
        "lib": "lib/SYNO.Core.Certificate.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "create",
                "renew"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.CurrentConnection": {
        "lib": "lib/libwebapi-CurrentConnection.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get",
                "list",
                "list_by_user",
                "kick_connection",
                "disable_user",
                "kick_self",
                "download"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.DDNS.Ethernet": {
        "lib": "lib/SYNO.Core.DDNS.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "list"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.DDNS.ExtIP": {
        "lib": "lib/SYNO.Core.DDNS.so",
        "maxVersion": 2,
        "methods": {
            "1": [
                "list"
            ],
            "2": [
                "list"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.DDNS.Provider": {
        "lib": "lib/SYNO.Core.DDNS.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "list",
                "delete",
                "set",
                "update_customized_provider"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.DDNS.Record": {
        "lib": "lib/SYNO.Core.DDNS.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "list",
                "update_ip_address",
                "create",
                "delete",
                "set",
                "test"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.DDNS.Synology": {
        "lib": "lib/SYNO.Core.DDNS.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "register_hostname",
                "send_verified_mail",
                "list_domain",
                "get_hostname",
                "get_myds_account"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.DDNS.TWNIC": {
        "lib": "lib/SYNO.Core.DDNS.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "register_hostname"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.DSMNotify": {
        "lib": "/usr/syno/synoman/webapi/lib/SYNO.Core.DSMNotify.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "notify"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.DSMNotify.MailContent": {
        "lib": "/usr/syno/synoman/webapi/lib/SYNO.Core.DSMNotify.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.DSMNotify.Strings": {
        "lib": "/usr/syno/synoman/webapi/lib/SYNO.Core.DSMNotify.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.DataCollect": {
        "lib": "lib/libwebapi-DataCollect.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get",
                "set"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.DataCollect.Application": {
        "lib": "lib/libwebapi-DataCollect.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "record"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Desktop.Defs": {
        "lib": "lib/SYNO.Core.Desktop.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "getjs"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Desktop.Initdata": {
        "lib": "lib/SYNO.Core.Desktop.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get_user_lang",
                "get_user_service",
                "get_ui_config",
                "get"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Desktop.JSUIString": {
        "lib": "lib/SYNO.Core.Desktop.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "getjs"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Desktop.PersonalUpdater": {
        "lib": "lib/SYNO.Core.Desktop.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get_update_progress",
                "need_update",
                "get_current_job",
                "start"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Desktop.SessionData": {
        "lib": "lib/SYNO.Core.Desktop.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "getjs",
                "getjs_mobile",
                "getjs_forgotpass"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Desktop.Timeout": {
        "lib": "lib/SYNO.Core.Desktop.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "check",
                "get",
                "reset"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Desktop.UIString": {
        "lib": "lib/SYNO.Core.Desktop.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "getjs"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Desktop.Upgrade": {
        "lib": "lib/SYNO.Core.Desktop.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get_pgsql",
                "done"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Directory.Azure.SSO": {
        "lib": "lib/SYNO.Core.Directory.SSO.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get",
                "set"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Directory.Domain": {
        "lib": "/var/packages/SMBService/target/usr/syno/synoman/webapi/lib/SYNO.Core.Directory.Domain.so",
        "maxVersion": 3,
        "methods": {
            "1": [
                "set",
                "set_status",
                "set_stop",
                "get",
                "sync_time",
                "test_dc",
                "get_domain_list",
                "update_start",
                "update_status",
                "update_stop",
                "join_check",
                "leave_check",
                "set_password",
                "list_candidate_ou",
                "check_is_rodc",
                "get_db_status",
                "sync_db"
            ],
            "2": [
                "set",
                "get_domain_list"
            ],
            "3": [
                "set"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Directory.Domain.Conf": {
        "lib": "/var/packages/SMBService/target/usr/syno/synoman/webapi/lib/SYNO.Core.Directory.Domain.so",
        "maxVersion": 3,
        "methods": {
            "1": [
                "set",
                "get"
            ],
            "2": [
                "set",
                "get"
            ],
            "3": [
                "set"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Directory.Domain.Schedule": {
        "lib": "/var/packages/SMBService/target/usr/syno/synoman/webapi/lib/SYNO.Core.Directory.Domain.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "set",
                "get"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Directory.Domain.Trust": {
        "lib": "/var/packages/SMBService/target/usr/syno/synoman/webapi/lib/SYNO.Core.Directory.Domain.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get",
                "set",
                "list",
                "set_allow_domain"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Directory.LDAP": {
        "lib": "lib/SYNO.Core.Directory.LDAP.so",
        "maxVersion": 2,
        "methods": {
            "1": [
                "get",
                "set",
                "upload_certificate",
                "refresh",
                "password",
                "bind_check",
                "unbind_check"
            ],
            "2": [
                "get",
                "set"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Directory.LDAP.BaseDN": {
        "lib": "lib/SYNO.Core.Directory.LDAP.so",
        "maxVersion": 2,
        "methods": {
            "1": [
                "list"
            ],
            "2": [
                "list"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Directory.LDAP.Login.Notify": {
        "lib": "lib/SYNO.Core.Directory.LDAP.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "check"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Directory.LDAP.Profile": {
        "lib": "lib/SYNO.Core.Directory.LDAP.so",
        "maxVersion": 2,
        "methods": {
            "1": [
                "list",
                "get",
                "set"
            ],
            "2": [
                "set"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Directory.LDAP.Refresh": {
        "lib": "lib/SYNO.Core.Directory.LDAP.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "start",
                "get_status"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Directory.LDAP.User": {
        "lib": "lib/SYNO.Core.Directory.LDAP.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "set_pwd"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Directory.OIDC.SSO": {
        "lib": "lib/SYNO.Core.Directory.SSO.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get",
                "set"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Directory.SSO": {
        "lib": "lib/SYNO.Core.Directory.SSO.so",
        "maxVersion": 2,
        "methods": {
            "1": [
                "get",
                "set",
                "register"
            ],
            "2": [
                "get",
                "set"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Directory.SSO.CAS": {
        "lib": "lib/SYNO.Core.Directory.SSO.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "set",
                "get"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Directory.SSO.IWA": {
        "lib": "lib/SYNO.Core.Directory.SSO.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "set",
                "get"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Directory.SSO.Profile": {
        "lib": "lib/SYNO.Core.Directory.SSO.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "list",
                "get",
                "set"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Directory.SSO.SAML": {
        "lib": "lib/SYNO.Core.Directory.SSO.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "set",
                "get"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Directory.SSO.SAML.Metadata": {
        "lib": "lib/SYNO.Core.Directory.SSO.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "import"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Directory.SSO.SAML.Status": {
        "lib": "lib/SYNO.Core.Directory.SSO.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "set"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Directory.SSO.Setting": {
        "lib": "lib/SYNO.Core.Directory.SSO.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get",
                "set"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Directory.SSO.Status": {
        "lib": "lib/SYNO.Core.Directory.SSO.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "set"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Directory.SSO.utils": {
        "lib": "lib/SYNO.Core.Directory.SSO.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "exchange"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Directory.WebSphere.SSO": {
        "lib": "lib/SYNO.Core.Directory.SSO.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get",
                "set"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.DirectoryServiceCheck.Common": {
        "lib": "lib/SYNO.Core.DirectoryServiceCheck.so",
        "maxVersion": 2,
        "methods": {
            "1": [
                "get_stages",
                "get_last_test",
                "set_last_test",
                "test_dns_valid",
                "test_dns_record",
                "test_srv_target",
                "test_srv_target_post",
                "set_dns",
                "test_mtu",
                "test_port",
                "test_port_by_domain",
                "test_nas_ip_conflict",
                "test_ip_conflict",
                "test_hostname_conflict"
            ],
            "2": [
                "test_mtu",
                "test_ip_conflict"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.DirectoryServiceCheck.Debug": {
        "lib": "lib/SYNO.Core.DirectoryServiceCheck.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "generate_issue"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.DirectoryServiceCheck.Domain": {
        "lib": "lib/SYNO.Core.DirectoryServiceCheck.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "check_server_address",
                "prepare_test_ip"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.DirectoryServiceCheck.DomainJoin": {
        "lib": "lib/SYNO.Core.DirectoryServiceCheck.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "join_domain",
                "set_join_env",
                "set_ntp",
                "init_pre_join",
                "gen_join_conf",
                "record_smb_gpo"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.DirectoryServiceCheck.DomainService": {
        "lib": "lib/SYNO.Core.DirectoryServiceCheck.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "init_pre_service",
                "sync_dc_time",
                "test_kinit",
                "check_rodc",
                "test_smb_auth",
                "test_smb_auth_local",
                "test_ldap_auth",
                "check_computer_account"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.DirectoryServiceCheck.DomainValidation": {
        "lib": "lib/SYNO.Core.DirectoryServiceCheck.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "check_essential_spn",
                "check_duplicate_spn",
                "check_gpo",
                "check_machine_conflict",
                "check_machine_password",
                "check_time_sync",
                "check_winbind_alive",
                "check_smb_conf",
                "check_domain_files",
                "check_dc_connection",
                "check_winbind_get",
                "check_userget",
                "check_trust_direction",
                "check_trustrpc"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.DirectoryServiceCheck.LDAP": {
        "lib": "lib/SYNO.Core.DirectoryServiceCheck.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "check_member_attr",
                "check_server_address",
                "check_auth_info",
                "check_profile",
                "check_user_name_empty",
                "check_user_name_dup",
                "check_user_id_empty",
                "check_user_id_type",
                "check_user_id_dup",
                "check_group_name_empty",
                "check_group_name_dup",
                "check_group_id_empty",
                "check_group_id_type",
                "check_group_id_dup",
                "check_samba_schema",
                "check_samba_ntpwd"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.DirectoryServiceCheck.Progress": {
        "lib": "lib/SYNO.Core.DirectoryServiceCheck.so",
        "maxVersion": 2,
        "methods": {
            "1": [
                "start_progress",
                "update_progress",
                "end_progress"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.DisableAdmin": {
        "lib": "lib/SYNO.Core.DisableAdmin.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get",
                "ignore"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.EW.Info": {
        "lib": "lib/SYNO.Core.EW.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.EventScheduler": {
        "lib": "lib/SYNO.Core.EventScheduler.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "list",
                "list_relate",
                "set_enable",
                "delete",
                "run",
                "get",
                "set",
                "create",
                "result_list",
                "result_get_file",
                "config_set",
                "config_get",
                "event_list"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.EventScheduler.Root": {
        "lib": "lib/SYNO.Core.EventScheduler.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "set",
                "create"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.ExternalDevice.Bluetooth": {
        "lib": "lib/libwebapi-Bluetooth.so",
        "maxVersion": 2,
        "methods": {
            "1": [
                "list",
                "get",
                "set_discovery"
            ],
            "2": [
                "list",
                "get"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.ExternalDevice.Bluetooth.Device": {
        "lib": "lib/libwebapi-Bluetooth.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "create",
                "delete"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.ExternalDevice.Bluetooth.Settings": {
        "lib": "lib/libwebapi-Bluetooth.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get",
                "set"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.ExternalDevice.DefaultPermission": {
        "lib": "lib/SYNO.Core.ExternalDevice.DefaultPermission.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get",
                "set"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.ExternalDevice.Printer": {
        "lib": "lib/SYNO.Core.ExternalDevice.Printer.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "list",
                "print_test",
                "clean"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.ExternalDevice.Printer.BonjourSharing": {
        "lib": "lib/SYNO.Core.ExternalDevice.Printer.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get",
                "set"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.ExternalDevice.Printer.Driver": {
        "lib": "lib/SYNO.Core.ExternalDevice.Printer.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "list"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.ExternalDevice.Printer.Network": {
        "lib": "lib/SYNO.Core.ExternalDevice.Printer.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "eject",
                "get",
                "set",
                "create"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.ExternalDevice.Printer.Network.Host": {
        "lib": "lib/SYNO.Core.ExternalDevice.Printer.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.ExternalDevice.Printer.OAuth": {
        "lib": "lib/SYNO.Core.ExternalDevice.Printer.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get",
                "set",
                "revoke"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.ExternalDevice.Printer.USB": {
        "lib": "lib/SYNO.Core.ExternalDevice.Printer.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "eject",
                "get",
                "set",
                "release_mfp"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.ExternalDevice.Storage.EUnit": {
        "lib": "lib/SYNO.Core.ExternalDevice.Storage.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "list"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.ExternalDevice.Storage.Setting": {
        "lib": "lib/SYNO.Core.ExternalDevice.Storage.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get",
                "set"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.ExternalDevice.Storage.USB": {
        "lib": "lib/SYNO.Core.ExternalDevice.Storage.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "list",
                "format",
                "eject"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.ExternalDevice.Storage.eSATA": {
        "lib": "lib/SYNO.Core.ExternalDevice.Storage.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "list",
                "format",
                "eject"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.ExternalDevice.UPS": {
        "lib": "lib/libwebapiups.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get",
                "set"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Factory.Config": {
        "lib": "lib/SYNO.Core.Factory.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "download"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Factory.Manutild": {
        "lib": "lib/SYNO.Core.Factory.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "set",
                "get"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.File": {
        "lib": "lib/webapi_file.so",
        "maxVersion": 2,
        "methods": {
            "1": [
                "save",
                "load",
                "list",
                "create"
            ],
            "2": [
                "save",
                "load",
                "list",
                "create"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.File.Thumbnail": {
        "lib": "lib/webapi_file.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.FileHandle": {
        "lib": "lib/SYNO.Core.FileHandle.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get",
                "export",
                "kick",
                "kickable_list",
                "delete_db"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.FileServ.AFP": {
        "lib": "lib/SYNO.Core.FileServ.AFP.so",
        "maxVersion": 2,
        "methods": {
            "1": [
                "set",
                "get"
            ],
            "2": [
                "set",
                "get"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.FileServ.FTP": {
        "lib": "lib/SYNO.Core.FileServ.FTP.so",
        "maxVersion": 3,
        "methods": {
            "1": [
                "set",
                "get"
            ],
            "2": [
                "set",
                "get"
            ],
            "3": [
                "set",
                "get"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.FileServ.FTP.ChrootUser": {
        "lib": "lib/SYNO.Core.FileServ.FTP.so",
        "maxVersion": 2,
        "methods": {
            "1": [
                "list",
                "delete",
                "add"
            ],
            "2": [
                "load",
                "save"
            ]
        },
        "minVersion": 2,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.FileServ.FTP.SFTP": {
        "lib": "lib/SYNO.Core.FileServ.FTP.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "set",
                "get"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.FileServ.FTP.Security": {
        "lib": "lib/SYNO.Core.FileServ.FTP.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "set",
                "get",
                "list_ftp_share"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.FileServ.NFS": {
        "lib": "lib/SYNO.Core.FileServ.NFS.so",
        "maxVersion": 3,
        "methods": {
            "1": [
                "set",
                "get"
            ],
            "2": [
                "set",
                "get"
            ],
            "3": [
                "set",
                "get"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.FileServ.NFS.AdvancedSetting": {
        "lib": "lib/SYNO.Core.FileServ.NFS.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "set",
                "get"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.FileServ.NFS.ConfBackup": {
        "lib": "lib/SYNO.Core.FileServ.NFS.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get_conf",
                "set_conf",
                "get_rules",
                "set_rules",
                "get_idmap",
                "set_idmap",
                "remove_keytab"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.FileServ.NFS.IDMap": {
        "lib": "lib/SYNO.Core.FileServ.NFS.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "list",
                "create",
                "set",
                "delete"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.FileServ.NFS.Kerberos": {
        "lib": "lib/SYNO.Core.FileServ.NFS.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get",
                "upload_key",
                "list"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.FileServ.NFS.SharePrivilege": {
        "lib": "lib/SYNO.Core.FileServ.NFS.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "load",
                "save"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.FileServ.ReflinkCopy": {
        "lib": "lib/SYNO.Core.FileServ.ReflinkCopy.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "set",
                "get"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.FileServ.Rsync.Account": {
        "lib": "lib/SYNO.Core.FileServ.Rsync.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "list",
                "create",
                "delete",
                "set"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.FileServ.SMB": {
        "lib": "/var/packages/SMBService/target/usr/syno/synoman/webapi/lib/SYNO.Core.FileServ.SMB.so",
        "maxVersion": 3,
        "methods": {
            "1": [
                "set",
                "get",
                "clean_cache"
            ],
            "2": [
                "set",
                "get",
                "clean_cache"
            ],
            "3": [
                "set",
                "get",
                "clean_cache"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.FileServ.SMB.ConfBackup": {
        "lib": "/var/packages/SMBService/target/usr/syno/synoman/webapi/lib/SYNO.Core.FileServ.SMB.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "import",
                "get",
                "export_extra",
                "translate"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.FileServ.SMB.Control": {
        "lib": "/var/packages/SMBService/target/usr/syno/synoman/webapi/lib/SYNO.Core.FileServ.SMB.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "close_share",
                "reload"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.FileServ.SMB.MSDFS": {
        "lib": "/var/packages/SMBService/target/usr/syno/synoman/webapi/lib/SYNO.Core.FileServ.SMB.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get_url",
                "probe",
                "dirsrv_auth",
                "test_start",
                "test_stop",
                "test_status",
                "set",
                "get"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.FileServ.ServiceDiscovery": {
        "lib": "lib/SYNO.Core.FileServ.ServiceDiscovery.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "set",
                "get"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.FileServ.ServiceDiscovery.WSTransfer": {
        "lib": "/var/packages/SMBService/target/usr/syno/synoman/webapi/lib/SYNO.Core.FileServ.SMB.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "set",
                "get"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Findhost": {
        "lib": "lib/SYNO.Core.Findhost.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "list"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Group": {
        "lib": "lib/SYNO.Core.Group.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "list",
                "get",
                "set",
                "delete",
                "create",
                "admin_check",
                "export_prepare",
                "export_prepare_status",
                "export_prepare_stop",
                "export"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Group.ExtraAdmin": {
        "lib": "lib/SYNO.Core.Group.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "set",
                "get",
                "add",
                "delete"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Group.Member": {
        "lib": "lib/SYNO.Core.Group.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "list",
                "add",
                "remove",
                "change",
                "admin_check"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Group.ValidLocalAdmin": {
        "lib": "lib/SYNO.Core.Group.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "list"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.GroupSettings": {
        "lib": "lib/SYNO.Core.UserSettings.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get",
                "apply"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Hardware.BeepControl": {
        "lib": "lib/libHardware.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get",
                "set",
                "stop_beep"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Hardware.FanSpeed": {
        "lib": "lib/libHardware.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get",
                "set"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Hardware.Hibernation": {
        "lib": "lib/libHardware.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get",
                "set"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Hardware.LCM": {
        "lib": "lib/libHardware.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get",
                "set"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Hardware.Led.Brightness": {
        "lib": "lib/libHardware.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get",
                "set",
                "update",
                "set_current_brightness",
                "get_static_data"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Hardware.MemoryLayout": {
        "lib": "lib/libHardware.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get",
                "set"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Hardware.NeedReboot": {
        "lib": "lib/libHardware.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get",
                "set"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Hardware.OOBManagement": {
        "lib": "lib/libHardware.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get",
                "set",
                "update",
                "list_blocked_ipv4",
                "exec"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Hardware.PowerRecovery": {
        "lib": "lib/libHardware.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get",
                "set"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Hardware.PowerSchedule": {
        "lib": "lib/libHardware.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "load",
                "save"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Hardware.RemoteFanStatus": {
        "lib": "lib/libHardware.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "update"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Hardware.SpectreMeltdown": {
        "lib": "lib/libHardware.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get",
                "set"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Hardware.VideoTranscoding": {
        "lib": "lib/libHardware.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get",
                "set"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Hardware.ZRAM": {
        "lib": "lib/libHardware.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get",
                "set"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Help": {
        "lib": "lib/SYNO.Core.Help.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get_tree",
                "get_search_result",
                "get_tutorial_tree",
                "get_online_help_url"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.ISCSI.FCTarget": {
        "lib": "/var/packages/ScsiTarget/target/lib/libsynoiscsiep.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "list",
                "get",
                "set",
                "enable",
                "disable",
                "map_lun",
                "unmap_lun"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.ISCSI.Host": {
        "lib": "/var/packages/ScsiTarget/target/lib/libsynoiscsiep.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "create",
                "delete",
                "list",
                "get",
                "set",
                "map_initiator",
                "unmap_initiator",
                "lun_acl_masks_set"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.ISCSI.LUN": {
        "lib": "/var/packages/ScsiTarget/target/lib/libsynoiscsiep.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "create",
                "create_feasibility_check",
                "delete",
                "list",
                "get",
                "set",
                "clone",
                "map_target",
                "unmap_target",
                "map_fctarget",
                "unmap_fctarget",
                "load_lun",
                "unload_lun",
                "take_snapshot",
                "stop_snapshot",
                "delete_snapshot",
                "list_snapshot",
                "get_snapshot",
                "set_snapshot",
                "set_sched_snapshot",
                "restore_snapshot",
                "clone_snapshot",
                "lock_snapshot",
                "unlock_snapshot",
                "export_to_file",
                "export",
                "import",
                "export_cancel",
                "import_cancel",
                "load_snapshot",
                "unload_snapshot",
                "map_vhost",
                "unmap_vhost",
                "loop_mount",
                "loop_unmount",
                "retry_stop",
                "set_whitelist",
                "stop_clone",
                "test_cloneability",
                "defrag",
                "stop_defrag",
                "top",
                "acl_masks_add",
                "acl_masks_set",
                "acl_masks_remove",
                "host_acl_masks_set",
                "lun_type_translate",
                "thick_lun_warn_size_get"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.ISCSI.Lunbkp": {
        "lib": "/var/packages/ScsiTarget/target/lib/libsynoiscsiep.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "backuplun_move",
                "target_connect",
                "target_disconnect",
                "lunbackup_start",
                "lunbackup_stop",
                "lunrestore_start",
                "lunrestore_stop",
                "lunbkp_progress_get",
                "lunbkp_bitmap_reset",
                "lunbkp_size_get",
                "get",
                "set",
                "remove",
                "lun_limit_check",
                "trg_limit_check",
                "uuid_get"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.ISCSI.Node": {
        "lib": "/var/packages/ScsiTarget/target/lib/libsynoiscsiep.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "create",
                "delete",
                "list",
                "get",
                "set",
                "add_node",
                "delete_node",
                "create_session",
                "delete_session",
                "log_list",
                "log_clear",
                "log_export",
                "welcome_set"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.ISCSI.Replication": {
        "lib": "/var/packages/ScsiTarget/target/lib/libsynoiscsiep.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "create",
                "delete",
                "list",
                "get",
                "set",
                "send_snapshot",
                "stop_sending",
                "promote",
                "demote",
                "compute_unsync_size",
                "get_unsync_size",
                "check_node",
                "create_task",
                "delete_task",
                "get_base_version",
                "get_token",
                "clean_token"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.ISCSI.Target": {
        "lib": "/var/packages/ScsiTarget/target/lib/libsynoiscsiep.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "create",
                "create_default_target",
                "create_feasibility_check",
                "delete",
                "list",
                "get",
                "set",
                "enable",
                "disable",
                "map_lun",
                "unmap_lun",
                "acl_masks_set",
                "acl_masks_add",
                "acl_masks_remove",
                "network_portals_add",
                "network_portals_remove"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.ISCSI.VMware": {
        "lib": "/var/packages/ScsiTarget/target/lib/libsynoiscsiep.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "register",
                "deregister",
                "list"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.MediaIndexing": {
        "lib": "lib/mediaindexing.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "status",
                "reindex"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.MediaIndexing.IndexFolder": {
        "lib": "lib/mediaindexing-indexfolder.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get",
                "set"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.MediaIndexing.MediaConverter": {
        "lib": "lib/mediaindexing-mediaconverter.so",
        "maxVersion": 2,
        "methods": {
            "1": [
                "status",
                "pause",
                "resume"
            ],
            "2": [
                "status",
                "pause",
                "resume"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.MediaIndexing.Scheduler": {
        "lib": "lib/mediaindexing-scheduler.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get",
                "set"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.MediaIndexing.ThumbnailQuality": {
        "lib": "lib/mediaindexing.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get",
                "set"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.MyDSCenter": {
        "lib": "lib/mydscenter.so",
        "maxVersion": 2,
        "methods": {
            "1": [
                "register"
            ],
            "2": [
                "login",
                "login_by_key",
                "logout",
                "register",
                "query",
                "get_iframe_info",
                "handle_apikey_error",
                "oauth_login"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.MyDSCenter.Account": {
        "lib": "lib/mydscenter.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get",
                "set"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.MyDSCenter.Login": {
        "lib": "lib/mydscenter.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "login",
                "authkey_login",
                "oauth_login",
                "pkce_config_get",
                "pkce_login"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.MyDSCenter.Logout": {
        "lib": "lib/mydscenter.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "pkce_logout"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.MyDSCenter.Purchase": {
        "lib": "lib/mydscenter.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "list"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Network": {
        "lib": "lib/libwebapi-Network.so",
        "maxVersion": 2,
        "methods": {
            "1": [
                "get",
                "set",
                "test_internet"
            ],
            "2": [
                "get",
                "set"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Network.Authentication": {
        "lib": "lib/libwebapi-Authentication.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get",
                "set",
                "test"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Network.Authentication.Cert": {
        "lib": "lib/libwebapi-Authentication.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "upload",
                "delete"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Network.Bond": {
        "lib": "lib/libwebapi-Bond.so",
        "maxVersion": 2,
        "methods": {
            "1": [
                "get",
                "set",
                "list",
                "create",
                "delete",
                "set_mode",
                "create_check",
                "delete_check"
            ],
            "2": [
                "get",
                "set",
                "list",
                "create",
                "delete",
                "set_mode",
                "create_check",
                "delete_check"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Network.Ethernet": {
        "lib": "lib/libwebapi-Ethernet.so",
        "maxVersion": 2,
        "methods": {
            "1": [
                "get",
                "list",
                "set",
                "DAD"
            ],
            "2": [
                "get",
                "list",
                "set"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Network.Ethernet.External": {
        "lib": "lib/libwebapi-Ethernet.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "check"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Network.IPv6": {
        "lib": "lib/libwebapi-ipv6.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get",
                "set"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Network.IPv6.Router": {
        "lib": "lib/libwebapi-IPv6Router.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get",
                "set"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Network.IPv6.Router.Prefix": {
        "lib": "lib/libwebapi-IPv6Router.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "add",
                "remove",
                "list"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Network.Interface": {
        "lib": "lib/libwebapi-Network-Interface.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "list"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Network.MACClone": {
        "lib": "lib/libwebapi-MacClone.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get",
                "set",
                "getRemoteMACAddress"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Network.OVS": {
        "lib": "lib/libwebapi-OVS.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "list",
                "set",
                "get",
                "check"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Network.PPPoE": {
        "lib": "lib/libwebapi-PPPoE.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get",
                "set",
                "list",
                "connect",
                "disconnect"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Network.PPPoE.Relay": {
        "lib": "lib/libwebapi-PPPoE.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get",
                "set"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Network.Proxy": {
        "lib": "lib/libwebapi-Proxy.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get",
                "set"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Network.Router.Gateway.List": {
        "lib": "lib/libwebapi-Router.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get",
                "set"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Network.Router.Static.Route": {
        "lib": "lib/libwebapi-Router.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get",
                "set",
                "test",
                "tablesget"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Network.TrafficControl.RouterRules": {
        "lib": "lib/SYNO.Core.Network.TrafficControl.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "load",
                "save"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Network.TrafficControl.Rules": {
        "lib": "lib/SYNO.Core.Network.TrafficControl.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "load",
                "save"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Network.UPnPServer": {
        "lib": "lib/libwebapi-UPnPServer.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get",
                "set"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Network.VPN": {
        "lib": "lib/libwebapi-VPNClient.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "check",
                "connect",
                "disconnect"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Network.VPN.L2TP": {
        "lib": "lib/libwebapi-VPNClient.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "create",
                "set",
                "delete",
                "list"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Network.VPN.OpenVPN": {
        "lib": "lib/libwebapi-VPNClient.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "create",
                "set",
                "delete",
                "list"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Network.VPN.OpenVPN.CA": {
        "lib": "lib/libwebapi-VPNClient.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "upload"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Network.VPN.OpenVPNWithConf": {
        "lib": "lib/libwebapi-VPNClient.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "create",
                "set",
                "delete",
                "list"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Network.VPN.OpenVPNWithConf.Certs": {
        "lib": "lib/libwebapi-VPNClient.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "upload"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Network.VPN.PPTP": {
        "lib": "lib/libwebapi-VPNClient.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "create",
                "set",
                "delete",
                "list"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Network.WOL": {
        "lib": "lib/libwebapi-WOL.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "wake"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.NormalUser": {
        "lib": "lib/SYNO.Core.User.so",
        "maxVersion": 2,
        "methods": {
            "1": [
                "get"
            ],
            "2": [
                "set"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.NormalUser.LoginNotify": {
        "lib": "lib/SYNO.Core.User.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "check"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Notification.Advance.CustomizedData": {
        "lib": "lib/libNotification.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get",
                "set",
                "reset"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Notification.Advance.FilterSettings": {
        "lib": "lib/libNotification.so",
        "maxVersion": 2,
        "methods": {
            "1": [
                "get",
                "set",
                "list"
            ],
            "2": [
                "get",
                "set",
                "list"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Notification.Advance.FilterSettings.Profile": {
        "lib": "lib/libNotification.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "list"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Notification.Advance.FilterSettings.Template": {
        "lib": "lib/libNotification.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "delete",
                "create",
                "list",
                "get",
                "set"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Notification.Advance.Variables": {
        "lib": "lib/libNotification.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get",
                "set"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Notification.Advance.WarningPercentage": {
        "lib": "lib/libNotification.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "set"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Notification.CMS": {
        "lib": "lib/libNotification.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "send_test"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Notification.CMS.Conf": {
        "lib": "lib/libNotification.so",
        "maxVersion": 2,
        "methods": {
            "1": [
                "get",
                "set"
            ],
            "2": [
                "get",
                "set"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Notification.Line": {
        "lib": "lib/SYNO.Core.Notification.Line.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get_bot_info",
                "refresh_token",
                "verify_token",
                "revoke_token",
                "send_test"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Notification.Mail": {
        "lib": "lib/SYNO.Core.Notification.Mail.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "refresh_token",
                "send_test"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Notification.Mail.Auth": {
        "lib": "lib/SYNO.Core.Notification.Mail.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get",
                "set"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Notification.Mail.Conf": {
        "lib": "lib/SYNO.Core.Notification.Mail.so",
        "maxVersion": 2,
        "methods": {
            "1": [
                "getEnable",
                "get",
                "set"
            ],
            "2": [
                "set",
                "get"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Notification.Mail.Oauth": {
        "lib": "lib/SYNO.Core.Notification.Mail.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "outlook",
                "gmail"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Notification.Mail.Profile.Conf": {
        "lib": "lib/SYNO.Core.Notification.Mail.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "create",
                "set",
                "delete"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Notification.Push": {
        "lib": "lib/libNotification.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "send_test"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Notification.Push.AuthToken": {
        "lib": "lib/libNotification.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Notification.Push.Conf": {
        "lib": "lib/libNotification.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get",
                "set",
                "status"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Notification.Push.Mail": {
        "lib": "lib/libNotification.so",
        "maxVersion": 2,
        "methods": {
            "1": [
                "get",
                "set",
                "status",
                "send_verify",
                "send_test"
            ],
            "2": [
                "get",
                "set"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Notification.Push.Mobile": {
        "lib": "lib/libNotification.so",
        "maxVersion": 2,
        "methods": {
            "1": [
                "set",
                "list",
                "unpair"
            ],
            "2": [
                "list",
                "unpair"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Notification.Push.Webhook.Provider": {
        "lib": "lib/libNotification.so",
        "maxVersion": 2,
        "methods": {
            "1": [
                "delete",
                "create",
                "set",
                "get",
                "list",
                "send_test"
            ],
            "2": [
                "delete",
                "create",
                "set",
                "get",
                "list",
                "send_test"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Notification.SMS": {
        "lib": "lib/SYNO.Core.Notification.SMS.so",
        "maxVersion": 2,
        "methods": {
            "1": [
                "send_test"
            ],
            "2": [
                "send_test"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Notification.SMS.Conf": {
        "lib": "lib/SYNO.Core.Notification.SMS.so",
        "maxVersion": 2,
        "methods": {
            "1": [
                "get",
                "set"
            ],
            "2": [
                "set",
                "get"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Notification.SMS.Provider": {
        "lib": "lib/SYNO.Core.Notification.SMS.so",
        "maxVersion": 2,
        "methods": {
            "1": [
                "list",
                "get",
                "set",
                "create",
                "delete"
            ],
            "2": [
                "delete",
                "create",
                "set",
                "get",
                "list"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Notification.Sysnotify": {
        "lib": "lib/SYNO.Core.Notification.Sysnotify.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "notify"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.OAuth.Scope": {
        "lib": "lib/webapi_entry_oauth.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "delete",
                "set",
                "get"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.OAuth.Server": {
        "lib": "lib/webapi_entry_oauth.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "delete",
                "set",
                "get"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.OTP": {
        "lib": "lib/SYNO.Core.User.so",
        "maxVersion": 3,
        "methods": {
            "1": [
                "get",
                "reset"
            ],
            "2": [
                "get",
                "reset",
                "get_one",
                "save_mail",
                "get_qrcode",
                "edit_secret_key",
                "auth_tmp_code"
            ],
            "3": [
                "get_qrcode",
                "auth_tmp_code"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.OTP.Admin": {
        "lib": "lib/SYNO.Core.User.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "reset",
                "get",
                "get_otp_status"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.OTP.EnforcePolicy": {
        "lib": "lib/SYNO.Core.User.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get",
                "set",
                "list",
                "custom_set"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.OTP.Ex": {
        "lib": "lib/SYNO.Core.User.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "save_mail",
                "get_qrcode",
                "edit_secret_key",
                "auth_tmp_code"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.OTP.Mail": {
        "lib": "lib/SYNO.Core.User.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "send"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Package": {
        "lib": "lib/SYNO.Core.Package.so",
        "maxVersion": 2,
        "methods": {
            "1": [
                "list",
                "list_status",
                "get",
                "feasibility_check",
                "get_queue",
                "get_current_candidate_operation",
                "get_future_candidate_operation",
                "bulk"
            ],
            "2": [
                "list"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Package.AutoUpgrade.Progress": {
        "lib": "lib/SYNO.Core.Package.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Package.Control": {
        "lib": "lib/SYNO.Core.Package.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "start",
                "stop"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Package.FakeIFrame": {
        "lib": "lib/SYNO.Core.Package.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Package.Feed": {
        "lib": "lib/SYNO.Core.Package.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "list",
                "set",
                "add",
                "delete"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Package.Info": {
        "lib": "lib/SYNO.Core.Package.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Package.Installation": {
        "lib": "lib/SYNO.Core.Package.so",
        "maxVersion": 2,
        "methods": {
            "1": [
                "status",
                "cancel",
                "check",
                "upload",
                "install",
                "upgrade",
                "clean",
                "delete",
                "get_queue"
            ],
            "2": [
                "check"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Package.Installation.Download": {
        "lib": "lib/SYNO.Core.Package.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "check"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Package.Legal.PreRelease": {
        "lib": "lib/SYNO.Core.Package.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "set"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Package.Log": {
        "lib": "lib/SYNO.Core.Package.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Package.MyDS": {
        "lib": "lib/SYNO.Core.Package.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Package.MyDS.Purchase": {
        "lib": "lib/SYNO.Core.Package.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "save"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Package.Progress": {
        "lib": "lib/SYNO.Core.Package.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Package.Screenshot": {
        "lib": "lib/SYNO.Core.Package.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Package.Screenshot.Server": {
        "lib": "lib/SYNO.Core.Package.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Package.Server": {
        "lib": "lib/SYNO.Core.Package.so",
        "maxVersion": 2,
        "methods": {
            "1": [
                "list",
                "check"
            ],
            "2": [
                "list"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Package.Setting": {
        "lib": "lib/SYNO.Core.Package.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get",
                "set"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Package.Setting.Update": {
        "lib": "lib/SYNO.Core.Package.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "add",
                "delete"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Package.Setting.Volume": {
        "lib": "lib/SYNO.Core.Package.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "set",
                "get"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Package.Thumb": {
        "lib": "lib/SYNO.Core.Package.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Package.Thumb.Server": {
        "lib": "lib/SYNO.Core.Package.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Package.Uninstallation": {
        "lib": "lib/SYNO.Core.Package.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "uninstall"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.PersonalNotification.Device": {
        "lib": "lib/SYNO.Core.PersonalNotification.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "unpair",
                "list"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.PersonalNotification.Event": {
        "lib": "lib/SYNO.Core.PersonalNotification.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "fire"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.PersonalNotification.Filter": {
        "lib": "lib/SYNO.Core.PersonalNotification.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "set",
                "list"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.PersonalNotification.Mobile": {
        "lib": "lib/SYNO.Core.PersonalNotification.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "unpair",
                "stat",
                "pair",
                "list"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.PersonalNotification.Settings": {
        "lib": "lib/SYNO.Core.PersonalNotification.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "set",
                "get"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.PersonalSettings": {
        "lib": "/usr/syno/synoman/webapi/lib/SYNO.Core.PersonalSettings.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "wallpaper",
                "photo",
                "quota"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.PhotoViewer": {
        "lib": "/usr/syno/synoman/webapi/lib/SYNO.Core.PhotoViewer.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "list",
                "info"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Polling.Data": {
        "lib": "/usr/syno/synoman/webman/modules/PollingTask/webapi/SYNO.Core.Polling.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "set",
                "get"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.PortForwarding": {
        "lib": "lib/SYNO.Core.PortForwarding.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "detect_pre_check",
                "detect",
                "detect_status",
                "get_current_process"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.PortForwarding.Compatibility": {
        "lib": "lib/SYNO.Core.PortForwarding.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "test",
                "test_status",
                "stop",
                "upload"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.PortForwarding.RouterConf": {
        "lib": "lib/SYNO.Core.PortForwarding.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "set",
                "get"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.PortForwarding.RouterInfo": {
        "lib": "lib/SYNO.Core.PortForwarding.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.PortForwarding.RouterList": {
        "lib": "lib/SYNO.Core.PortForwarding.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get",
                "list",
                "update"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.PortForwarding.Rules": {
        "lib": "lib/SYNO.Core.PortForwarding.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "save",
                "force_save",
                "save_status",
                "load",
                "test",
                "test_status"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.PortForwarding.Rules.Serv": {
        "lib": "lib/SYNO.Core.PortForwarding.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "check",
                "test",
                "test_status"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Promotion.Info": {
        "lib": "lib/SYNO.Core.Promotion.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "is_AMFA_enabled",
                "hide_promotion",
                "get_old_patch",
                "is_2FA_enabled"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Promotion.PreInstall": {
        "lib": "lib/SYNO.Core.Promotion.PreInstall.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "set_never_show",
                "set_installing_pkg",
                "set_not_install",
                "set_pkg_should_install",
                "set_preinstall_cnt",
                "start_preinstall",
                "get_install_confirm",
                "get_never_show",
                "get_pkg_should_install",
                "enable_preinstall"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.QuickConnect": {
        "lib": "/var/packages/QuickConnect/target/webapi/SYNO.Core.QuickConnect.so",
        "maxVersion": 3,
        "methods": {
            "1": [
                "status",
                "get",
                "set",
                "set_server_alias"
            ],
            "2": [
                "get",
                "set",
                "set_server_alias"
            ],
            "3": [
                "get_misc_config",
                "set_misc_config",
                "check_availability",
                "junior_unregister",
                "register_crt",
                "get_server_alias"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.QuickConnect.Hostname": {
        "lib": "/var/packages/QuickConnect/target/webapi/SYNO.Core.QuickConnect.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get_ip"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.QuickConnect.Permission": {
        "lib": "/var/packages/QuickConnect/target/webapi/SYNO.Core.QuickConnect.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get",
                "set"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.QuickConnect.RegisterSite": {
        "lib": "/var/packages/QuickConnect/target/webapi/SYNO.Core.QuickConnect.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.QuickConnect.SNI": {
        "lib": "/var/packages/QuickConnect/target/webapi/SYNO.Core.QuickConnect.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "set"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.QuickConnect.Upnp": {
        "lib": "/var/packages/QuickConnect/target/webapi/SYNO.Core.QuickConnect.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get",
                "set"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.QuickStart.Info": {
        "lib": "lib/SYNO.Core.QuickStart.so",
        "maxVersion": 3,
        "methods": {
            "1": [
                "load_ds_info",
                "check_permission",
                "hide_welcome",
                "set_udc",
                "load_confautobkp_info",
                "set_confautobkp"
            ],
            "2": [
                "load_ds_info",
                "check_permission",
                "hide_welcome",
                "set_udc",
                "set_mib",
                "load_mib_info"
            ],
            "3": [
                "load_ds_info",
                "check_permission",
                "hide_welcome",
                "set_udc",
                "set_mib",
                "load_mib_info",
                "set_wizard_step"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.QuickStart.Install": {
        "lib": "lib/SYNO.Core.QuickStart.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "install_pkgs",
                "install_sur",
                "check_progress",
                "notify_sur_failed"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Quota": {
        "lib": "lib/SYNO.Core.Quota.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get",
                "set",
                "inspect"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.RecycleBin": {
        "lib": "lib/SYNO.Core.RecycleBin.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "start",
                "stop",
                "get"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.RecycleBin.User": {
        "lib": "lib/SYNO.Core.RecycleBin.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "start",
                "stop",
                "get"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Region.Language": {
        "lib": "lib/SYNO.Core.Region.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get",
                "set"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Region.NTP": {
        "lib": "lib/SYNO.Core.Region.so",
        "maxVersion": 3,
        "methods": {
            "1": [
                "get",
                "set",
                "sync",
                "status",
                "listzone",
                "setzone",
                "ensure_ntp_sync_and_enable"
            ],
            "2": [
                "get",
                "set",
                "sync"
            ],
            "3": [
                "get",
                "set"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Region.NTP.DateTimeFormat": {
        "lib": "lib/SYNO.Core.Region.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get",
                "set"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Region.NTP.Server": {
        "lib": "lib/SYNO.Core.Region.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get",
                "set"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Report": {
        "lib": "/var/packages/StorageAnalyzer/target/webapi/SYNO.Core.Report.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "list",
                "get",
                "set",
                "create",
                "delete",
                "export"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Report.Analyzer": {
        "lib": "/var/packages/StorageAnalyzer/target/webapi/SYNO.Core.Report.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "getdata",
                "confirmduplicate"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Report.Analyzer.File": {
        "lib": "/var/packages/StorageAnalyzer/target/webapi/SYNO.Core.Report.so",
        "maxVersion": 2,
        "methods": {
            "1": [
                "duplicate",
                "status"
            ],
            "2": [
                "duplicate"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Report.Analyzer.Share": {
        "lib": "/var/packages/StorageAnalyzer/target/webapi/SYNO.Core.Report.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "usage",
                "user_quota",
                "file_type"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Report.Config": {
        "lib": "/var/packages/StorageAnalyzer/target/webapi/SYNO.Core.Report.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get",
                "set"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Report.History": {
        "lib": "/var/packages/StorageAnalyzer/target/webapi/SYNO.Core.Report.so",
        "maxVersion": 2,
        "methods": {
            "1": [
                "get"
            ],
            "2": [
                "get"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Report.Redirect": {
        "lib": "/var/packages/StorageAnalyzer/target/webapi/SYNO.Core.Report.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "open_report"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Report.Util": {
        "lib": "/var/packages/StorageAnalyzer/target/webapi/SYNO.Core.Report.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "delete_file",
                "list_share"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.ResetAdmin": {
        "lib": "lib/SYNO.Core.ResetAdmin.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get",
                "disable"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.SNMP": {
        "lib": "lib/SYNO.Core.SNMP.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "set",
                "get",
                "get_run_conf",
                "gen_run_conf",
                "gen_syno_conf"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Security.AutoBlock": {
        "lib": "lib/SYNO.Core.Security.AutoBlock.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get",
                "set"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Security.AutoBlock.Rules": {
        "lib": "lib/SYNO.Core.Security.AutoBlock.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get",
                "list",
                "delete",
                "create",
                "upload",
                "upload_deny_list",
                "download"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Security.DSM": {
        "lib": "lib/SYNO.Core.Security.DSM.so",
        "maxVersion": 5,
        "methods": {
            "1": [
                "get",
                "set"
            ],
            "2": [
                "get",
                "set"
            ],
            "3": [
                "get",
                "set"
            ],
            "4": [
                "get",
                "set"
            ],
            "5": [
                "get",
                "set"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Security.DSM.Embed": {
        "lib": "lib/SYNO.Core.Security.DSM.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get",
                "set"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Security.DSM.Proxy": {
        "lib": "lib/SYNO.Core.Security.DSM.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get",
                "set"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Security.DoS": {
        "lib": "lib/SYNO.Core.Security.DoS.so",
        "maxVersion": 2,
        "methods": {
            "1": [
                "get",
                "set"
            ],
            "2": [
                "get",
                "set"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Security.Firewall": {
        "lib": "lib/SYNO.Core.Security.Firewall.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "set",
                "get"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Security.Firewall.Adapter": {
        "lib": "lib/SYNO.Core.Security.Firewall.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "set",
                "get",
                "list"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Security.Firewall.Conf": {
        "lib": "lib/SYNO.Core.Security.Firewall.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get",
                "set"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Security.Firewall.Geoip": {
        "lib": "lib/SYNO.Core.Security.Firewall.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "list",
                "get"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Security.Firewall.Profile": {
        "lib": "lib/SYNO.Core.Security.Firewall.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "set",
                "get",
                "list",
                "rename",
                "create",
                "clone",
                "delete"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Security.Firewall.Profile.Apply": {
        "lib": "lib/SYNO.Core.Security.Firewall.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "start",
                "status",
                "stop"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Security.Firewall.Rules": {
        "lib": "lib/SYNO.Core.Security.Firewall.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "load",
                "save_start",
                "save_status",
                "save_stop"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Security.Firewall.Rules.Serv": {
        "lib": "lib/SYNO.Core.Security.Firewall.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "policy_check",
                "set"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.SecurityScan.Conf": {
        "lib": "lib/SYNO.Core.SecurityScan.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "set",
                "get",
                "time_get",
                "first_get",
                "group_enum",
                "group_set"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.SecurityScan.Operation": {
        "lib": "lib/SYNO.Core.SecurityScan.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "start",
                "stop",
                "fixme",
                "update"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.SecurityScan.Status": {
        "lib": "lib/SYNO.Core.SecurityScan.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "system_get",
                "rule_get"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Service": {
        "lib": "lib/SYNO.Core.Service.so",
        "maxVersion": 3,
        "methods": {
            "1": [
                "control"
            ],
            "2": [
                "get"
            ],
            "3": [
                "get"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Service.Conf": {
        "lib": "lib/SYNO.Core.Service.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get",
                "set"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Service.PortInfo": {
        "lib": "lib/SYNO.Core.Service.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "load"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Share": {
        "lib": "lib/SYNO.Core.Share.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "create",
                "set",
                "move_status",
                "stop_move",
                "get_all_move_task",
                "list",
                "get",
                "delete",
                "validate_delete",
                "validate_set",
                "restore",
                "clone"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Share.Crypto": {
        "lib": "lib/SYNO.Core.Share.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "decrypt",
                "encrypt",
                "validate_encrypt"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Share.Crypto.Key": {
        "lib": "lib/SYNO.Core.Share.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "export",
                "verify"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Share.CryptoFile": {
        "lib": "lib/SYNO.Core.Share.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "decrypt"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Share.KeyManager.AutoKey": {
        "lib": "lib/SYNO.Core.Share.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "list",
                "migrate"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Share.KeyManager.Key": {
        "lib": "lib/SYNO.Core.Share.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "list",
                "add",
                "add_by_file",
                "set",
                "delete",
                "mount",
                "umount",
                "export"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Share.KeyManager.MachineKey": {
        "lib": "lib/SYNO.Core.Share.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Share.KeyManager.Store": {
        "lib": "lib/SYNO.Core.Share.so",
        "maxVersion": 2,
        "methods": {
            "1": [
                "explore",
                "init",
                "verify",
                "change_passphrase",
                "change_location",
                "get",
                "set",
                "clone"
            ],
            "2": [
                "init"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Share.Migration": {
        "lib": "lib/SYNO.Core.Share.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "check",
                "start",
                "status",
                "stop"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Share.Migration.Task": {
        "lib": "lib/SYNO.Core.Share.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "list"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Share.Permission": {
        "lib": "lib/SYNO.Core.Share.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "list",
                "list_by_user",
                "list_by_group",
                "set",
                "set_by_user_group"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Share.PermissionReport": {
        "lib": "lib/SYNO.Core.Share.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "export",
                "export_status",
                "export_bg_status",
                "export_stop",
                "get_config"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Share.Snapshot": {
        "lib": "lib/SYNO.Core.Share.so",
        "maxVersion": 2,
        "methods": {
            "1": [
                "set_share_conf",
                "get_share_conf",
                "check_shareconf",
                "set_schedule",
                "get_schedule",
                "create",
                "list",
                "delete",
                "set"
            ],
            "2": [
                "list"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Sharing": {
        "lib": "/usr/syno/synoman/webapi/lib/SYNO.Core.Sharing.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "trigger_gc",
                "list",
                "delete",
                "set",
                "get",
                "logout"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Sharing.Initdata": {
        "lib": "/usr/syno/synoman/webapi/lib/SYNO.Core.Sharing.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Sharing.Login": {
        "lib": "/usr/syno/synoman/webapi/lib/SYNO.Core.Sharing.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "login"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Sharing.Session": {
        "lib": "/usr/syno/synoman/webapi/lib/SYNO.Core.Sharing.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.SmartBlock": {
        "lib": "lib/SYNO.Core.SmartBlock.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get",
                "set"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.SmartBlock.Device": {
        "lib": "lib/SYNO.Core.SmartBlock.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get",
                "set",
                "forget"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.SmartBlock.Trusted": {
        "lib": "lib/SYNO.Core.SmartBlock.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "list",
                "pardon"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.SmartBlock.Untrusted": {
        "lib": "lib/SYNO.Core.SmartBlock.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "list",
                "pardon"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.SmartBlock.User": {
        "lib": "lib/SYNO.Core.SmartBlock.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "enabled",
                "list",
                "trust",
                "distrust",
                "locked",
                "pardon"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Storage.Disk": {
        "lib": "StorageManager/libStorage.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "list",
                "get_smart_info",
                "do_smart_test",
                "get_smart_test_log",
                "do_performance_test",
                "stop_performance_test",
                "get_performance_test_status",
                "get_performance_test_log",
                "get_performance_test_info",
                "do_adv_test",
                "get_adv_test_log",
                "export_test_log",
                "export_test_log_content",
                "get_synoblock",
                "get_disk_led_status",
                "set_disk_led_status",
                "test_deactivate_disk",
                "deactivate_disk",
                "wcache_get",
                "wcache_set",
                "disk_test_log_get",
                "disk_health_prediction_log_get",
                "get_wdda_test_result",
                "disk_partition_rescan",
                "disks_info_get",
                "upload_offlinekit",
                "get_offlinekit_ver",
                "list_detail",
                "load_local_info",
                "load_info",
                "emit_info",
                "control_local_sofs_daemon",
                "control_sofs_daemon",
                "health_report_get",
                "health_record_update",
                "check_ui_open",
                "reset_metadata"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Storage.Disk.FWUpgrade": {
        "lib": "StorageManager/libStorage.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "list_drive",
                "list_drive_group",
                "prepare",
                "get_latest_auto_upgrade_result",
                "prepare_group",
                "get_upgrade_method",
                "start_upgrade",
                "get_firm_path",
                "upgrade",
                "defer_upgrade",
                "poll",
                "check_continue",
                "get_summary",
                "cancel_send_notification",
                "cancel_auto_launch",
                "send_notification",
                "send_notification_group"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Storage.Pool": {
        "lib": "StorageManager/libStorage.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "list"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Storage.Volume": {
        "lib": "StorageManager/libStorage.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "list",
                "get",
                "conf_get",
                "conf_set"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Storage.iSCSILUN": {
        "lib": "StorageManager/libStorage.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "repair",
                "expand_unallocated",
                "migrate",
                "data_scrubbing",
                "expand_by_add_disk",
                "cancel_data_scrubbing",
                "pause_data_scrubbing",
                "estimate_size",
                "delete_block_lun"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.SupportForm.Form": {
        "lib": "lib/libwebapi-SupportForm.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get",
                "upload"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.SupportForm.Log": {
        "lib": "lib/libwebapi-SupportForm.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "download",
                "collect",
                "status",
                "polling"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.SupportForm.Service": {
        "lib": "lib/libwebapi-SupportForm.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get",
                "set",
                "set_log_gen"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Synohdpack": {
        "lib": "/usr/syno/synoman/webapi/lib/SYNO.Core.Synohdpack.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "getHDIcon",
                "get"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.SyslogClient.FileTransfer": {
        "lib": "lib/SYNO.Core.SyslogClient.FileTransfer.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get",
                "set",
                "get_level",
                "set_level"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.SyslogClient.Log": {
        "lib": "lib/SYNO.Core.SyslogClient.Log.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "list",
                "export",
                "clear",
                "get_remotearch_subfolder"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.SyslogClient.PersonalActivity": {
        "lib": "lib/SYNO.Core.SyslogClient.PersonalActivity.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "loginhistory",
                "get",
                "clear"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.SyslogClient.Setting.Notify": {
        "lib": "lib/SYNO.Core.SyslogClient.Setting.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get",
                "set"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.SyslogClient.Status": {
        "lib": "lib/SYNO.Core.SyslogClient.Status.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "device_enum",
                "latestlog_get",
                "eps_get",
                "cnt_get"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.System": {
        "lib": "lib/SYNO.Core.System.so",
        "maxVersion": 3,
        "methods": {
            "1": [
                "shutdown",
                "reboot",
                "reset",
                "reset_check",
                "info",
                "poll"
            ],
            "2": [
                "shutdown",
                "reboot",
                "info"
            ],
            "3": [
                "info"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.System.Process": {
        "lib": "lib/SYNO.Core.System.Process.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "list"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.System.ProcessGroup": {
        "lib": "lib/SYNO.Core.System.ProcessGroup.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "list"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.System.ResetButton": {
        "lib": "lib/SYNO.Core.System.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get",
                "set"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.System.Status": {
        "lib": "/usr/syno/synoman/webapi/lib/SYNO.Core.System.Status.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.System.SystemHealth": {
        "lib": "lib/SYNO.Core.System.SystemHealth.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.System.Utilization": {
        "lib": "lib/SYNO.Core.System.Utilization.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.TFTP": {
        "lib": "lib/libCoreTFTP.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get",
                "set"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.TaskScheduler": {
        "lib": "lib/SYNO.Core.TaskScheduler.so",
        "maxVersion": 4,
        "methods": {
            "1": [
                "list",
                "get",
                "set_enable",
                "delete",
                "run",
                "set",
                "create",
                "view",
                "get_history_status_list",
                "get_history_log"
            ],
            "2": [
                "get",
                "set",
                "create",
                "list",
                "delete",
                "set_enable",
                "run"
            ],
            "3": [
                "get",
                "set",
                "create",
                "list"
            ],
            "4": [
                "get",
                "set",
                "create"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.TaskScheduler.Root": {
        "lib": "lib/SYNO.Core.TaskScheduler.so",
        "maxVersion": 4,
        "methods": {
            "1": [
                "set",
                "create"
            ],
            "2": [
                "set",
                "create"
            ],
            "3": [
                "set",
                "create"
            ],
            "4": [
                "set",
                "create"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Terminal": {
        "lib": "lib/SYNO.Core.Terminal.so",
        "maxVersion": 3,
        "methods": {
            "1": [
                "set",
                "get"
            ],
            "2": [
                "set",
                "get"
            ],
            "3": [
                "set",
                "get"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Theme.AppPortalLogin": {
        "lib": "lib/SYNO.Core.Theme.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get",
                "set"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Theme.Desktop": {
        "lib": "lib/SYNO.Core.Theme.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get",
                "set"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Theme.FileSharingLogin": {
        "lib": "lib/SYNO.Core.Theme.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get",
                "set"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Theme.Image": {
        "lib": "lib/SYNO.Core.Theme.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "list",
                "upload",
                "get",
                "clean_history"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Theme.Login": {
        "lib": "lib/SYNO.Core.Theme.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get",
                "set"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.TrustDevice": {
        "lib": "/usr/syno/synoman/webapi/lib/SYNO.Core.TrustDevice.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get",
                "delete",
                "delete_others",
                "create"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Tuned": {
        "lib": "lib/SYNO.Core.Tuned.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "profile_list",
                "profile_set",
                "config_get"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.UISearch": {
        "lib": "/usr/syno/synoman/webapi/lib/SYNO.Core.UISearch.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "uisearch"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Upgrade": {
        "lib": "lib/SYNO.Core.Upgrade.so",
        "maxVersion": 2,
        "methods": {
            "1": [
                "start",
                "progress",
                "status",
                "basic_status",
                "is_upgraded_from_dsm_62",
                "is_upgraded_from_dsm_700",
                "did_user_see_new_upgrade_setting_toast",
                "now_user_sees_new_upgrade_setting_toast",
                "check_having_upgradeable_drives"
            ],
            "2": [
                "status"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Upgrade.AutoUpgrade": {
        "lib": "lib/SYNO.Core.Upgrade.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "status",
                "cancel"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Upgrade.Cluster.Patch": {
        "lib": "lib/SYNO.Core.Upgrade.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "upload"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Upgrade.Cluster.Server": {
        "lib": "lib/SYNO.Core.Upgrade.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "check",
                "check_target"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Upgrade.Cluster.Server.Download": {
        "lib": "lib/SYNO.Core.Upgrade.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "start"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Upgrade.Group": {
        "lib": "lib/SYNO.Core.Upgrade.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "info"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Upgrade.Group.Download": {
        "lib": "lib/SYNO.Core.Upgrade.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "start",
                "cancel",
                "progress"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Upgrade.Group.Setting": {
        "lib": "lib/SYNO.Core.Upgrade.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get",
                "set"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Upgrade.GroupInstall": {
        "lib": "lib/SYNO.Core.Upgrade.so",
        "maxVersion": 2,
        "methods": {
            "1": [
                "start",
                "status"
            ],
            "2": [
                "start"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Upgrade.GroupInstall.Network": {
        "lib": "lib/SYNO.Core.Upgrade.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "set"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Upgrade.JuniorModeData": {
        "lib": "lib/SYNO.Core.Upgrade.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get_info",
                "cleanup"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Upgrade.Patch": {
        "lib": "lib/SYNO.Core.Upgrade.so",
        "maxVersion": 2,
        "methods": {
            "1": [
                "upload",
                "local_upload",
                "clean",
                "verify",
                "find_destination",
                "get_uploaded_patch_info"
            ],
            "2": [
                "verify",
                "find_destination"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Upgrade.PreCheck": {
        "lib": "lib/SYNO.Core.Upgrade.so",
        "maxVersion": 2,
        "methods": {
            "1": [
                "start"
            ],
            "2": [
                "start"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Upgrade.RemoteAction": {
        "lib": "lib/SYNO.Core.Upgrade.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "start"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Upgrade.Server": {
        "lib": "lib/SYNO.Core.Upgrade.so",
        "maxVersion": 4,
        "methods": {
            "1": [
                "check"
            ],
            "2": [
                "check"
            ],
            "3": [
                "check"
            ],
            "4": [
                "check"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Upgrade.Server.Download": {
        "lib": "lib/SYNO.Core.Upgrade.so",
        "maxVersion": 2,
        "methods": {
            "1": [
                "start",
                "cancel",
                "clean",
                "progress"
            ],
            "2": [
                "start",
                "progress"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Upgrade.Setting": {
        "lib": "lib/SYNO.Core.Upgrade.so",
        "maxVersion": 4,
        "methods": {
            "1": [
                "get",
                "set"
            ],
            "2": [
                "get",
                "set"
            ],
            "3": [
                "get",
                "set"
            ],
            "4": [
                "get",
                "set"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.User": {
        "lib": "lib/SYNO.Core.User.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "list",
                "get",
                "set",
                "delete",
                "create",
                "parse_user_list",
                "import",
                "import_status",
                "import_stop",
                "export_prepare",
                "export_prepare_status",
                "export_prepare_stop",
                "export",
                "invite"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.User.Group": {
        "lib": "lib/SYNO.Core.User.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "join",
                "join_stop",
                "join_list",
                "join_status",
                "get"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.User.Home": {
        "lib": "lib/SYNO.Core.User.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get",
                "move_check",
                "validate_set",
                "set",
                "status",
                "stop"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.User.PasswordConfirm": {
        "lib": "lib/SYNO.Core.User.so",
        "maxVersion": 2,
        "methods": {
            "1": [
                "auth"
            ],
            "2": [
                "auth"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.User.PasswordExpiry": {
        "lib": "lib/SYNO.Core.User.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get",
                "set"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.User.PasswordMeter": {
        "lib": "lib/SYNO.Core.User.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "evaluate"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.User.PasswordPolicy": {
        "lib": "lib/SYNO.Core.User.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get",
                "set",
                "check"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.User.UsernamePolicy": {
        "lib": "lib/SYNO.Core.User.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "list"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.UserSettings": {
        "lib": "lib/SYNO.Core.UserSettings.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get",
                "apply"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Virtualization.Host.Capability": {
        "lib": "lib/SYNO.Core.Virtualization.Host.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.VolEncKeepKey": {
        "lib": "lib/SYNO.Core.VolEncKeepKey.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get",
                "ignore"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Web.DSM": {
        "lib": "lib/SYNO.Core.Web.so",
        "maxVersion": 2,
        "methods": {
            "1": [
                "get",
                "set"
            ],
            "2": [
                "get",
                "set"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Web.DSM.External": {
        "lib": "lib/SYNO.Core.Web.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get",
                "set"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Web.Security.HTTPCompression": {
        "lib": "lib/SYNO.Core.Web.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get",
                "set"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Core.Web.Security.TLSProfile": {
        "lib": "lib/SYNO.Core.Web.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get",
                "set"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    }
}