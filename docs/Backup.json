{
    "SYNO.Backup.App": {
        "lib": "lib/SYNO.Backup.App.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get_icon"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Backup.App.Backup": {
        "lib": "lib/SYNO.Backup.App.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "list",
                "mysql_check",
                "surveillance_check"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Backup.App.Restore": {
        "lib": "lib/SYNO.Backup.App.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "list",
                "mysql_check",
                "surveillance_check"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Backup.App2.Backup": {
        "lib": "/var/packages/HyperBackup/target/webapi/SYNO.Backup.so",
        "maxVersion": 2,
        "methods": {
            "1": [
                "get"
            ],
            "2": [
                "list"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Backup.App2.Restore": {
        "lib": "/var/packages/HyperBackup/target/webapi/SYNO.Backup.so",
        "maxVersion": 2,
        "methods": {
            "1": [
                "list_install"
            ],
            "2": [
                "list"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Backup.Config.AutoBackup": {
        "lib": "lib/SYNO.Backup.Config.so",
        "maxVersion": 2,
        "methods": {
            "1": [
                "set",
                "get",
                "backup",
                "list",
                "restore",
                "get_meta",
                "download_private_key",
                "upload_private_key",
                "status"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Backup.Config.Backup": {
        "lib": "lib/SYNO.Backup.Config.so",
        "maxVersion": 2,
        "methods": {
            "1": [
                "list",
                "start",
                "status",
                "download"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Backup.Config.Restore": {
        "lib": "lib/SYNO.Backup.Config.so",
        "maxVersion": 2,
        "methods": {
            "1": [
                "upload",
                "list",
                "delete",
                "list_conflict",
                "check",
                "start",
                "status"
            ],
            "2": [
                "list"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Backup.Lunbackup": {
        "lib": "/var/packages/HyperBackup/target/webapi/SYNO.Backup.so",
        "maxVersion": 2,
        "methods": {
            "1": [
                "apply_lun",
                "restore_lun",
                "enum_lun",
                "check_dir",
                "check_lun",
                "test_connections",
                "enum_remote_share",
                "remote_version_check",
                "enum_local_lun_dir",
                "enum_net_lun_dir",
                "enum_local_restore_lun_name",
                "enum_net_restore_lun_name",
                "load_lun_bkp_conf",
                "get_self_host",
                "is_bkp_set_conflict",
                "get_local_dest_dir",
                "enum_local_bkp_dest",
                "net_bkp_host",
                "load_default_adv_schedule",
                "get_remote_dest_dir",
                "enum_local_share",
                "enum_volume",
                "load_schedule",
                "delete",
                "bkpnow",
                "cancel",
                "restore_cancel",
                "load_task",
                "load_restore_progress",
                "load_dest_status",
                "do_cksum",
                "get_cksum_status"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Backup.Repository": {
        "lib": "/var/packages/HyperBackup/target/webapi/SYNO.Backup.so",
        "maxVersion": 2,
        "methods": {
            "1": [
                "list",
                "delete",
                "create",
                "get",
                "set",
                "find",
                "mount_fireball"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Backup.Repository.Certificate": {
        "lib": "/var/packages/HyperBackup/target/webapi/SYNO.Backup.so",
        "maxVersion": 2,
        "methods": {
            "1": [
                "verify",
                "ignore"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Backup.Repository.LoginPort": {
        "lib": "/var/packages/HyperBackup/target/webapi/SYNO.Backup.so",
        "maxVersion": 2,
        "methods": {
            "1": [
                "get"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Backup.Restore": {
        "lib": "/var/packages/HyperBackup/target/webapi/SYNO.Backup.so",
        "maxVersion": 2,
        "methods": {
            "1": [
                "cancel",
                "status"
            ],
            "2": [
                "restore"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Backup.Service.NetworkBackup": {
        "lib": "lib/SYNO.Core.FileServ.Rsync.so",
        "maxVersion": 1,
        "methods": {
            "1": [
                "get",
                "set"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Backup.Share.Restore": {
        "lib": "/var/packages/HyperBackup/target/webapi/SYNO.Backup.so",
        "maxVersion": 2,
        "methods": {
            "1": [
                "list"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Backup.Source.Folder": {
        "lib": "/var/packages/HyperBackup/target/webapi/SYNO.Backup.so",
        "maxVersion": 2,
        "methods": {
            "1": [
                "list"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Backup.Storage.AmazonCloudDrive.Container": {
        "lib": "/var/packages/HyperBackup/target/webapi/SYNO.Backup.Storage.AmazonCloudDrive.so",
        "maxVersion": 2,
        "methods": {
            "1": [
                "list",
                "create"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Backup.Storage.Azure.Container": {
        "lib": "/var/packages/HyperBackup/target/webapi/SYNO.Backup.Storage.Azure.so",
        "maxVersion": 2,
        "methods": {
            "1": [
                "list",
                "create"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Backup.Storage.Connect.Network": {
        "lib": "/var/packages/HyperBackup/target/webapi/SYNO.Backup.so",
        "maxVersion": 2,
        "methods": {
            "1": [
                "list"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Backup.Storage.Dropbox.Container": {
        "lib": "/var/packages/HyperBackup/target/webapi/SYNO.Backup.Storage.Dropbox.so",
        "maxVersion": 2,
        "methods": {
            "1": [
                "list",
                "create"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Backup.Storage.GoogleDrive.Container": {
        "lib": "/var/packages/HyperBackup/target/webapi/SYNO.Backup.Storage.GoogleDrive.so",
        "maxVersion": 2,
        "methods": {
            "1": [
                "list",
                "create"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Backup.Storage.HiDrive.Container": {
        "lib": "/var/packages/HyperBackup/target/webapi/SYNO.Backup.Storage.HiDrive.so",
        "maxVersion": 2,
        "methods": {
            "1": [
                "list",
                "create"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Backup.Storage.OpenStack.Container": {
        "lib": "/var/packages/HyperBackup/target/webapi/SYNO.Backup.Storage.OpenStack.so",
        "maxVersion": 2,
        "methods": {
            "1": [
                "list",
                "create"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Backup.Storage.OpenStack.Region": {
        "lib": "/var/packages/HyperBackup/target/webapi/SYNO.Backup.Storage.OpenStack.so",
        "maxVersion": 2,
        "methods": {
            "1": [
                "list"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Backup.Storage.S3.Bucket": {
        "lib": "/var/packages/HyperBackup/target/webapi/SYNO.Backup.Storage.S3.so",
        "maxVersion": 2,
        "methods": {
            "1": [
                "list",
                "create"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Backup.Storage.Share.Local": {
        "lib": "/var/packages/HyperBackup/target/webapi/SYNO.Backup.so",
        "maxVersion": 2,
        "methods": {
            "1": [
                "list"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Backup.Storage.Share.Network": {
        "lib": "/var/packages/HyperBackup/target/webapi/SYNO.Backup.so",
        "maxVersion": 2,
        "methods": {
            "1": [
                "list"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Backup.Storage.Share.Rsync": {
        "lib": "/var/packages/HyperBackup/target/webapi/SYNO.Backup.so",
        "maxVersion": 2,
        "methods": {
            "1": [
                "list"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Backup.Storage.WebDAV.Container": {
        "lib": "/var/packages/HyperBackup/target/webapi/SYNO.Backup.Storage.WebDAV.so",
        "maxVersion": 2,
        "methods": {
            "1": [
                "list",
                "create"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Backup.Storage.hubiC.Container": {
        "lib": "/var/packages/HyperBackup/target/webapi/SYNO.Backup.Storage.hubiC.so",
        "maxVersion": 2,
        "methods": {
            "1": [
                "list",
                "create"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Backup.Target": {
        "lib": "/var/packages/HyperBackup/target/webapi/SYNO.Backup.so",
        "maxVersion": 2,
        "methods": {
            "1": [
                "create",
                "delete",
                "set",
                "list",
                "get_candidate_dir",
                "get",
                "get_ai_info",
                "private_key_download_by_password",
                "create_cache",
                "error_detect",
                "error_detect_cancel",
                "status",
                "damage_report_download"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Backup.Target.Config": {
        "lib": "/var/packages/HyperBackup/target/webapi/SYNO.Backup.so",
        "maxVersion": 2,
        "methods": {
            "1": [
                "list"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Backup.Task": {
        "lib": "/var/packages/HyperBackup/target/webapi/SYNO.Backup.so",
        "maxVersion": 2,
        "methods": {
            "1": [
                "list",
                "delete",
                "backup",
                "resume",
                "cancel",
                "suspend",
                "discard",
                "cancel_and_discard",
                "create",
                "relink",
                "import",
                "reauth",
                "set",
                "status",
                "get",
                "mark",
                "get_support_cloud"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Backup.Version": {
        "lib": "/var/packages/HyperBackup/target/webapi/SYNO.Backup.so",
        "maxVersion": 2,
        "methods": {
            "1": [
                "lock",
                "delete",
                "list_folder",
                "summary",
                "rotate",
                "detail"
            ],
            "2": [
                "list"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    },
    "SYNO.Backup.Version.History": {
        "lib": "/var/packages/HyperBackup/target/webapi/SYNO.Backup.so",
        "maxVersion": 2,
        "methods": {
            "1": [
                "get"
            ]
        },
        "minVersion": 1,
        "path": "entry.cgi",
        "requestFormat": "JSON"
    }
}